// Generated by purs bundle 0.12.0
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];                 
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS["Data.Symbol"] = PS["Data.Symbol"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  exports.cons = function (head) {
    return function (tail) {
      return [head].concat(tail);
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
    "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };

  exports.unsafeDelete = function (label) {
    return function (rec) {
      var copy = {};
      for (var key in rec) {
        if (key !== label && {}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }
      return copy;
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
  exports["unsafeDelete"] = $foreign.unsafeDelete;
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS["Type.Data.RowList"] = PS["Type.Data.RowList"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Show = function (show) {
      this.show = show;
  };
  var ShowRecordFields = function (showRecordFields) {
      this.showRecordFields = showRecordFields;
  };
  var showString = new Show($foreign.showStringImpl);
  var showRecordFieldsNil = new ShowRecordFields(function (v) {
      return function (v1) {
          return [  ];
      };
  });
  var showRecordFields = function (dict) {
      return dict.showRecordFields;
  };
  var showRecord = function (dictRowToList) {
      return function (dictShowRecordFields) {
          return new Show(function (record) {
              var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
              if (v.length === 0) {
                  return "{}";
              };
              return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
          });
      };
  };
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);  
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show line 20, column 1 - line 20, column 37: " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  var showRecordFieldsCons = function (dictIsSymbol) {
      return function (dictShowRecordFields) {
          return function (dictShow) {
              return new ShowRecordFields(function (v) {
                  return function (record) {
                      var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      var focus = Record_Unsafe.unsafeGet(key)(record);
                      return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                  };
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["ShowRecordFields"] = ShowRecordFields;
  exports["showRecordFields"] = showRecordFields;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
  exports["showRecord"] = showRecord;
  exports["showRecordFieldsNil"] = showRecordFieldsNil;
  exports["showRecordFieldsCons"] = showRecordFieldsCons;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_Row = PS["Type.Data.Row"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Show = PS["Data.Show"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS["Data.Void"] = PS["Data.Void"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Eq = function (eq) {
      this.eq = eq;
  };
  var EqRecord = function (eqRecord) {
      this.eqRecord = eqRecord;
  };
  var eqVoid = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqUnit = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.refEq);
  var eqRowNil = new EqRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return true;
          };
      };
  });
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function (dictRowToList) {
      return function (dictEqRecord) {
          return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
      };
  };                                    
  var eqInt = new Eq($foreign.refEq);
  var eqChar = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var eqRowCons = function (dictEqRecord) {
      return function (dictCons) {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return new EqRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var get = Record_Unsafe.unsafeGet(key);
                              return eq(dictEq)(get(ra))(get(rb)) && tail;
                          };
                      };
                  });
              };
          };
      };
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["EqRecord"] = EqRecord;
  exports["eqRecord"] = eqRecord;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqVoid"] = eqVoid;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupUnit = new Semigroup(function (v) {
      return function (v1) {
          return Data_Unit.unit;
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupUnit"] = semigroupUnit;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];                 
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];                 
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
    "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_Row = PS["Type.Data.Row"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["ringInt"] = ringInt;
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];                 
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  };
  var ordVoid = new Ord(function () {
      return Data_Eq.eqVoid;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordUnit = new Ord(function () {
      return Data_Eq.eqUnit;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordUnit"] = ordUnit;
  exports["ordVoid"] = ordVoid;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];                 
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  var flap = function (dictFunctor) {
      return function (ff) {
          return function (x) {
              return map(dictFunctor)(function (f) {
                  return f(x);
              })(ff);
          };
      };
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["flap"] = flap;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];                 
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];                 
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["when"] = when;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];                 
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS["Data.CommutativeRing"] = PS["Data.CommutativeRing"] || {});
(function(exports) {
    "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.EuclideanRing"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];                 
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  var degree = function (dict) {
      return dict.degree;
  };
  exports["EuclideanRing"] = EuclideanRing;
  exports["degree"] = degree;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];                 
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Extend"];
  var Control_Category = PS["Control.Category"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];                 
  var Extend = function (Functor0, extend) {
      this.Functor0 = Functor0;
      this.extend = extend;
  };                       
  var extend = function (dict) {
      return dict.extend;
  };
  var duplicate = function (dictExtend) {
      return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["Extend"] = Extend;
  exports["extend"] = extend;
  exports["duplicate"] = duplicate;
})(PS["Control.Extend"] = PS["Control.Extend"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];                 
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Type_Data_RowList = PS["Type.Data.RowList"];                 
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };
  var monoidUnit = new Monoid(function () {
      return Data_Semigroup.semigroupUnit;
  }, Data_Unit.unit);
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");                    
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, function (v) {
          return mempty(dictMonoid);
      });
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidUnit"] = monoidUnit;
  exports["monoidFn"] = monoidFn;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Just) {
              return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
          };
          if (v instanceof Nothing) {
              return "Nothing";
          };
          throw new Error("Failed pattern match at Data.Maybe line 206, column 1 - line 206, column 47: " + [ v.constructor.name ]);
      });
  };
  var semigroupMaybe = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              if (v instanceof Nothing) {
                  return v1;
              };
              if (v1 instanceof Nothing) {
                  return v;
              };
              if (v instanceof Just && v1 instanceof Just) {
                  return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Maybe line 175, column 1 - line 175, column 62: " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var monoidMaybe = function (dictSemigroup) {
      return new Data_Monoid.Monoid(function () {
          return semigroupMaybe(dictSemigroup);
      }, Nothing.value);
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 218, column 1 - line 218, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var $__unused = function (dictPartial1) {
              return function ($dollar35) {
                  return $dollar35;
              };
          };
          return $__unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 269, column 1 - line 269, column 46: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 67, column 1 - line 67, column 35: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 126, column 1 - line 126, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["semigroupMaybe"] = semigroupMaybe;
  exports["monoidMaybe"] = monoidMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["showMaybe"] = showMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Additive = function (x) {
      return x;
  };
  var semigroupAdditive = function (dictSemiring) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_Semiring.add(dictSemiring)(v)(v1);
          };
      });
  };
  var monoidAdditive = function (dictSemiring) {
      return new Data_Monoid.Monoid(function () {
          return semigroupAdditive(dictSemiring);
      }, Data_Semiring.zero(dictSemiring));
  };
  exports["Additive"] = Additive;
  exports["semigroupAdditive"] = semigroupAdditive;
  exports["monoidAdditive"] = monoidAdditive;
})(PS["Data.Monoid.Additive"] = PS["Data.Monoid.Additive"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Semigroup_First = PS["Data.Semigroup.First"];
  var Data_Semigroup_Last = PS["Data.Semigroup.Last"];
  var Prelude = PS["Prelude"];                 
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var under = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($71) {
                      return unwrap(dictNewtype1)(f(wrap(dictNewtype)($71)));
                  };
              };
          };
      };
  };
  var un = function (dictNewtype) {
      return function (v) {
          return unwrap(dictNewtype);
      };
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($78) {
                      return wrap(dictNewtype1)(f(unwrap(dictNewtype)($78)));
                  };
              };
          };
      };
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var newtypeAdditive = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Additive.Additive);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($80) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($80)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["un"] = un;
  exports["alaF"] = alaF;
  exports["over"] = over;
  exports["under"] = under;
  exports["newtypeAdditive"] = newtypeAdditive;
  exports["newtypeDisj"] = newtypeDisj;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });                                  
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["newtypeFirst"] = newtypeFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($195) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var indexl = function (dictFoldable) {
      return function (idx) {
          var go = function (cursor) {
              return function (a) {
                  if (cursor.elem instanceof Data_Maybe.Just) {
                      return cursor;
                  };
                  var $109 = cursor.pos === idx;
                  if ($109) {
                      return {
                          elem: new Data_Maybe.Just(a),
                          pos: cursor.pos
                      };
                  };
                  return {
                      pos: cursor.pos + 1 | 0,
                      elem: cursor.elem
                  };
              };
          };
          return function ($196) {
              return (function (v) {
                  return v.elem;
              })(foldl(dictFoldable)(go)({
                  elem: Data_Maybe.Nothing.value,
                  pos: 0
              })($196));
          };
      };
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var length = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(function (c) {
              return function (v) {
                  return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
              };
          })(Data_Semiring.zero(dictSemiring));
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          return function ($199) {
              return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["sequence_"] = sequence_;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["indexl"] = indexl;
  exports["length"] = length;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Prelude = PS["Prelude"];                 
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var traversableMaybe = new Traversable(function () {
      return Data_Foldable.foldableMaybe;
  }, function () {
      return Data_Maybe.functorMaybe;
  }, function (dictApplicative) {
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
          };
          throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name ]);
      };
  }, function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Traversable line 86, column 1 - line 86, column 47: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["traversableMaybe"] = traversableMaybe;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];                 
  var Const = function (x) {
      return x;
  };
  var newtypeConst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Const);
  var functorConst = new Data_Functor.Functor(function (f) {
      return function (m) {
          return m;
      };
  });
  var applyConst = function (dictSemigroup) {
      return new Control_Apply.Apply(function () {
          return functorConst;
      }, function (v) {
          return function (v1) {
              return Data_Semigroup.append(dictSemigroup)(v)(v1);
          };
      });
  };
  var applicativeConst = function (dictMonoid) {
      return new Control_Applicative.Applicative(function () {
          return applyConst(dictMonoid.Semigroup0());
      }, function (v) {
          return Data_Monoid.mempty(dictMonoid);
      });
  };
  exports["Const"] = Const;
  exports["newtypeConst"] = newtypeConst;
  exports["functorConst"] = functorConst;
  exports["applyConst"] = applyConst;
  exports["applicativeConst"] = applicativeConst;
})(PS["Data.Const"] = PS["Data.Const"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];                 
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["rmap"] = rmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];                 
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 35, column 8 - line 35, column 52: " + [ m.constructor.name ]);
      };
  });                                                                                                     
  var fromRight = function (dictPartial) {
      return function (v) {
          var $__unused = function (dictPartial1) {
              return function ($dollar63) {
                  return $dollar63;
              };
          };
          return $__unused(dictPartial)((function () {
              if (v instanceof Right) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Either line 243, column 1 - line 243, column 52: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqEither = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  if (x instanceof Left && y instanceof Left) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                  };
                  if (x instanceof Right && y instanceof Right) {
                      return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
                  };
                  return false;
              };
          });
      };
  };
  var ordEither = function (dictOrd) {
      return function (dictOrd1) {
          return new Data_Ord.Ord(function () {
              return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
          }, function (x) {
              return function (y) {
                  if (x instanceof Left && y instanceof Left) {
                      return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                  };
                  if (x instanceof Left) {
                      return Data_Ordering.LT.value;
                  };
                  if (y instanceof Left) {
                      return Data_Ordering.GT.value;
                  };
                  if (x instanceof Right && y instanceof Right) {
                      return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
                  };
                  throw new Error("Failed pattern match at Data.Either line 173, column 8 - line 173, column 64: " + [ x.constructor.name, y.constructor.name ]);
              };
          });
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 220, column 1 - line 220, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 40, column 1 - line 40, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 76, column 1 - line 76, column 41: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["fromRight"] = fromRight;
  exports["hush"] = hush;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["eqEither"] = eqEither;
  exports["ordEither"] = ordEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor = PS["Data.Functor"];                 
  var Comonad = function (Extend0, extract) {
      this.Extend0 = Extend0;
      this.extract = extract;
  };
  var extract = function (dict) {
      return dict.extract;
  };
  exports["Comonad"] = Comonad;
  exports["extract"] = extract;
})(PS["Control.Comonad"] = PS["Control.Comonad"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];                 
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var extendIdentity = new Control_Extend.Extend(function () {
      return functorIdentity;
  }, function (f) {
      return function (m) {
          return f(m);
      };
  });
  var comonadIdentity = new Control_Comonad.Comonad(function () {
      return extendIdentity;
  }, function (v) {
      return v;
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
  exports["extendIdentity"] = extendIdentity;
  exports["comonadIdentity"] = comonadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["foreachE"] = $foreign.foreachE;
})(PS["Effect"] = PS["Effect"] || {});
(function(exports) {
    "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Ref"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];                 
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify"] = modify;
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["modify'"] = $foreign["modify'"];
  exports["write"] = $foreign.write;
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Ref = PS["Effect.Ref"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  }; 
  var monadRecEffect = new MonadRec(function () {
      return Effect.monadEffect;
  }, function (f) {
      return function (a) {
          var fromDone = function (v) {
              var $__unused = function (dictPartial1) {
                  return function ($dollar19) {
                      return $dollar19;
                  };
              };
              return $__unused()((function () {
                  if (v instanceof Done) {
                      return v.value0;
                  };
                  throw new Error("Failed pattern match at Control.Monad.Rec.Class line 111, column 30 - line 111, column 44: " + [ v.constructor.name ]);
              })());
          };
          return function __do() {
              var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
              (function () {
                  while (!(function __do() {
                      var v1 = Effect_Ref.read(v)();
                      if (v1 instanceof Loop) {
                          var v2 = f(v1.value0)();
                          var v3 = Effect_Ref.write(v2)(v)();
                          return false;
                      };
                      if (v1 instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class line 102, column 22 - line 107, column 28: " + [ v1.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(v))();
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["monadRecEffect"] = monadRecEffect;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Type_Equality = PS["Type.Equality"];                 
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var swap = function (v) {
      return new Tuple(v.value1, v.value0);
  };
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["swap"] = swap;
  exports["functorTuple"] = functorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
    "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Unfoldable1"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  };
  var unfoldr1 = function (dict) {
      return dict.unfoldr1;
  };
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldr1"] = unfoldr1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($155) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($155));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 81, column 12 - line 83, column 30: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          return function ($156) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($156));
          };
      };
  });
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List line 368, column 3 - line 368, column 19: " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["fromFoldable"] = fromFoldable;
  exports["null"] = $$null;
  exports["reverse"] = reverse;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var singleton = function ($160) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
  };
  var cons = function (y) {
      return function (v) {
          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
      };
  };
  exports["singleton"] = singleton;
  exports["cons"] = cons;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Ap = (function () {
      function Ap(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ap.create = function (value0) {
          return function (value1) {
              return new Ap(value0, value1);
          };
      };
      return Ap;
  })();
  var mkAp = function (fba) {
      return function (fb) {
          return new Ap(fba, fb);
      };
  };
  var liftFreeAp = Lift.create;
  var goLeft = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_valStack) {
              return function ($copy_nat) {
                  return function ($copy_func) {
                      return function ($copy_count) {
                          var $tco_var_dictApplicative = $copy_dictApplicative;
                          var $tco_var_fStack = $copy_fStack;
                          var $tco_var_valStack = $copy_valStack;
                          var $tco_var_nat = $copy_nat;
                          var $tco_var_func = $copy_func;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                              if (func instanceof Pure) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: Control_Applicative.pure(dictApplicative)(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Lift) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: nat(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Ap) {
                                  $tco_var_dictApplicative = dictApplicative;
                                  $tco_var_fStack = fStack;
                                  $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                  $tco_var_nat = nat;
                                  $tco_var_func = func.value0;
                                  $copy_count = count + 1 | 0;
                                  return;
                              };
                              throw new Error("Failed pattern match at Control.Applicative.Free line 102, column 41 - line 105, column 81: " + [ func.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                          };
                          return $tco_result;
                      };
                  };
              };
          };
      };
  };
  var goApply = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_vals) {
              return function ($copy_gVal) {
                  var $tco_var_dictApplicative = $copy_dictApplicative;
                  var $tco_var_fStack = $copy_fStack;
                  var $tco_var_vals = $copy_vals;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictApplicative, fStack, vals, gVal) {
                      if (fStack instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return new Data_Either.Left(gVal);
                      };
                      if (fStack instanceof Data_List_Types.Cons) {
                          var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                          var $14 = fStack.value0.count === 1;
                          if ($14) {
                              if (fStack.value1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return new Data_Either.Left(gRes);
                              };
                              $tco_var_dictApplicative = dictApplicative;
                              $tco_var_fStack = fStack.value1;
                              $tco_var_vals = vals;
                              $copy_gVal = gRes;
                              return;
                          };
                          if (vals instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Data_Either.Left(gRes);
                          };
                          if (vals instanceof Data_List_Types.Cons) {
                              $tco_done = true;
                              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                  func: gRes,
                                  count: fStack.value0.count - 1 | 0
                              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free line 83, column 11 - line 88, column 50: " + [ vals.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free line 72, column 3 - line 88, column 50: " + [ fStack.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var functorFreeAp = new Data_Functor.Functor(function (f) {
      return function (x) {
          return mkAp(new Pure(f))(x);
      };
  });
  var foldFreeAp = function (dictApplicative) {
      return function (nat) {
          return function (z) {
              var go = function ($copy_v) {
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v) {
                      if (v.value1.value0 instanceof Pure) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free line 54, column 17 - line 56, column 24: " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Lift) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free line 57, column 17 - line 59, column 24: " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Ap) {
                          var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                          $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                          return;
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free line 53, column 5 - line 64, column 1: " + [ v.value1.value0.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($copy_v);
                  };
                  return $tco_result;
              };
              return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
          };
      };
  };
  var retractFreeAp = function (dictApplicative) {
      return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
  var applyFreeAp = new Control_Apply.Apply(function () {
      return functorFreeAp;
  }, function (fba) {
      return function (fb) {
          return mkAp(fba)(fb);
      };
  });
  var applicativeFreeAp = new Control_Applicative.Applicative(function () {
      return applyFreeAp;
  }, Pure.create);
  var hoistFreeAp = function (f) {
      return foldFreeAp(applicativeFreeAp)(function ($37) {
          return liftFreeAp(f($37));
      });
  };
  exports["liftFreeAp"] = liftFreeAp;
  exports["retractFreeAp"] = retractFreeAp;
  exports["foldFreeAp"] = foldFreeAp;
  exports["hoistFreeAp"] = hoistFreeAp;
  exports["functorFreeAp"] = functorFreeAp;
  exports["applyFreeAp"] = applyFreeAp;
  exports["applicativeFreeAp"] = applicativeFreeAp;
})(PS["Control.Applicative.Free"] = PS["Control.Applicative.Free"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Comonad_Trans_Class = PS["Control.Comonad.Trans.Class"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var StoreT = function (x) {
      return x;
  };         
  var functorStoreT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return StoreT(new Data_Tuple.Tuple(Data_Functor.map(dictFunctor)(function (h) {
                  return function ($28) {
                      return f(h($28));
                  };
              })(v.value0), v.value1));
          };
      });
  };
  var extendStoreT = function (dictExtend) {
      return new Control_Extend.Extend(function () {
          return functorStoreT(dictExtend.Functor0());
      }, function (f) {
          return function (v) {
              return StoreT(new Data_Tuple.Tuple(Control_Extend.extend(dictExtend)(function (w$prime) {
                  return function (s$prime) {
                      return f(StoreT(new Data_Tuple.Tuple(w$prime, s$prime)));
                  };
              })(v.value0), v.value1));
          };
      });
  }; 
  var comonadStoreT = function (dictComonad) {
      return new Control_Comonad.Comonad(function () {
          return extendStoreT(dictComonad.Extend0());
      }, function (v) {
          return Control_Comonad.extract(dictComonad)(v.value0)(v.value1);
      });
  };
  exports["StoreT"] = StoreT;
  exports["functorStoreT"] = functorStoreT;
  exports["extendStoreT"] = extendStoreT;
  exports["comonadStoreT"] = comonadStoreT;
})(PS["Control.Comonad.Store.Trans"] = PS["Control.Comonad.Store.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Comonad_Env_Trans = PS["Control.Comonad.Env.Trans"];
  var Control_Comonad_Store_Trans = PS["Control.Comonad.Store.Trans"];
  var Control_Comonad_Traced_Trans = PS["Control.Comonad.Traced.Trans"];
  var Control_Comonad_Trans_Class = PS["Control.Comonad.Trans.Class"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var ComonadStore = function (Comonad0, peek, pos) {
      this.Comonad0 = Comonad0;
      this.peek = peek;
      this.pos = pos;
  };
  var pos = function (dict) {
      return dict.pos;
  };
  var peek = function (dict) {
      return dict.peek;
  };
  var peeks = function (dictComonadStore) {
      return function (f) {
          return function (x) {
              return peek(dictComonadStore)(f(pos(dictComonadStore)(x)))(x);
          };
      };
  };
  var seeks = function (dictComonadStore) {
      return function (f) {
          return function ($18) {
              return peeks(dictComonadStore)(f)(Control_Extend.duplicate((dictComonadStore.Comonad0()).Extend0())($18));
          };
      };
  };
  var comonadStoreStoreT = function (dictComonad) {
      return new ComonadStore(function () {
          return Control_Comonad_Store_Trans.comonadStoreT(dictComonad);
      }, function (s) {
          return function (v) {
              return Control_Comonad.extract(dictComonad)(v.value0)(s);
          };
      }, function (v) {
          return v.value1;
      });
  };
  exports["peek"] = peek;
  exports["pos"] = pos;
  exports["ComonadStore"] = ComonadStore;
  exports["peeks"] = peeks;
  exports["seeks"] = seeks;
  exports["comonadStoreStoreT"] = comonadStoreStoreT;
})(PS["Control.Comonad.Store.Class"] = PS["Control.Comonad.Store.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Comonad_Store_Class = PS["Control.Comonad.Store.Class"];
  var Control_Comonad_Store_Trans = PS["Control.Comonad.Store.Trans"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var store = function (f) {
      return function (x) {
          return Control_Comonad_Store_Trans.StoreT(new Data_Tuple.Tuple(f, x));
      };
  };
  var runStore = function (v) {
      return Data_Tuple.swap(Data_Functor.map(Data_Tuple.functorTuple)(Data_Newtype.unwrap(Data_Identity.newtypeIdentity))(Data_Tuple.swap(v)));
  };
  exports["runStore"] = runStore;
  exports["store"] = store;
})(PS["Control.Comonad.Store"] = PS["Control.Comonad.Store"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  }; 
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
              return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
          });
      };
  };
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];                 
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var put = function (dictMonadState) {
      return function (s) {
          return state(dictMonadState)(function (v) {
              return new Data_Tuple.Tuple(Data_Unit.unit, s);
          });
      };
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              var s$prime = f(s);
              return new Data_Tuple.Tuple(s$prime, s$prime);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["put"] = put;
  exports["modify"] = modify;
  exports["modify_"] = modify_;
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Prelude = PS["Prelude"];                 
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS["Control.Monad.Trans.Class"] = PS["Control.Monad.Trans.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Effect = PS["Effect"];                 
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };                                                         
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS["Effect.Class"] = PS["Effect.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, function ($102) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                                                           
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  exports["runExcept"] = runExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function ($104) {
                              return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
                          });
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 57, column 1 - line 57, column 71: " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var v2 = v1.value0(Data_Unit.unit);
                      if (v2 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                  })(v3.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 52, column 20 - line 54, column 67: " + [ v3.constructor.name ]);
                          });
                      };
                      if (v2 instanceof Bind) {
                          return Data_Exists.runExists(function (v3) {
                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                              })));
                          })(v2.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 50, column 5 - line 55, column 98: " + [ v2.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 47, column 3 - line 47, column 75: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var runFreeT = function (dictFunctor) {
      return function (dictMonadRec) {
          return function (interp) {
              var go = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 126, column 3 - line 126, column 63: " + [ v.constructor.name ]);
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
          };
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return go(v.value0);
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 80, column 15 - line 82, column 25: " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applyFreeT"] = applyFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadFreeT"] = monadFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS["Control.Monad.Free.Trans"] = PS["Control.Monad.Free.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Ref = PS["Effect.Ref"];
  var Prelude = PS["Prelude"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["Parallel"] = Parallel;
})(PS["Control.Parallel.Class"] = PS["Control.Parallel.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];                 
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              return function ($17) {
                  return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
                      return Control_Parallel_Class.parallel(dictParallel)(f($18));
                  })($17));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["parTraverse_"] = parTraverse_;
  exports["parSequence_"] = parSequence_;
})(PS["Control.Parallel"] = PS["Control.Parallel"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                 
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Emit = (function () {
      function Emit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Emit.create = function (value0) {
          return function (value1) {
              return new Emit(value0, value1);
          };
      };
      return Emit;
  })();
  var runProcess = function (dictMonadRec) {
      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($186) {
          return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186));
      });
  };
  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
          };
      };
  });
  var loop = function (dictFunctor) {
      return function (dictMonad) {
          return function (me) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                  return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
              })(Data_Unit.unit);
          };
      };
  };
  var fuseWithL = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (zap) {
                      return function (fs) {
                          return function (gs) {
                              var go = function (v) {
                                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                                              return Control_Monad_Free_Trans.freeT(function (v3) {
                                                  return go(t);
                                              });
                                          })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                                      });
                                  }));
                              };
                              return Control_Monad_Free_Trans.freeT(function (v) {
                                  return go(new Data_Tuple.Tuple(fs, gs));
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictParallel) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                          if (v1 instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(v1.value0));
                                          };
                                          if (v1 instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v2) {
                                                      return go(t);
                                                  });
                                              })(v1.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine line 79, column 5 - line 81, column 63: " + [ v1.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Emit(f(v.value0), g(v.value1));
          };
      };
  });
  var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
  var connect = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      return f(v.value1)(v1(v.value0));
                  };
              };
          });
      };
  };
  var emit = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
      };
  };
  var producer = function (dictMonad) {
      return function (recv) {
          return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
              if (v instanceof Data_Either.Left) {
                  return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
              };
              if (v instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
              };
              throw new Error("Failed pattern match at Control.Coroutine line 125, column 3 - line 127, column 29: " + [ v.constructor.name ]);
          }));
      };
  };
  var pullFrom = function (dictMonadRec) {
      return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
          return function (v) {
              return function (v1) {
                  return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
              };
          };
      });
  };
  var $$await = function (dictMonad) {
      return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["loop"] = loop;
  exports["runProcess"] = runProcess;
  exports["fuseWith"] = fuseWith;
  exports["fuseWithL"] = fuseWithL;
  exports["Emit"] = Emit;
  exports["emit"] = emit;
  exports["producer"] = producer;
  exports["await"] = $$await;
  exports["connect"] = connect;
  exports["pullFrom"] = pullFrom;
  exports["bifunctorEmit"] = bifunctorEmit;
  exports["functorEmit"] = functorEmit;
  exports["profunctorAwait"] = profunctorAwait;
  exports["functorAwait"] = functorAwait;
})(PS["Control.Coroutine"] = PS["Control.Coroutine"] || {});
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          });
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt, canceler;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;
          canceler  = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            step   = bhead(step);
            if (btail === null) {
              bhead = null;
            } else {
              bhead = btail._1;
              btail = btail._2;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item.
                if (interrupt && interrupt !== tmp) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
    "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
    "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Exception"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var $$throw = function ($1) {
      return $foreign.throwException($foreign.error($1));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function(exports) {
    "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Unsafe"];
  var Effect = PS["Effect"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Aff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Unsafe = PS["Effect.Unsafe"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };
  var suspendAff = $foreign._fork(false);
  var functorParAff = new Data_Functor.Functor($foreign._parAffMap);
  var functorAff = new Data_Functor.Functor($foreign._map);
  var forkAff = $foreign._fork(true);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff line 395, column 21 - line 397, column 31: " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff line 390, column 20 - line 394, column 3: " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff line 385, column 12 - line 387, column 20: " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign._makeFiber(ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var v = makeFiber(aff)();
          v.run();
          return v;
      };
  };
  var launchAff_ = function ($49) {
      return Data_Functor["void"](Effect.functorEffect)(launchAff($49));
  };                                 
  var delay = function (v) {
      return $foreign._delay(Data_Either.Right.create, v);
  };
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, $foreign._parAffApply);
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign._bind);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign._pure);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign._liftEffect);
  var effectCanceler = function ($50) {
      return Canceler(Data_Function["const"](Effect_Class.liftEffect(monadEffectAff)($50)));
  };
  var joinFiber = function (v) {
      return $foreign.makeAff(function (k) {
          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
      });
  };
  var functorFiber = new Data_Functor.Functor(function (f) {
      return function (t) {
          return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
      };
  });
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
              });
          });
      };
  };
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign._throwError);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign._catchError);                                     
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)(function ($51) {
              return Effect_Class.liftEffect(monadEffectAff)(k($51));
          })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
      };
  };
  var parallelAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign._sequential);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, function ($53) {
      return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($53));
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (k) {
      var go = function (a) {
          return Control_Bind.bind(bindAff)(k(a))(function (v) {
              if (v instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeAff)(v.value0);
              };
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return go(v.value0);
              };
              throw new Error("Failed pattern match at Effect.Aff line 99, column 7 - line 101, column 22: " + [ v.constructor.name ]);
          });
      };
      return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["Canceler"] = Canceler;
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["runAff"] = runAff;
  exports["runAff_"] = runAff_;
  exports["forkAff"] = forkAff;
  exports["suspendAff"] = suspendAff;
  exports["delay"] = delay;
  exports["killFiber"] = killFiber;
  exports["joinFiber"] = joinFiber;
  exports["nonCanceler"] = nonCanceler;
  exports["effectCanceler"] = effectCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["functorFiber"] = functorFiber;
  exports["makeAff"] = $foreign.makeAff;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Effect_Aff = PS["Effect.Aff"];
  var Prelude = PS["Prelude"];
  var MonadFork = function (Functor1, Monad0, fork, join, suspend) {
      this.Functor1 = Functor1;
      this.Monad0 = Monad0;
      this.fork = fork;
      this.join = join;
      this.suspend = suspend;
  };
  var suspend = function (dict) {
      return dict.suspend;
  };
  var monadForkAff = new MonadFork(function () {
      return Effect_Aff.functorFiber;
  }, function () {
      return Effect_Aff.monadAff;
  }, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
  var join = function (dict) {
      return dict.join;
  };
  var fork = function (dict) {
      return dict.fork;
  };
  exports["fork"] = fork;
  exports["join"] = join;
  exports["suspend"] = suspend;
  exports["MonadFork"] = MonadFork;
  exports["monadForkAff"] = monadForkAff;
})(PS["Control.Monad.Fork.Class"] = PS["Control.Monad.Fork.Class"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue line 83, column 1 - line 83, column 63: " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["CatQueue"] = CatQueue;
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS["Data.CatQueue"] = PS["Data.CatQueue"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_CatQueue = PS["Data.CatQueue"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Prelude = PS["Prelude"];                 
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (cat) {
          if (v instanceof CatNil) {
              return cat;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(cat));
          };
          throw new Error("Failed pattern match at Data.CatList line 111, column 1 - line 111, column 54: " + [ v.constructor.name, cat.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList line 126, column 3 - line 126, column 59: " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList line 122, column 14 - line 124, column 67: " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $45 = Data_CatQueue["null"](v.value1);
              if ($45) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList line 102, column 1 - line 102, column 61: " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = function (v) {
      return function (v1) {
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatNil) {
              return v1;
          };
          return link(v)(v1);
      };
  }; 
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["CatNil"] = CatNil;
  exports["CatCons"] = CatCons;
  exports["empty"] = empty;
  exports["append"] = append;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS["Data.CatList"] = PS["Data.CatList"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 220, column 7 - line 224, column 64: " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free line 218, column 3 - line 226, column 56: " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)(function ($118) {
              return Control_Applicative.pure(freeApplicative)(k($118));
          })(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($119) {
      return fromView(Return.create($119));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, function ($120) {
          return Control_Applicative.pure(freeApplicative)($120);
      }));
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($127) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($127));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 151, column 10 - line 153, column 37: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS["Control.Monad.Free"] = PS["Control.Monad.Free"] || {});
(function(exports) {
    "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Control.Monad.ST.Internal"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
      return applicativeST;
  }, function () {
      return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
      return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
      return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
      return applyST;
  }, $foreign.pure_);
  exports["functorST"] = functorST;
  exports["applyST"] = applyST;
  exports["applicativeST"] = applicativeST;
  exports["bindST"] = bindST;
  exports["monadST"] = monadST;
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var InputButton = (function () {
      function InputButton() {

      };
      InputButton.value = new InputButton();
      return InputButton;
  })();
  var InputCheckbox = (function () {
      function InputCheckbox() {

      };
      InputCheckbox.value = new InputCheckbox();
      return InputCheckbox;
  })();
  var InputColor = (function () {
      function InputColor() {

      };
      InputColor.value = new InputColor();
      return InputColor;
  })();
  var InputDate = (function () {
      function InputDate() {

      };
      InputDate.value = new InputDate();
      return InputDate;
  })();
  var InputDatetimeLocal = (function () {
      function InputDatetimeLocal() {

      };
      InputDatetimeLocal.value = new InputDatetimeLocal();
      return InputDatetimeLocal;
  })();
  var InputEmail = (function () {
      function InputEmail() {

      };
      InputEmail.value = new InputEmail();
      return InputEmail;
  })();
  var InputFile = (function () {
      function InputFile() {

      };
      InputFile.value = new InputFile();
      return InputFile;
  })();
  var InputHidden = (function () {
      function InputHidden() {

      };
      InputHidden.value = new InputHidden();
      return InputHidden;
  })();
  var InputImage = (function () {
      function InputImage() {

      };
      InputImage.value = new InputImage();
      return InputImage;
  })();
  var InputMonth = (function () {
      function InputMonth() {

      };
      InputMonth.value = new InputMonth();
      return InputMonth;
  })();
  var InputNumber = (function () {
      function InputNumber() {

      };
      InputNumber.value = new InputNumber();
      return InputNumber;
  })();
  var InputPassword = (function () {
      function InputPassword() {

      };
      InputPassword.value = new InputPassword();
      return InputPassword;
  })();
  var InputRadio = (function () {
      function InputRadio() {

      };
      InputRadio.value = new InputRadio();
      return InputRadio;
  })();
  var InputRange = (function () {
      function InputRange() {

      };
      InputRange.value = new InputRange();
      return InputRange;
  })();
  var InputReset = (function () {
      function InputReset() {

      };
      InputReset.value = new InputReset();
      return InputReset;
  })();
  var InputSearch = (function () {
      function InputSearch() {

      };
      InputSearch.value = new InputSearch();
      return InputSearch;
  })();
  var InputSubmit = (function () {
      function InputSubmit() {

      };
      InputSubmit.value = new InputSubmit();
      return InputSubmit;
  })();
  var InputTel = (function () {
      function InputTel() {

      };
      InputTel.value = new InputTel();
      return InputTel;
  })();
  var InputText = (function () {
      function InputText() {

      };
      InputText.value = new InputText();
      return InputText;
  })();
  var InputTime = (function () {
      function InputTime() {

      };
      InputTime.value = new InputTime();
      return InputTime;
  })();
  var InputUrl = (function () {
      function InputUrl() {

      };
      InputUrl.value = new InputUrl();
      return InputUrl;
  })();
  var InputWeek = (function () {
      function InputWeek() {

      };
      InputWeek.value = new InputWeek();
      return InputWeek;
  })();
  var renderInputType = function (v) {
      if (v instanceof InputButton) {
          return "button";
      };
      if (v instanceof InputCheckbox) {
          return "checkbox";
      };
      if (v instanceof InputColor) {
          return "color";
      };
      if (v instanceof InputDate) {
          return "date";
      };
      if (v instanceof InputDatetimeLocal) {
          return "datetime-local";
      };
      if (v instanceof InputEmail) {
          return "email";
      };
      if (v instanceof InputFile) {
          return "file";
      };
      if (v instanceof InputHidden) {
          return "hidden";
      };
      if (v instanceof InputImage) {
          return "image";
      };
      if (v instanceof InputMonth) {
          return "month";
      };
      if (v instanceof InputNumber) {
          return "number";
      };
      if (v instanceof InputPassword) {
          return "password";
      };
      if (v instanceof InputRadio) {
          return "radio";
      };
      if (v instanceof InputRange) {
          return "range";
      };
      if (v instanceof InputReset) {
          return "reset";
      };
      if (v instanceof InputSearch) {
          return "search";
      };
      if (v instanceof InputSubmit) {
          return "submit";
      };
      if (v instanceof InputTel) {
          return "tel";
      };
      if (v instanceof InputText) {
          return "text";
      };
      if (v instanceof InputTime) {
          return "time";
      };
      if (v instanceof InputUrl) {
          return "url";
      };
      if (v instanceof InputWeek) {
          return "week";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType line 28, column 19 - line 50, column 16: " + [ v.constructor.name ]);
  };
  exports["InputButton"] = InputButton;
  exports["InputCheckbox"] = InputCheckbox;
  exports["InputColor"] = InputColor;
  exports["InputDate"] = InputDate;
  exports["InputDatetimeLocal"] = InputDatetimeLocal;
  exports["InputEmail"] = InputEmail;
  exports["InputFile"] = InputFile;
  exports["InputHidden"] = InputHidden;
  exports["InputImage"] = InputImage;
  exports["InputMonth"] = InputMonth;
  exports["InputNumber"] = InputNumber;
  exports["InputPassword"] = InputPassword;
  exports["InputRadio"] = InputRadio;
  exports["InputRange"] = InputRange;
  exports["InputReset"] = InputReset;
  exports["InputSearch"] = InputSearch;
  exports["InputSubmit"] = InputSubmit;
  exports["InputTel"] = InputTel;
  exports["InputText"] = InputText;
  exports["InputTime"] = InputTime;
  exports["InputUrl"] = InputUrl;
  exports["InputWeek"] = InputWeek;
  exports["renderInputType"] = renderInputType;
})(PS["DOM.HTML.Indexed.InputType"] = PS["DOM.HTML.Indexed.InputType"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                                                                                             

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_NonEmpty_Internal = PS["Data.Array.NonEmpty.Internal"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var singleton = function (a) {
      return [ a ];
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var difference = function (dictEq) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
  };
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["head"] = head;
  exports["index"] = index;
  exports["findIndex"] = findIndex;
  exports["deleteAt"] = deleteAt;
  exports["mapWithIndex"] = mapWithIndex;
  exports["deleteBy"] = deleteBy;
  exports["difference"] = difference;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["filter"] = $foreign.filter;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];                 
  var CoyonedaF = (function () {
      function CoyonedaF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoyonedaF.create = function (value0) {
          return function (value1) {
              return new CoyonedaF(value0, value1);
          };
      };
      return CoyonedaF;
  })();
  var Coyoneda = function (x) {
      return x;
  };
  var unCoyoneda = function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return f(v1.value0)(v1.value1);
          })(v);
      };
  };
  var coyoneda = function (k) {
      return function (fi) {
          return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
      };
  };
  exports["Coyoneda"] = Coyoneda;
  exports["coyoneda"] = coyoneda;
  exports["unCoyoneda"] = unCoyoneda;
})(PS["Data.Coyoneda"] = PS["Data.Coyoneda"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Void = PS["Data.Void"];
  var in3 = function (v) {
      return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
  };
  var in2 = function (v) {
      return new Data_Either.Right(new Data_Either.Left(v));
  };
  var in1 = Data_Either.Left.create;
  var at3 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                  return f(y.value0.value0.value0);
              };
              return b;
          };
      };
  };
  var at2 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                  return f(y.value0.value0);
              };
              return b;
          };
      };
  };
  var at1 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Left) {
                  return f(y.value0);
              };
              return b;
          };
      };
  };
  exports["in1"] = in1;
  exports["in2"] = in2;
  exports["in3"] = in3;
  exports["at1"] = at1;
  exports["at2"] = at2;
  exports["at3"] = at3;
})(PS["Data.Either.Nested"] = PS["Data.Either.Nested"] || {});
(function(exports) {
    "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Enum"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unfoldable1 = PS["Data.Unfoldable1"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var succ = function (dict) {
      return dict.succ;
  }; 
  var pred = function (dict) {
      return dict.pred;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $51 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($51) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum line 158, column 33 - line 160, column 62: " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var cardinality = function (dict) {
      return dict.cardinality;
  }; 
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["pred"] = pred;
  exports["BoundedEnum"] = BoundedEnum;
  exports["cardinality"] = cardinality;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["defaultSucc"] = defaultSucc;
  exports["defaultPred"] = defaultPred;
  exports["enumChar"] = enumChar;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var right = function (ga) {
      return new Data_Either.Right(ga);
  };            
  var left = function (fa) {
      return new Data_Either.Left(fa);
  };
  exports["left"] = left;
  exports["right"] = right;
})(PS["Data.Functor.Coproduct"] = PS["Data.Functor.Coproduct"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Const = PS["Data.Const"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor_Coproduct = PS["Data.Functor.Coproduct"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];
  var in3 = function (v) {
      return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)));
  };
  var in2 = function (v) {
      return Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v));
  };
  var in1 = Data_Functor_Coproduct.left;
  var at3 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && (y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left)) {
                  return f(y.value0.value0.value0);
              };
              return b;
          };
      };
  };
  var at2 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
                  return f(y.value0.value0);
              };
              return b;
          };
      };
  };
  var at1 = function (b) {
      return function (f) {
          return function (y) {
              if (y instanceof Data_Either.Left) {
                  return f(y.value0);
              };
              return b;
          };
      };
  };
  exports["in1"] = in1;
  exports["in2"] = in2;
  exports["in3"] = in3;
  exports["at1"] = at1;
  exports["at2"] = at2;
  exports["at3"] = at3;
})(PS["Data.Functor.Coproduct.Nested"] = PS["Data.Functor.Coproduct.Nested"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Maybe = PS["Data.Maybe"];                 
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
})(PS["Data.Generic.Rep"] = PS["Data.Generic.Rep"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];                 
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  };
  var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
      return [  ];
  });
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Show line 26, column 1 - line 26, column 83: " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["GenericShow"] = GenericShow;
  exports["genericShow"] = genericShow;
  exports["GenericShowArgs"] = GenericShowArgs;
  exports["genericShowArgs"] = genericShowArgs;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowConstructor"] = genericShowConstructor;
})(PS["Data.Generic.Rep.Show"] = PS["Data.Generic.Rep.Show"] || {});
(function(exports) {
    "use strict";

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_DivisionRing = PS["Data.DivisionRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Prelude = PS["Prelude"];                 
  var Choice = function (Profunctor0, left, right) {
      this.Profunctor0 = Profunctor0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  var left = function (dict) {
      return dict.left;
  };
  exports["left"] = left;
  exports["right"] = right;
  exports["Choice"] = Choice;
})(PS["Data.Profunctor.Choice"] = PS["Data.Profunctor.Choice"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (v) {
          return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
      };
  }, Data_Functor.map(Data_Tuple.functorTuple));
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["second"] = second;
  exports["Strong"] = Strong;
  exports["strongFn"] = strongFn;
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Star = PS["Data.Profunctor.Star"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Prelude = PS["Prelude"];                 
  var Wander = function (Choice1, Strong0, wander) {
      this.Choice1 = Choice1;
      this.Strong0 = Strong0;
      this.wander = wander;
  }; 
  var wander = function (dict) {
      return dict.wander;
  };
  exports["wander"] = wander;
  exports["Wander"] = Wander;
})(PS["Data.Lens.Internal.Wander"] = PS["Data.Lens.Internal.Wander"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens_Internal_Wander = PS["Data.Lens.Internal.Wander"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Cochoice = PS["Data.Profunctor.Cochoice"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Forget = function (x) {
      return x;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($27) {
                  return v1(f($27));
              };
          };
      };
  });
  var strongForget = new Data_Profunctor_Strong.Strong(function () {
      return profunctorForget;
  }, function (v) {
      return function ($28) {
          return v(Data_Tuple.fst($28));
      };
  }, function (v) {
      return function ($29) {
          return v(Data_Tuple.snd($29));
      };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Forget);
  var choiceForget = function (dictMonoid) {
      return new Data_Profunctor_Choice.Choice(function () {
          return profunctorForget;
      }, function (v) {
          return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
      }, function (v) {
          return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
      });
  };
  var wanderForget = function (dictMonoid) {
      return new Data_Lens_Internal_Wander.Wander(function () {
          return choiceForget(dictMonoid);
      }, function () {
          return strongForget;
      }, function (f) {
          return function (v) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
          };
      });
  };
  exports["Forget"] = Forget;
  exports["newtypeForget"] = newtypeForget;
  exports["profunctorForget"] = profunctorForget;
  exports["choiceForget"] = choiceForget;
  exports["strongForget"] = strongForget;
  exports["wanderForget"] = wanderForget;
})(PS["Data.Lens.Internal.Forget"] = PS["Data.Lens.Internal.Forget"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
  var preview = function (p) {
      return function ($64) {
          return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
              return Data_Maybe_First.First(Data_Maybe.Just.create($65));
          })($64));
      };
  };
  exports["preview"] = preview;
  exports["foldMapOf"] = foldMapOf;
})(PS["Data.Lens.Fold"] = PS["Data.Lens.Fold"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var view = function (l) {
      return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.identity(Control_Category.categoryFn)));
  };
  exports["view"] = view;
})(PS["Data.Lens.Getter"] = PS["Data.Lens.Getter"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Closed = PS["Data.Profunctor.Closed"];
  var Data_Profunctor_Costrong = PS["Data.Profunctor.Costrong"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Tagged = function (x) {
      return x;
  };
  var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
      return function (g) {
          return function (v1) {
              return g(v1);
          };
      };
  });
  var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
      return taggedProfunctor;
  }, function (v) {
      return new Data_Either.Left(v);
  }, function (v) {
      return new Data_Either.Right(v);
  });
  var newtypeTagged = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Tagged);
  exports["Tagged"] = Tagged;
  exports["newtypeTagged"] = newtypeTagged;
  exports["taggedProfunctor"] = taggedProfunctor;
  exports["taggedChoice"] = taggedChoice;
})(PS["Data.Lens.Internal.Tagged"] = PS["Data.Lens.Internal.Tagged"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens_Internal_Exchange = PS["Data.Lens.Internal.Exchange"];
  var Data_Lens_Internal_Re = PS["Data.Lens.Internal.Re"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var iso = function (f) {
      return function (g) {
          return function (dictProfunctor) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
              };
          };
      };
  };
  exports["iso"] = iso;
})(PS["Data.Lens.Iso"] = PS["Data.Lens.Iso"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Lens_Iso = PS["Data.Lens.Iso"];
  var Data_Newtype = PS["Data.Newtype"];                 
  var _Newtype = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (dictProfunctor) {
              return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor);
          };
      };
  };
  exports["_Newtype"] = _Newtype;
})(PS["Data.Lens.Iso.Newtype"] = PS["Data.Lens.Iso.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Internal_Shop = PS["Data.Lens.Internal.Shop"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
})(PS["Data.Lens.Lens"] = PS["Data.Lens.Lens"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Market = PS["Data.Lens.Internal.Market"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Prelude = PS["Prelude"];
  var review = Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged);
  var prism = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
              };
          };
      };
  };
  var prism$prime = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return prism(to)(function (s) {
                  return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
              })(dictChoice);
          };
      };
  };
  exports["prism'"] = prism$prime;
  exports["prism"] = prism;
  exports["review"] = review;
})(PS["Data.Lens.Prism"] = PS["Data.Lens.Prism"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var _Left = function (dictChoice) {
      return Data_Profunctor_Choice.left(dictChoice);
  };
  exports["_Left"] = _Left;
})(PS["Data.Lens.Prism.Either"] = PS["Data.Lens.Prism.Either"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var _Just = function (dictChoice) {
      return Data_Lens_Prism.prism(Data_Maybe.Just.create)(Data_Maybe.maybe(new Data_Either.Left(Data_Maybe.Nothing.value))(Data_Either.Right.create))(dictChoice);
  };
  exports["_Just"] = _Just;
})(PS["Data.Lens.Prism.Maybe"] = PS["Data.Lens.Prism.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Type_Data_Boolean = PS["Type.Data.Boolean"];
  var Type_Data_Symbol = PS["Type.Data.Symbol"];
  var Type_Equality = PS["Type.Equality"];                 
  var RProxy = (function () {
      function RProxy() {

      };
      RProxy.value = new RProxy();
      return RProxy;
  })();
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RProxy"] = RProxy;
  exports["RLProxy"] = RLProxy;
})(PS["Type.Row"] = PS["Type.Row"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];
  var Record_Unsafe = PS["Record.Unsafe"];
  var Record_Unsafe_Union = PS["Record.Unsafe.Union"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var set = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (b) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (a) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r);
                      };
                  };
              };
          };
      };
  };
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  var $$delete = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (r) {
                      return Record_Unsafe.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
                  };
              };
          };
      };
  };
  var rename = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictCons) {
              return function (dictLacks) {
                  return function (dictCons1) {
                      return function (dictLacks1) {
                          return function (prev) {
                              return function (next) {
                                  return function (record) {
                                      return insert(dictIsSymbol1)(dictLacks1)(dictCons1)(next)(get(dictIsSymbol)(dictCons)(prev)(record))($$delete(dictIsSymbol)(dictLacks)(dictCons)(prev)(record));
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["get"] = get;
  exports["set"] = set;
  exports["insert"] = insert;
  exports["delete"] = $$delete;
  exports["rename"] = rename;
})(PS["Record"] = PS["Record"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Lens = PS["Data.Lens.Lens"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];                 
  var prop = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (dictStrong) {
                      return Data_Lens_Lens.lens(Record.get(dictIsSymbol)(dictCons)(l))(Data_Function.flip(Record.set(dictIsSymbol)(dictCons)(dictCons1)(l)))(dictStrong);
                  };
              };
          };
      };
  };
  exports["prop"] = prop;
})(PS["Data.Lens.Record"] = PS["Data.Lens.Record"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens_Internal_Indexed = PS["Data.Lens.Internal.Indexed"];
  var Data_Lens_Types = PS["Data.Lens.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var over = function (l) {
      return l;
  };
  var set = function (l) {
      return function (b) {
          return over(l)(Data_Function["const"](b));
      };
  };
  exports["over"] = over;
  exports["set"] = set;
})(PS["Data.Lens.Setter"] = PS["Data.Lens.Setter"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Data_List_Lazy_Types = PS["Data.List.Lazy.Types"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];                 
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal line 594, column 1 - line 594, column 40: " + [ v.constructor.name ]);
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 193, column 5 - line 193, column 22: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal line 588, column 1 - line 588, column 38: " + [ v.constructor.name ]);
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map.Internal line 89, column 1 - line 89, column 39: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 411, column 3 - line 416, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 408, column 1 - line 408, column 80: " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal line 447, column 5 - line 452, column 108: " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal line 444, column 3 - line 444, column 56: " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal line 427, column 3 - line 427, column 55: " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function (ctxs) {
              return function (tree) {
                  if (ctxs instanceof Data_List_Types.Nil) {
                      return tree;
                  };
                  if (ctxs instanceof Data_List_Types.Cons) {
                      var $__unused = function (dictPartial1) {
                          return function ($dollar55) {
                              return $dollar55;
                          };
                      };
                      return $__unused()((function () {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal line 497, column 9 - line 514, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      })());
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 494, column 5 - line 514, column 136: " + [ ctxs.constructor.name ]);
              };
          };
          var removeMaxNode = function (ctx) {
              return function (m) {
                  var $__unused = function (dictPartial1) {
                      return function ($dollar57) {
                          return $dollar57;
                      };
                  };
                  return $__unused()((function () {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 526, column 5 - line 530, column 107: " + [ m.constructor.name ]);
                  })());
              };
          };
          var maxNode = function (m) {
              var $__unused = function (dictPartial1) {
                  return function ($dollar59) {
                      return $dollar59;
                  };
              };
              return $__unused()((function () {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      return maxNode(m.value3);
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      return maxNode(m.value6);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 517, column 33 - line 521, column 45: " + [ m.constructor.name ]);
              })());
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal line 467, column 34 - line 490, column 80: " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var empty = Leaf.value;
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  }; 
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal line 535, column 15 - line 537, column 25: " + [ v.constructor.name ]);
              };
          };
      };
  };
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["keys"] = keys;
  exports["values"] = values;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
})(PS["Data.Map.Internal"] = PS["Data.Map.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var toList = function (v) {
      return Data_Map_Internal.keys(v);
  };
  var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function ($59) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(toList($59));
          };
      };
  }, function (f) {
      return function (x) {
          return function ($60) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x)(toList($60));
          };
      };
  }, function (f) {
      return function (x) {
          return function ($61) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x)(toList($61));
          };
      };
  });
  exports["foldableSet"] = foldableSet;
})(PS["Data.Set"] = PS["Data.Set"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Set = PS["Data.Set"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var keys = function ($0) {
      return Data_Functor["void"](Data_Map_Internal.functorMap)($0);
  };
  exports["keys"] = keys;
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
    "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
    "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
    "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.CodeUnits"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];                                                                
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = indexOf(v)(str);
          if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
              return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var contains = function (pat) {
      return function ($16) {
          return Data_Maybe.isJust(indexOf(pat)($16));
      };
  };
  exports["stripPrefix"] = stripPrefix;
  exports["contains"] = contains;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["drop"] = $foreign.drop;
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.Common"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Prelude = PS["Prelude"];                 
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.CodePoints"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && isTrail(cu1);
      if ($25) {
          return unsurrogate(cu0)(cu1);
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign._unsafeCodePointAt0(unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign._toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($51) {
      return Data_Array.length(toCodePointArray($51));
  };
  var fromCharCode = function ($52) {
      return Data_String_CodeUnits.singleton(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar))($52));
  };
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                       
  var singleton = $foreign._singleton(singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign._take(takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["singleton"] = singleton;
  exports["toCodePointArray"] = toCodePointArray;
  exports["uncons"] = uncons;
  exports["length"] = length;
  exports["take"] = take;
  exports["drop"] = drop;
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
    "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.test = function (r) {
    return function (s) {
      var lastIndex = r.lastIndex;
      var result = r.test(s);
      r.lastIndex = lastIndex;
      return result;
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Prelude = PS["Prelude"];                 
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["noFlags"] = noFlags;
})(PS["Data.String.Regex.Flags"] = PS["Data.String.Regex.Flags"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_NonEmpty = PS["Data.Array.NonEmpty"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Prelude = PS["Prelude"];                                                    
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  exports["regex"] = regex;
  exports["renderFlags"] = renderFlags;
  exports["test"] = $foreign.test;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];                 
  var V = function (x) {
      return x;
  };
  var unV = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Data_Either.Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Data_Either.Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Validation.Semigroup line 43, column 1 - line 43, column 77: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var invalid = function ($58) {
      return V(Data_Either.Left.create($58));
  };
  var functorV = Data_Either.functorEither;    
  var applyV = function (dictSemigroup) {
      return new Control_Apply.Apply(function () {
          return functorV;
      }, function (v) {
          return function (v1) {
              if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              if (v instanceof Data_Either.Left) {
                  return new Data_Either.Left(v.value0);
              };
              if (v1 instanceof Data_Either.Left) {
                  return new Data_Either.Left(v1.value0);
              };
              if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
                  return new Data_Either.Right(v.value0(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Validation.Semigroup line 74, column 1 - line 74, column 50: " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var applicativeV = function (dictSemigroup) {
      return new Control_Applicative.Applicative(function () {
          return applyV(dictSemigroup);
      }, function ($64) {
          return V(Data_Either.Right.create($64));
      });
  };
  exports["unV"] = unV;
  exports["invalid"] = invalid;
  exports["functorV"] = functorV;
  exports["applyV"] = applyV;
  exports["applicativeV"] = applicativeV;
})(PS["Data.Validation.Semigroup"] = PS["Data.Validation.Semigroup"] || {});
(function(exports) {
  /* globals exports, setTimeout */
  "use strict";

  var AVar = function () {

    function MutableQueue () {
      this.head = null;
      this.last = null;
      this.size = 0;
    }

    function MutableCell (queue, value) {
      this.queue = queue;
      this.value = value;
      this.next  = null;
      this.prev  = null;
    }

    function AVar (value) {
      this.draining = false;
      this.error    = null;
      this.value    = value;
      this.takes    = new MutableQueue();
      this.reads    = new MutableQueue();
      this.puts     = new MutableQueue();
    }

    var EMPTY = {};

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function putLast (queue, value) {
      var cell = new MutableCell(queue, value);
      switch (queue.size) {
      case 0:
        queue.head = cell;
        break;
      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;
      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
      }
      queue.size++;
      return cell;
    }

    function takeLast (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;
      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
      }
      cell.prev = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function takeHead (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;
      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
      }
      cell.next = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function deleteCell (cell) {
      if (cell.queue === null) {
        return;
      }
      if (cell.queue.last === cell) {
        takeLast(cell.queue);
        return;
      }
      if (cell.queue.head === cell) {
        takeHead(cell.queue);
        return;
      }
      if (cell.prev) {
        cell.prev.next = cell.next;
      }
      if (cell.next) {
        cell.next.prev = cell.prev;
      }
      cell.queue.size--;
      cell.queue = null;
      cell.value = null;
      cell.next  = null;
      cell.prev  = null;
    }

    function drainVar (util, avar) {
      if (avar.draining) {
        return;
      }

      var ps = avar.puts;
      var ts = avar.takes;
      var rs = avar.reads;
      var p, r, t, value, rsize;

      avar.draining = true;

      while (1) { // eslint-disable-line no-constant-condition
        p = null;
        r = null;
        t = null;
        value = avar.value;
        rsize = rs.size;

        if (avar.error !== null) {
          value = util.left(avar.error);
          while (p = takeHead(ps)) { // eslint-disable-line no-cond-assign
            runEff(p.cb(value));
          }
          while (r = takeHead(rs)) { // eslint-disable-line no-cond-assign
            runEff(r(value));
          }
          while (t = takeHead(ts)) { // eslint-disable-line no-cond-assign
            runEff(t(value));
          }
          break;
        }

        // Process the next put. We do not immediately invoke the callback
        // because we want to preserve ordering. If there are takes/reads
        // we want to run those first.
        if (value === EMPTY && (p = takeHead(ps))) {
          avar.value = value = p.value;
        }

        if (value !== EMPTY) {
          // We go ahead and queue up the next take for the same reasons as
          // above. Invoking the read callbacks can affect the mutable queue.
          t = takeHead(ts);
          // We only want to process the reads queued up before running these
          // callbacks so we guard on rsize.
          while (rsize-- && (r = takeHead(rs))) {
            runEff(r(util.right(value)));
          }
          if (t !== null) {
            avar.value = EMPTY;
            runEff(t(util.right(value)));
          }
        }

        if (p !== null) {
          runEff(p.cb(util.right(void 0)));
        }

        // Callbacks could have queued up more items so we need to guard on the
        // actual mutable properties.
        if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
          break;
        }
      }
      avar.draining = false;
    }

    AVar.EMPTY      = EMPTY;
    AVar.putLast    = putLast;
    AVar.takeLast   = takeLast;
    AVar.takeHead   = takeHead;
    AVar.deleteCell = deleteCell;
    AVar.drainVar   = drainVar;

    return AVar;
  }();

  exports.empty = function () {
    return new AVar(AVar.EMPTY);
  };

  exports._killVar = function (util, error, avar) {
    return function () {
      if (avar.error === null) {
        avar.error = error;
        avar.value = AVar.EMPTY;
        AVar.drainVar(util, avar);
      }
    };
  };

  exports._putVar = function (util, value, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._takeVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.takes, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.AVar"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Effect = PS["Effect"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];                 
  var Killed = (function () {
      function Killed(value0) {
          this.value0 = value0;
      };
      Killed.create = function (value0) {
          return new Killed(value0);
      };
      return Killed;
  })();
  var Filled = (function () {
      function Filled(value0) {
          this.value0 = value0;
      };
      Filled.create = function (value0) {
          return new Filled(value0);
      };
      return Filled;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var ffiUtil = {
      left: Data_Either.Left.create,
      right: Data_Either.Right.create,
      nothing: Data_Maybe.Nothing.value,
      just: Data_Maybe.Just.create,
      killed: Killed.create,
      filled: Filled.create,
      empty: Empty.value
  };
  var kill = function (err) {
      return function (avar) {
          return $foreign._killVar(ffiUtil, err, avar);
      };
  };
  var put = function (value) {
      return function (avar) {
          return function (cb) {
              return $foreign._putVar(ffiUtil, value, avar, cb);
          };
      };
  };
  var take = function (avar) {
      return function (cb) {
          return $foreign._takeVar(ffiUtil, avar, cb);
      };
  };
  exports["Killed"] = Killed;
  exports["Filled"] = Filled;
  exports["Empty"] = Empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
  exports["empty"] = $foreign.empty;
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Effect = PS["Effect"];
  var Effect_AVar = PS["Effect.AVar"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];
  var take = function (avar) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v = Effect_AVar.take(avar)(k)();
              return Effect_Aff.effectCanceler(v);
          };
      });
  };
  var put = function (value) {
      return function (avar) {
          return Effect_Aff.makeAff(function (k) {
              return function __do() {
                  var v = Effect_AVar.put(value)(avar)(k)();
                  return Effect_Aff.effectCanceler(v);
              };
          });
      };
  };
  var kill = function (error) {
      return function ($11) {
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.kill(error)($11));
      };
  };
  var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
  exports["empty"] = empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
})(PS["Effect.Aff.AVar"] = PS["Effect.Aff.AVar"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_List_Trans = PS["Control.Monad.List.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_RWS_Trans = PS["Control.Monad.RWS.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Prelude = PS["Prelude"];                 
  var MonadAff = function (MonadEffect0, liftAff) {
      this.MonadEffect0 = MonadEffect0;
      this.liftAff = liftAff;
  };
  var monadAffAff = new MonadAff(function () {
      return Effect_Aff.monadEffectAff;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  exports["liftAff"] = liftAff;
  exports["MonadAff"] = MonadAff;
  exports["monadAffAff"] = monadAffAff;
})(PS["Effect.Aff.Class"] = PS["Effect.Aff.Class"] || {});
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Console"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  exports["log"] = $foreign.log;
  exports["warn"] = $foreign.warn;
  exports["error"] = $foreign.error;
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function(exports) {
    "use strict";

  exports.random = Math.random;
})(PS["Effect.Random"] = PS["Effect.Random"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Effect.Random"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  exports["random"] = $foreign.random;
})(PS["Effect.Random"] = PS["Effect.Random"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Choice = PS["Data.Profunctor.Choice"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Invalid = (function () {
      function Invalid(value0) {
          this.value0 = value0;
      };
      Invalid.create = function (value0) {
          return new Invalid(value0);
      };
      return Invalid;
  })();
  var Valid = (function () {
      function Valid(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Valid.create = function (value0) {
          return function (value1) {
              return new Valid(value0, value1);
          };
      };
      return Valid;
  })();
  var Validation = function (x) {
      return x;
  };
  var newtypeVaildation = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Validation);
  var runValidation = Data_Newtype.unwrap(newtypeVaildation);
  var semigroupoidValidation = function (dictMonad) {
      return function (dictSemigroup) {
          return new Control_Semigroupoid.Semigroupoid(function (v2) {
              return function (v1) {
                  return Validation(function (a) {
                      return Control_Bind.bind(dictMonad.Bind1())(Data_Newtype.unwrap(newtypeVaildation)(v1)(a))(function (v) {
                          if (v instanceof Valid) {
                              return Control_Bind.bind(dictMonad.Bind1())(Data_Newtype.unwrap(newtypeVaildation)(v2)(v.value1))(function (v3) {
                                  return Control_Applicative.pure(dictMonad.Applicative0())((function () {
                                      if (v3 instanceof Valid) {
                                          return new Valid(Data_Semigroup.append(dictSemigroup)(v.value0)(v3.value0), v3.value1);
                                      };
                                      if (v3 instanceof Invalid) {
                                          return new Invalid(Data_Semigroup.append(dictSemigroup)(v.value0)(v3.value0));
                                      };
                                      throw new Error("Failed pattern match at Polyform.Validation line 113, column 18 - line 115, column 43: " + [ v3.constructor.name ]);
                                  })());
                              });
                          };
                          if (v instanceof Invalid) {
                              return Control_Applicative.pure(dictMonad.Applicative0())(new Invalid(v.value0));
                          };
                          throw new Error("Failed pattern match at Polyform.Validation line 110, column 7 - line 116, column 37: " + [ v.constructor.name ]);
                      });
                  });
              };
          });
      };
  };
  var hoistFnV = function (dictMonad) {
      return function (dictMonoid) {
          return function (f) {
              return Validation(function ($198) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(f($198));
              });
          };
      };
  };
  var functorV = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Invalid) {
              return new Invalid(m.value0);
          };
          if (m instanceof Valid) {
              return new Valid(m.value0, f(m.value1));
          };
          throw new Error("Failed pattern match at Polyform.Validation line 14, column 8 - line 14, column 41: " + [ m.constructor.name ]);
      };
  });
  var functorValidation = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorV)(f)))(m);
          };
      });
  };
  var applyV = function (dictSemigroup) {
      return new Control_Apply.Apply(function () {
          return functorV;
      }, function (v) {
          return function (v1) {
              if (v instanceof Valid && v1 instanceof Valid) {
                  return new Valid(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
              };
              if (v instanceof Invalid && v1 instanceof Valid) {
                  return new Invalid(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              if (v instanceof Invalid && v1 instanceof Invalid) {
                  return new Invalid(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              if (v instanceof Valid && v1 instanceof Invalid) {
                  return new Invalid(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              throw new Error("Failed pattern match at Polyform.Validation line 20, column 1 - line 20, column 46: " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var applyValidation = function (dictSemigroup) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorValidation(((dictMonad.Bind1()).Apply0()).Functor0());
          }, function (vf) {
              return function (va) {
                  return Validation(function (i) {
                      return Control_Bind.bind(dictMonad.Bind1())(Data_Newtype.unwrap(newtypeVaildation)(vf)(i))(function (v) {
                          return Control_Bind.bind(dictMonad.Bind1())(Data_Newtype.unwrap(newtypeVaildation)(va)(i))(function (v1) {
                              return Control_Applicative.pure(dictMonad.Applicative0())(Control_Apply.apply(applyV(dictSemigroup))(v)(v1));
                          });
                      });
                  });
              };
          });
      };
  };
  var applicativeV = function (dictMonoid) {
      return new Control_Applicative.Applicative(function () {
          return applyV(dictMonoid.Semigroup0());
      }, function (a) {
          return new Valid(Data_Monoid.mempty(dictMonoid), a);
      });
  };
  exports["Invalid"] = Invalid;
  exports["Valid"] = Valid;
  exports["Validation"] = Validation;
  exports["runValidation"] = runValidation;
  exports["hoistFnV"] = hoistFnV;
  exports["functorV"] = functorV;
  exports["applyV"] = applyV;
  exports["applicativeV"] = applicativeV;
  exports["newtypeVaildation"] = newtypeVaildation;
  exports["functorValidation"] = functorValidation;
  exports["applyValidation"] = applyValidation;
  exports["semigroupoidValidation"] = semigroupoidValidation;
})(PS["Polyform.Validation"] = PS["Polyform.Validation"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_CodePoints = PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Validation_Semigroup = PS["Data.Validation.Semigroup"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Random = PS["Effect.Random"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Polyform_Validation = PS["Polyform.Validation"];
  var Prelude = PS["Prelude"];                 
  var Name = function (x) {
      return x;
  };
  var EmptyField = (function () {
      function EmptyField() {

      };
      EmptyField.value = new EmptyField();
      return EmptyField;
  })();
  var InvalidEmail = (function () {
      function InvalidEmail() {

      };
      InvalidEmail.value = new InvalidEmail();
      return InvalidEmail;
  })();
  var EmailInUse = (function () {
      function EmailInUse() {

      };
      EmailInUse.value = new EmailInUse();
      return EmailInUse;
  })();
  var TooShort = (function () {
      function TooShort(value0) {
          this.value0 = value0;
      };
      TooShort.create = function (value0) {
          return new TooShort(value0);
      };
      return TooShort;
  })();
  var TooLong = (function () {
      function TooLong(value0) {
          this.value0 = value0;
      };
      TooLong.create = function (value0) {
          return new TooLong(value0);
      };
      return TooLong;
  })();
  var InvalidInt = (function () {
      function InvalidInt(value0) {
          this.value0 = value0;
      };
      InvalidInt.create = function (value0) {
          return new InvalidInt(value0);
      };
      return InvalidInt;
  })();
  var NotEqual = (function () {
      function NotEqual(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NotEqual.create = function (value0) {
          return function (value1) {
              return new NotEqual(value0, value1);
          };
      };
      return NotEqual;
  })();
  var ToText = function (toText) {
      this.toText = toText;
  };
  var validateNonEmptyArray = function (input) {
      if (Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(input) >= 1) {
          return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(input);
      };
      if (Data_Boolean.otherwise) {
          return Data_Validation_Semigroup.invalid(Data_Array.singleton(EmptyField.value));
      };
      throw new Error("Failed pattern match at Example.App.Validation line 144, column 1 - line 146, column 27: " + [ input.constructor.name ]);
  };
  var validateNonEmpty = function (input) {
      if (Data_String_Common["null"](input)) {
          return Data_Validation_Semigroup.invalid(Data_Array.singleton(EmptyField.value));
      };
      if (Data_Boolean.otherwise) {
          return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(input);
      };
      throw new Error("Failed pattern match at Example.App.Validation line 152, column 1 - line 152, column 44: " + [ input.constructor.name ]);
  };
  var validateMinimumLength = function (input) {
      return function (n) {
          if (Data_String_CodePoints.length(input) < n) {
              return Data_Validation_Semigroup.invalid(Data_Array.singleton(new TooShort(n)));
          };
          if (Data_Boolean.otherwise) {
              return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(input);
          };
          throw new Error("Failed pattern match at Example.App.Validation line 165, column 1 - line 168, column 19: " + [ input.constructor.name, n.constructor.name ]);
      };
  };
  var validateMaybe = function (v) {
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Validation_Semigroup.invalid(Data_Array.singleton(EmptyField.value));
      };
      if (v instanceof Data_Maybe.Just) {
          return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(v.value0);
      };
      throw new Error("Failed pattern match at Example.App.Validation line 130, column 1 - line 130, column 42: " + [ v.constructor.name ]);
  };
  var validateInt = function (str) {
      var v = Data_Int.fromString(str);
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Validation_Semigroup.invalid(Data_Array.singleton(new InvalidInt(str)));
      };
      if (v instanceof Data_Maybe.Just) {
          return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(v.value0);
      };
      throw new Error("Failed pattern match at Example.App.Validation line 140, column 19 - line 142, column 19: " + [ v.constructor.name ]);
  };
  var validateEqual = function (a) {
      return function (b) {
          if (a === b) {
              return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(b);
          };
          if (Data_Boolean.otherwise) {
              return Data_Validation_Semigroup.invalid(Data_Array.singleton(new NotEqual(a, b)));
          };
          throw new Error("Failed pattern match at Example.App.Validation line 134, column 1 - line 134, column 51: " + [ a.constructor.name, b.constructor.name ]);
      };
  };
  var unsafeRegexFromString = function (str) {
      return Data_Either.fromRight()(Data_String_Regex.regex(str)(Data_String_Regex_Flags.noFlags));
  };
  var toTextString = new ToText(Control_Category.identity(Control_Category.categoryFn));
  var toTextFieldError = new ToText(function (v) {
      if (v instanceof EmptyField) {
          return "This field is required.";
      };
      if (v instanceof InvalidEmail) {
          return "That email is not valid.";
      };
      if (v instanceof EmailInUse) {
          return "That email is already being used.";
      };
      if (v instanceof TooShort) {
          return "You must enter at least " + (Data_Show.show(Data_Show.showInt)(v.value0) + " characters.");
      };
      if (v instanceof TooLong) {
          return "You must enter less than " + (Data_Show.show(Data_Show.showInt)(v.value0) + " characters.");
      };
      if (v instanceof InvalidInt) {
          return "Could not parse \"" + (v.value0 + "\" to a valid integer.");
      };
      if (v instanceof NotEqual) {
          return "This field contains \"" + (v.value1 + ("\" but must be equal to \"" + (v.value0 + "\" to validate.")));
      };
      throw new Error("Failed pattern match at Example.App.Validation line 40, column 1 - line 40, column 47: " + [ v.constructor.name ]);
  });
  var toText = function (dict) {
      return dict.toText;
  };
  var showName = Data_Show.showString;
  var showError = function (dictToText) {
      return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Either.either(function ($85) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(toText(dictToText))(Data_Array.head($85));
      })(Data_Function["const"](Data_Maybe.Nothing.value)));
  };
  var showEmail = Data_Show.showString;
  var notRequired = function (dictMonad) {
      return function (dictMonoid) {
          return Polyform_Validation.hoistFnV(dictMonad)(dictMonoid)(Control_Applicative.pure(Polyform_Validation.applicativeV(dictMonoid)));
      };
  };        
  var minLength = function (dictMonad) {
      return function (n) {
          return Polyform_Validation.hoistFnV(dictMonad)(Data_Monoid.monoidArray)(function (p) {
              var p$prime = Data_String_CodePoints.length(p);
              var $43 = p$prime < n;
              if ($43) {
                  return Polyform_Validation.Invalid.create(Data_Array.singleton(new TooShort(n)));
              };
              return Control_Applicative.pure(Polyform_Validation.applicativeV(Data_Monoid.monoidArray))(p);
          });
      };
  };
  var maxLength = function (dictMonad) {
      return function (n) {
          return Polyform_Validation.hoistFnV(dictMonad)(Data_Monoid.monoidArray)(function (p) {
              var p$prime = Data_String_CodePoints.length(p);
              var $44 = Data_String_CodePoints.length(p) > n;
              if ($44) {
                  return Polyform_Validation.Invalid.create(Data_Array.singleton(new TooLong(n)));
              };
              return Control_Applicative.pure(Polyform_Validation.applicativeV(Data_Monoid.monoidArray))(p);
          });
      };
  };          
  var emailRegex = unsafeRegexFromString("^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$");
  var validateEmailRegex = function (input) {
      if (Data_String_Regex.test(emailRegex)(input)) {
          return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(input);
      };
      if (Data_Boolean.otherwise) {
          return Data_Validation_Semigroup.invalid(Data_Array.singleton(InvalidEmail.value));
      };
      throw new Error("Failed pattern match at Example.App.Validation line 159, column 1 - line 159, column 46: " + [ input.constructor.name ]);
  };
  var emailIsUsed = function (dictMonadEffect) {
      return function (v) {
          return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Random.random))(function (v1) {
              return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())((function () {
                  var $83 = Data_String_CodeUnits.contains("t")(v);
                  if ($83) {
                      return Polyform_Validation.Invalid.create(Data_Array.singleton(EmailInUse.value));
                  };
                  return Control_Applicative.pure(Polyform_Validation.applicativeV(Data_Monoid.monoidArray))(v);
              })());
          });
      };
  };
  var emailFormat = function (dictMonad) {
      return Polyform_Validation.hoistFnV(dictMonad)(Data_Monoid.monoidArray)(function (e) {
          var $84 = Data_String_CodeUnits.contains("@")(e);
          if ($84) {
              return Control_Applicative.pure(Polyform_Validation.applicativeV(Data_Monoid.monoidArray))(e);
          };
          return Polyform_Validation.Invalid.create(Data_Array.singleton(InvalidEmail.value));
      });
  };
  exports["toText"] = toText;
  exports["EmptyField"] = EmptyField;
  exports["InvalidEmail"] = InvalidEmail;
  exports["EmailInUse"] = EmailInUse;
  exports["TooShort"] = TooShort;
  exports["TooLong"] = TooLong;
  exports["InvalidInt"] = InvalidInt;
  exports["NotEqual"] = NotEqual;
  exports["Name"] = Name;
  exports["showError"] = showError;
  exports["ToText"] = ToText;
  exports["notRequired"] = notRequired;
  exports["emailFormat"] = emailFormat;
  exports["emailIsUsed"] = emailIsUsed;
  exports["minLength"] = minLength;
  exports["maxLength"] = maxLength;
  exports["validateMaybe"] = validateMaybe;
  exports["validateEqual"] = validateEqual;
  exports["validateInt"] = validateInt;
  exports["validateNonEmptyArray"] = validateNonEmptyArray;
  exports["validateNonEmpty"] = validateNonEmpty;
  exports["validateEmailRegex"] = validateEmailRegex;
  exports["validateMinimumLength"] = validateMinimumLength;
  exports["unsafeRegexFromString"] = unsafeRegexFromString;
  exports["emailRegex"] = emailRegex;
  exports["toTextFieldError"] = toTextFieldError;
  exports["showName"] = showName;
  exports["showEmail"] = showEmail;
  exports["toTextString"] = toTextString;
})(PS["Example.App.Validation"] = PS["Example.App.Validation"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var Initial = function (initial) {
      this.initial = initial;
  };                                                                        
  var initialString = new Initial(Data_Monoid.mempty(Data_Monoid.monoidString));
  var initialMaybe = new Initial(Data_Maybe.Nothing.value);
  var initialBoolean = new Initial(false);
  var initialArray = new Initial(Data_Monoid.mempty(Data_Monoid.monoidArray));
  var initial = function (dict) {
      return dict.initial;
  };
  exports["initial"] = initial;
  exports["Initial"] = Initial;
  exports["initialBoolean"] = initialBoolean;
  exports["initialString"] = initialString;
  exports["initialMaybe"] = initialMaybe;
  exports["initialArray"] = initialArray;
})(PS["Formless.Class.Initial"] = PS["Formless.Class.Initial"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Iso_Newtype = PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Prism_Either = PS["Data.Lens.Prism.Either"];
  var Data_Lens_Prism_Maybe = PS["Data.Lens.Prism.Maybe"];
  var Data_Lens_Record = PS["Data.Lens.Record"];
  var Data_Lens_Traversal = PS["Data.Lens.Traversal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];                 
  var OutputField = function (x) {
      return x;
  };
  var InputField = function (x) {
      return x;
  };
  var FormSpec = function (x) {
      return x;
  };
  var FormProxy = (function () {
      function FormProxy() {

      };
      FormProxy.value = new FormProxy();
      return FormProxy;
  })();
  var newtypeOutputField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OutputField);
  var newtypeInputField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InputField);
  var newtypeFormSpec = new Data_Newtype.Newtype(function (n) {
      return n;
  }, FormSpec);
  var _touched = Data_Symbol.SProxy.value;
  var _result = Data_Symbol.SProxy.value;
  var _input = Data_Symbol.SProxy.value;
  var _Field = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      return function ($33) {
                          return Data_Lens_Iso_Newtype._Newtype(dictNewtype)(dictNewtype)(dictStrong.Profunctor0())(Data_Lens_Record.prop(dictIsSymbol)(dictCons)(dictCons)(sym)(dictStrong)(Data_Lens_Iso_Newtype._Newtype(newtypeInputField)(newtypeInputField)(dictStrong.Profunctor0())($33)));
                      };
                  };
              };
          };
      };
  };
  var _Input = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      return function ($34) {
                          return _Field(dictIsSymbol)(dictNewtype)(dictCons)(sym)(dictStrong)(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
                              return "input";
                          }))()()(_input)(dictStrong)($34));
                      };
                  };
              };
          };
      };
  };
  var _Result = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      return function ($35) {
                          return _Field(dictIsSymbol)(dictNewtype)(dictCons)(sym)(dictStrong)(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
                              return "result";
                          }))()()(_result)(dictStrong)($35));
                      };
                  };
              };
          };
      };
  };
  var _Touched = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      return function ($37) {
                          return _Field(dictIsSymbol)(dictNewtype)(dictCons)(sym)(dictStrong)(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
                              return "touched";
                          }))()()(_touched)(dictStrong)($37));
                      };
                  };
              };
          };
      };
  };
  var _Error = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictWander) {
                      return function ($38) {
                          return _Result(dictIsSymbol)(dictNewtype)(dictCons)(sym)(dictWander.Strong0())(Data_Lens_Prism_Maybe._Just(dictWander.Choice1())(Data_Lens_Prism_Either._Left(dictWander.Choice1())($38)));
                      };
                  };
              };
          };
      };
  };
  exports["FormProxy"] = FormProxy;
  exports["FormSpec"] = FormSpec;
  exports["OutputField"] = OutputField;
  exports["InputField"] = InputField;
  exports["_input"] = _input;
  exports["_touched"] = _touched;
  exports["_result"] = _result;
  exports["_Field"] = _Field;
  exports["_Input"] = _Input;
  exports["_Touched"] = _Touched;
  exports["_Result"] = _Result;
  exports["_Error"] = _Error;
  exports["newtypeFormSpec"] = newtypeFormSpec;
  exports["newtypeOutputField"] = newtypeOutputField;
  exports["newtypeInputField"] = newtypeInputField;
})(PS["Formless.Spec"] = PS["Formless.Spec"] || {});
(function(exports) {
    "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };

  exports.unsafeModify = function(l) {
    return function (f) {
      return function(rec) {
        rec[l] = f(rec[l]);
        return rec;
      };
    };
  };

  exports.unsafeDelete = function(l) {
    return function(rec) {
      delete rec[l];
      return rec;
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Record.Builder"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Symbol = PS["Data.Symbol"];
  var Prelude = PS["Prelude"];
  var Record_Unsafe_Union = PS["Record.Unsafe.Union"];
  var Type_Row = PS["Type.Row"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var modify = function (dictCons) {
      return function (dictCons1) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (f) {
                      return function (r1) {
                          return $foreign.unsafeModify(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(f)(r1);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };
  var $$delete = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (r2) {
                      return $foreign.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r2);
                  };
              };
          };
      };
  };
  var categoryBuilder = Control_Category.categoryFn;
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["insert"] = insert;
  exports["modify"] = modify;
  exports["delete"] = $$delete;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Formless_Spec = PS["Formless.Spec"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];
  var Record_Builder = PS["Record.Builder"];
  var Type_Data_RowList = PS["Type.Data.RowList"];
  var Row1Cons = function (Cons0, Lacks1) {
      this.Cons0 = Cons0;
      this.Lacks1 = Lacks1;
  };
  var Row3 = function (Row1Cons0, RowToList1, RowToList2) {
      this.Row1Cons0 = Row1Cons0;
      this.RowToList1 = RowToList1;
      this.RowToList2 = RowToList2;
  };
  var SetInputFieldsTouched = function (setInputFieldsTouchedBuilder) {
      this.setInputFieldsTouchedBuilder = setInputFieldsTouchedBuilder;
  };
  var InputFieldsToInput = function (inputFieldsToInputBuilder) {
      this.inputFieldsToInputBuilder = inputFieldsToInputBuilder;
  };
  var FormSpecToInputField = function (formSpecToInputFieldBuilder) {
      this.formSpecToInputFieldBuilder = formSpecToInputFieldBuilder;
  };
  var InputFieldToMaybeOutput = function (inputFieldToMaybeOutputBuilder) {
      this.inputFieldToMaybeOutputBuilder = inputFieldToMaybeOutputBuilder;
  };
  var SumRecord = function (Monoid0, sumImpl) {
      this.Monoid0 = Monoid0;
      this.sumImpl = sumImpl;
  };
  var CountErrors = function (countErrorsBuilder) {
      this.countErrorsBuilder = countErrorsBuilder;
  };
  var AllTouched = function (allTouchedImpl) {
      this.allTouchedImpl = allTouchedImpl;
  };
  var UnwrapRecord = function (unwrapRecordBuilder) {
      this.unwrapRecordBuilder = unwrapRecordBuilder;
  };
  var WrapRecord = function (wrapRecordBuilder) {
      this.wrapRecordBuilder = wrapRecordBuilder;
  };
  var SequenceRecord = function (Applicative0, sequenceRecordImpl) {
      this.Applicative0 = Applicative0;
      this.sequenceRecordImpl = sequenceRecordImpl;
  };
  var ApplyRecord = function (applyRecord) {
      this.applyRecord = applyRecord;
  };
  var ApplyRowList = function (RowToList0, RowToList1, RowToList2, applyRowList) {
      this.RowToList0 = RowToList0;
      this.RowToList1 = RowToList1;
      this.RowToList2 = RowToList2;
      this.applyRowList = applyRowList;
  };
  var wrapRecordNil = new WrapRecord(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var wrapRecordBuilder = function (dict) {
      return dict.wrapRecordBuilder;
  };
  var wrapRecordCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictNewtype) {
              return function (dictWrapRecord) {
                  return function (dictRow1Cons) {
                      return new WrapRecord(function (v) {
                          return function (r) {
                              var rest = wrapRecordBuilder(dictWrapRecord)(Type_Data_RowList.RLProxy.value)(r);
                              var val = Data_Newtype.wrap(dictNewtype)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                              var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                              return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                          };
                      });
                  };
              };
          };
      };
  };
  var unwrapRecordNil = new UnwrapRecord(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var unwrapRecordBuilder = function (dict) {
      return dict.unwrapRecordBuilder;
  };
  var unwrapRecordCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictNewtype) {
              return function (dictUnwrapRecord) {
                  return function (dictRow1Cons) {
                      return new UnwrapRecord(function (v) {
                          return function (r) {
                              var rest = unwrapRecordBuilder(dictUnwrapRecord)(Type_Data_RowList.RLProxy.value)(r);
                              var val = Data_Newtype.unwrap(dictNewtype)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                              var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                              return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                          };
                      });
                  };
              };
          };
      };
  };
  var sumImpl = function (dict) {
      return dict.sumImpl;
  };
  var sumRecord = function (dictSumRecord) {
      return function (dictRowToList) {
          return sumImpl(dictSumRecord)(Type_Data_RowList.RLProxy.value);
      };
  };
  var setInputFieldsTouchedNil = new SetInputFieldsTouched(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var setInputFieldsTouchedBuilder = function (dict) {
      return dict.setInputFieldsTouchedBuilder;
  };
  var setInputFieldsTouchedCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictRow1Cons) {
              return function (dictSetInputFieldsTouched) {
                  return new SetInputFieldsTouched(function (v) {
                      return function (r) {
                          var transform = function (v1) {
                              return {
                                  input: v1.input,
                                  touched: true,
                                  result: v1.result
                              };
                          };
                          var rest = setInputFieldsTouchedBuilder(dictSetInputFieldsTouched)(Type_Data_RowList.RLProxy.value)(r);
                          var val = transform(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var sequenceRecordNil = function (dictApplicative) {
      return new SequenceRecord(function () {
          return dictApplicative;
      }, function (v) {
          return function (v1) {
              return Control_Applicative.pure(dictApplicative)(Control_Category.identity(Record_Builder.categoryBuilder));
          };
      });
  };
  var sequenceRecordImpl = function (dict) {
      return dict.sequenceRecordImpl;
  };
  var sequenceRecordCons = function (dictIsSymbol) {
      return function (dictApplicative) {
          return function (dictCons) {
              return function (dictSequenceRecord) {
                  return function (dictRow1Cons) {
                      return new SequenceRecord(function () {
                          return dictApplicative;
                      }, function (v) {
                          return function (a) {
                              var rest = sequenceRecordImpl(dictSequenceRecord)(Type_Data_RowList.RLProxy.value)(a);
                              var valA = Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(a);
                              var fn = function (valA$prime) {
                                  return function (rest$prime) {
                                      return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(valA$prime))(rest$prime);
                                  };
                              };
                              return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(fn)(valA))(rest);
                          };
                      });
                  };
              };
          };
      };
  };
  var row3 = function (dictRow1Cons) {
      return function (dictRowToList) {
          return function (dictRowToList1) {
              return new Row3(function () {
                  return dictRow1Cons;
              }, function () {
                  return dictRowToList;
              }, function () {
                  return dictRowToList1;
              });
          };
      };
  };
  var row1Cons = function (dictCons) {
      return function (dictLacks) {
          return new Row1Cons(function () {
              return dictCons;
          }, function () {
              return dictLacks;
          });
      };
  };
  var nilSumRecord = function (dictMonoid) {
      return new SumRecord(function () {
          return dictMonoid;
      }, function (v) {
          return function (v1) {
              return Data_Monoid.mempty(dictMonoid);
          };
      });
  };
  var nilAllTouched = new AllTouched(function (v) {
      return function (v1) {
          return true;
      };
  });       
  var inputFieldsToInputNil = new InputFieldsToInput(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var inputFieldsToInputBuilder = function (dict) {
      return dict.inputFieldsToInputBuilder;
  };
  var inputFieldsToInputCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictInputFieldsToInput) {
              return function (dictRow1Cons) {
                  return new InputFieldsToInput(function (v) {
                      return function (r) {
                          var transform = function (v1) {
                              return v1.input;
                          };
                          var rest = inputFieldsToInputBuilder(dictInputFieldsToInput)(Type_Data_RowList.RLProxy.value)(r);
                          var val = transform(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var inputFieldToMaybeOutputNil = new InputFieldToMaybeOutput(function (v) {
      return function (v1) {
          return new Data_Maybe.Just(Control_Category.identity(Record_Builder.categoryBuilder));
      };
  });
  var inputFieldToMaybeOutputBuilder = function (dict) {
      return dict.inputFieldToMaybeOutputBuilder;
  };
  var inputFieldToMaybeOutputCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictInputFieldToMaybeOutput) {
              return function (dictRow1Cons) {
                  return new InputFieldToMaybeOutput(function (v) {
                      return function (r) {
                          var rest = inputFieldToMaybeOutputBuilder(dictInputFieldToMaybeOutput)(Type_Data_RowList.RLProxy.value)(r);
                          var transform = function (v1) {
                              return function (builder$prime) {
                                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(v1))(builder$prime);
                              };
                          };
                          var val = Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Spec.OutputField)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Either.hush)((function (v1) {
                              return v1.result;
                          })(Data_Newtype.unwrap(Formless_Spec.newtypeInputField)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r))))));
                          return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(transform)(val))(rest);
                      };
                  });
              };
          };
      };
  };
  var fromScratch = Data_Functor.flap(Data_Functor.functorFn)(Record_Builder.build)({});
  var inputFieldToMaybeOutput = function (dictRowToList) {
      return function (dictInputFieldToMaybeOutput) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (r) {
                      var builder = inputFieldToMaybeOutputBuilder(dictInputFieldToMaybeOutput)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap(dictNewtype1))(Data_Functor.map(Data_Maybe.functorMaybe)(fromScratch)(builder));
                  };
              };
          };
      };
  };
  var inputFieldsToInput = function (dictRowToList) {
      return function (dictInputFieldsToInput) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (r) {
                      var builder = inputFieldsToInputBuilder(dictInputFieldsToInput)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                      return Data_Newtype.wrap(dictNewtype1)(fromScratch(builder));
                  };
              };
          };
      };
  };
  var sequenceRecord = function (dictRowToList) {
      return function (dictApplicative) {
          return function (dictSequenceRecord) {
              return function ($147) {
                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(fromScratch)(sequenceRecordImpl(dictSequenceRecord)(Type_Data_RowList.RLProxy.value)($147));
              };
          };
      };
  };
  var setInputFieldsTouched = function (dictRowToList) {
      return function (dictSetInputFieldsTouched) {
          return function (dictNewtype) {
              return function (r) {
                  var builder = setInputFieldsTouchedBuilder(dictSetInputFieldsTouched)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                  return Data_Newtype.wrap(dictNewtype)(fromScratch(builder));
              };
          };
      };
  };
  var unwrapRecord = function (dictRowToList) {
      return function (dictUnwrapRecord) {
          return function ($148) {
              return fromScratch(unwrapRecordBuilder(dictUnwrapRecord)(Type_Data_RowList.RLProxy.value)($148));
          };
      };
  };
  var wrapRecord = function (dictRowToList) {
      return function (dictWrapRecord) {
          return function ($149) {
              return fromScratch(wrapRecordBuilder(dictWrapRecord)(Type_Data_RowList.RLProxy.value)($149));
          };
      };
  };
  var formSpecToInputFieldNil = new FormSpecToInputField(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var formSpecToInputFieldBuilder = function (dict) {
      return dict.formSpecToInputFieldBuilder;
  };
  var formSpecToInputFieldCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictFormSpecToInputField) {
              return function (dictRow1Cons) {
                  return new FormSpecToInputField(function (v) {
                      return function (r) {
                          var transform = function (v1) {
                              return {
                                  input: v1,
                                  touched: false,
                                  result: Data_Maybe.Nothing.value
                              };
                          };
                          var rest = formSpecToInputFieldBuilder(dictFormSpecToInputField)(Type_Data_RowList.RLProxy.value)(r);
                          var val = transform(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var formSpecToInputFields = function (dictRowToList) {
      return function (dictFormSpecToInputField) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (r) {
                      var builder = formSpecToInputFieldBuilder(dictFormSpecToInputField)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                      return Data_Newtype.wrap(dictNewtype1)(fromScratch(builder));
                  };
              };
          };
      };
  };
  var eqInput = function (dictEq) {
      return dictEq;
  };
  var countErrorsNil = new CountErrors(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var countErrorsBuilder = function (dict) {
      return dict.countErrorsBuilder;
  };
  var countErrorsCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCountErrors) {
              return function (dictRow1Cons) {
                  return new CountErrors(function (v) {
                      return function (r) {
                          var transform = function (v1) {
                              if (v1.result instanceof Data_Maybe.Just && v1.result.value0 instanceof Data_Either.Left) {
                                  return 1;
                              };
                              return 0;
                          };
                          var rest = countErrorsBuilder(dictCountErrors)(Type_Data_RowList.RLProxy.value)(r);
                          var val = transform(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var countErrors = function (dictRowToList) {
      return function (dictRowToList1) {
          return function (dictCountErrors) {
              return function (dictSumRecord) {
                  return function (dictNewtype) {
                      return function (r) {
                          var builder = countErrorsBuilder(dictCountErrors)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                          return Data_Newtype.unwrap(Data_Newtype.newtypeAdditive)(sumRecord(dictSumRecord)(dictRowToList1)(fromScratch(builder)));
                      };
                  };
              };
          };
      };
  };
  var consSumRecord = function (dictIsSymbol) {
      return function (dictMonoid) {
          return function (dictCons) {
              return function (dictSumRecord) {
                  return new SumRecord(function () {
                      return dictMonoid;
                  }, function (v) {
                      return function (r) {
                          var val = Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r);
                          var tail$prime = sumImpl(dictSumRecord)(Type_Data_RowList.RLProxy.value)(r);
                          return Data_Semigroup.append(dictMonoid.Semigroup0())(val)(tail$prime);
                      };
                  });
              };
          };
      };
  };
  var applyRowListNil = new ApplyRowList(function () {
      return undefined;
  }, function () {
      return undefined;
  }, function () {
      return undefined;
  }, function (v) {
      return function (v1) {
          return function (v2) {
              return function (v3) {
                  return function (v4) {
                      return Control_Category.identity(Record_Builder.categoryBuilder);
                  };
              };
          };
      };
  });
  var applyRowList = function (dict) {
      return dict.applyRowList;
  };
  var applyRowListCons = function (dictCons) {
      return function (dictCons1) {
          return function (dictRow3) {
              return function (dictRow31) {
                  return function (dictRow32) {
                      return function (dictApplyRowList) {
                          return function (dictIsSymbol) {
                              return new ApplyRowList(dictRow3.RowToList2, dictRow31.RowToList2, dictRow32.RowToList2, function (io) {
                                  return function (i) {
                                      return function (o) {
                                          return function (ior) {
                                              return function (ir) {
                                                  var rltail = function (v) {
                                                      return Type_Data_RowList.RLProxy.value;
                                                  };
                                                  var tor = applyRowList(dictApplyRowList)(rltail(io))(rltail(i))(rltail(o))(ior)(ir);
                                                  var f = Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(ior);
                                                  var x = Record.get(dictIsSymbol)(dictCons1)(Data_Symbol.SProxy.value)(ir);
                                                  var fir = Record_Builder.insert((dictRow32.Row1Cons0()).Cons0())((dictRow32.Row1Cons0()).Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(f(x));
                                                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(fir)(tor);
                                              };
                                          };
                                      };
                                  };
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var applyRecordImpl = function (dictRowToList) {
      return function (dictRowToList1) {
          return function (dictRowToList2) {
              return function (dictApplyRowList) {
                  return new ApplyRecord(function (io) {
                      return function (i) {
                          var builder = applyRowList(dictApplyRowList)(Type_Data_RowList.RLProxy.value)(Type_Data_RowList.RLProxy.value)(Type_Data_RowList.RLProxy.value);
                          return Record_Builder.build(builder(io)(i))({});
                      };
                  });
              };
          };
      };
  };
  var applyRecord = function (dict) {
      return dict.applyRecord;
  };
  var allTouchedImpl = function (dict) {
      return dict.allTouchedImpl;
  };
  var checkTouched = function (dictRowToList) {
      return function (dictAllTouched) {
          return function (dictNewtype) {
              return function ($150) {
                  return allTouchedImpl(dictAllTouched)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)($150));
              };
          };
      };
  };
  var consAllTouched = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictAllTouched) {
              return new AllTouched(function (v) {
                  return function (r) {
                      var $146 = (Data_Newtype.unwrap(Formless_Spec.newtypeInputField)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r))).touched;
                      if ($146) {
                          return allTouchedImpl(dictAllTouched)(Type_Data_RowList.RLProxy.value)(r);
                      };
                      return false;
                  };
              });
          };
      };
  };
  exports["allTouchedImpl"] = allTouchedImpl;
  exports["applyRecord"] = applyRecord;
  exports["applyRowList"] = applyRowList;
  exports["countErrorsBuilder"] = countErrorsBuilder;
  exports["formSpecToInputFieldBuilder"] = formSpecToInputFieldBuilder;
  exports["inputFieldToMaybeOutputBuilder"] = inputFieldToMaybeOutputBuilder;
  exports["inputFieldsToInputBuilder"] = inputFieldsToInputBuilder;
  exports["sequenceRecordImpl"] = sequenceRecordImpl;
  exports["setInputFieldsTouchedBuilder"] = setInputFieldsTouchedBuilder;
  exports["sumImpl"] = sumImpl;
  exports["unwrapRecordBuilder"] = unwrapRecordBuilder;
  exports["wrapRecordBuilder"] = wrapRecordBuilder;
  exports["fromScratch"] = fromScratch;
  exports["Row1Cons"] = Row1Cons;
  exports["Row3"] = Row3;
  exports["unwrapRecord"] = unwrapRecord;
  exports["wrapRecord"] = wrapRecord;
  exports["sequenceRecord"] = sequenceRecord;
  exports["checkTouched"] = checkTouched;
  exports["countErrors"] = countErrors;
  exports["sumRecord"] = sumRecord;
  exports["setInputFieldsTouched"] = setInputFieldsTouched;
  exports["inputFieldsToInput"] = inputFieldsToInput;
  exports["formSpecToInputFields"] = formSpecToInputFields;
  exports["inputFieldToMaybeOutput"] = inputFieldToMaybeOutput;
  exports["SetInputFieldsTouched"] = SetInputFieldsTouched;
  exports["InputFieldsToInput"] = InputFieldsToInput;
  exports["FormSpecToInputField"] = FormSpecToInputField;
  exports["InputFieldToMaybeOutput"] = InputFieldToMaybeOutput;
  exports["SumRecord"] = SumRecord;
  exports["CountErrors"] = CountErrors;
  exports["AllTouched"] = AllTouched;
  exports["UnwrapRecord"] = UnwrapRecord;
  exports["WrapRecord"] = WrapRecord;
  exports["SequenceRecord"] = SequenceRecord;
  exports["ApplyRecord"] = ApplyRecord;
  exports["ApplyRowList"] = ApplyRowList;
  exports["eqInput"] = eqInput;
  exports["row1Cons"] = row1Cons;
  exports["row3"] = row3;
  exports["setInputFieldsTouchedNil"] = setInputFieldsTouchedNil;
  exports["setInputFieldsTouchedCons"] = setInputFieldsTouchedCons;
  exports["inputFieldsToInputNil"] = inputFieldsToInputNil;
  exports["inputFieldsToInputCons"] = inputFieldsToInputCons;
  exports["formSpecToInputFieldNil"] = formSpecToInputFieldNil;
  exports["formSpecToInputFieldCons"] = formSpecToInputFieldCons;
  exports["inputFieldToMaybeOutputNil"] = inputFieldToMaybeOutputNil;
  exports["inputFieldToMaybeOutputCons"] = inputFieldToMaybeOutputCons;
  exports["nilSumRecord"] = nilSumRecord;
  exports["consSumRecord"] = consSumRecord;
  exports["countErrorsNil"] = countErrorsNil;
  exports["countErrorsCons"] = countErrorsCons;
  exports["nilAllTouched"] = nilAllTouched;
  exports["consAllTouched"] = consAllTouched;
  exports["unwrapRecordNil"] = unwrapRecordNil;
  exports["unwrapRecordCons"] = unwrapRecordCons;
  exports["wrapRecordNil"] = wrapRecordNil;
  exports["wrapRecordCons"] = wrapRecordCons;
  exports["sequenceRecordNil"] = sequenceRecordNil;
  exports["sequenceRecordCons"] = sequenceRecordCons;
  exports["applyRecordImpl"] = applyRecordImpl;
  exports["applyRowListNil"] = applyRowListNil;
  exports["applyRowListCons"] = applyRowListCons;
})(PS["Formless.Internal"] = PS["Formless.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Setter = PS["Data.Lens.Setter"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Symbol = PS["Data.Symbol"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Prelude = PS["Prelude"];
  var Record_Builder = PS["Record.Builder"];
  var Type_Row = PS["Type.Row"];                 
  var MakeFormSpecFromRow = function (mkFormSpecFromRowBuilder) {
      this.mkFormSpecFromRowBuilder = mkFormSpecFromRowBuilder;
  };
  var MakeSProxies = function (makeSProxiesBuilder) {
      this.makeSProxiesBuilder = makeSProxiesBuilder;
  };
  var unwrapOutput = function (dictRowToList) {
      return function (dictUnwrapRecord) {
          return function (dictNewtype) {
              return function ($47) {
                  return Formless_Internal.unwrapRecord(dictRowToList)(dictUnwrapRecord)(Data_Newtype.unwrap(dictNewtype)($47));
              };
          };
      };
  };
  var setInput = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (v) {
                      return function ($48) {
                          return Data_Lens_Setter.set(Formless_Spec._Result(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)(Data_Lens_Setter.set(Formless_Spec._Touched(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn))(true)(Data_Lens_Setter.set(Formless_Spec._Input(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn))(v)($48)));
                      };
                  };
              };
          };
      };
  };
  var resetField = function (dictIsSymbol) {
      return function (dictInitial) {
          return function (dictNewtype) {
              return function (dictCons) {
                  return function (sym) {
                      return function ($49) {
                          return Data_Lens_Setter.set(Formless_Spec._Result(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)(Data_Lens_Setter.set(Formless_Spec._Touched(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn))(false)(Data_Lens_Setter.set(Formless_Spec._Input(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn))(Formless_Class_Initial.initial(dictInitial))($49)));
                      };
                  };
              };
          };
      };
  };
  var modifyInput = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (f) {
                      return function ($50) {
                          return Data_Lens_Setter.set(Formless_Spec._Result(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)(Data_Lens_Setter.set(Formless_Spec._Touched(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn))(true)(Formless_Spec._Input(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Profunctor_Strong.strongFn)(f)($50)));
                      };
                  };
              };
          };
      };
  };
  var mkFormSpecFromRowNil = new MakeFormSpecFromRow(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var mkFormSpecFromRowBuilder = function (dict) {
      return dict.mkFormSpecFromRowBuilder;
  };
  var mkFormSpecFromRowCons = function (dictIsSymbol) {
      return function (dictInitial) {
          return function (dictCons) {
              return function (dictMakeFormSpecFromRow) {
                  return function (dictRow1Cons) {
                      return new MakeFormSpecFromRow(function (v) {
                          return function (r) {
                              var val = Formless_Class_Initial.initial(dictInitial);
                              var rest = mkFormSpecFromRowBuilder(dictMakeFormSpecFromRow)(Type_Row.RLProxy.value)(r);
                              var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                              return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                          };
                      });
                  };
              };
          };
      };
  };
  var mkFormSpecFromProxy = function (dictRowToList) {
      return function (dictMakeFormSpecFromRow) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      var builder = mkFormSpecFromRowBuilder(dictMakeFormSpecFromRow)(Type_Row.RLProxy.value)(Type_Row.RProxy.value);
                      return Data_Newtype.wrap(dictNewtype1)(Formless_Internal.fromScratch(builder));
                  };
              };
          };
      };
  };
  var mkFormSpec = function (dictRowToList) {
      return function (dictWrapRecord) {
          return function (dictNewtype) {
              return function ($51) {
                  return Data_Newtype.wrap(dictNewtype)(Formless_Internal.wrapRecord(dictRowToList)(dictWrapRecord)($51));
              };
          };
      };
  };
  var makeSProxiesNil = new MakeSProxies(function (v) {
      return Control_Category.identity(Record_Builder.categoryBuilder);
  });
  var makeSProxiesBuilder = function (dict) {
      return dict.makeSProxiesBuilder;
  };
  var makeSProxiesCons = function (dictIsSymbol) {
      return function (dictRow1Cons) {
          return function (dictMakeSProxies) {
              return new MakeSProxies(function (v) {
                  var rest = makeSProxiesBuilder(dictMakeSProxies)(Type_Row.RLProxy.value);
                  var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(Data_Symbol.SProxy.value);
                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
              });
          };
      };
  };
  var mkSProxies = function (dictRowToList) {
      return function (dictMakeSProxies) {
          return function (dictNewtype) {
              return function (v) {
                  var builder = makeSProxiesBuilder(dictMakeSProxies)(Type_Row.RLProxy.value);
                  return Formless_Internal.fromScratch(builder);
              };
          };
      };
  };
  var getResult = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Lens_Getter.view(Formless_Spec._Result(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Lens_Internal_Forget.strongForget));
              };
          };
      };
  };
  var getInput = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Lens_Getter.view(Formless_Spec._Input(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Lens_Internal_Forget.strongForget));
              };
          };
      };
  };
  exports["makeSProxiesBuilder"] = makeSProxiesBuilder;
  exports["mkFormSpecFromRowBuilder"] = mkFormSpecFromRowBuilder;
  exports["getInput"] = getInput;
  exports["getResult"] = getResult;
  exports["setInput"] = setInput;
  exports["modifyInput"] = modifyInput;
  exports["resetField"] = resetField;
  exports["unwrapOutput"] = unwrapOutput;
  exports["mkFormSpec"] = mkFormSpec;
  exports["mkFormSpecFromProxy"] = mkFormSpecFromProxy;
  exports["MakeFormSpecFromRow"] = MakeFormSpecFromRow;
  exports["mkSProxies"] = mkSProxies;
  exports["MakeSProxies"] = MakeSProxies;
  exports["mkFormSpecFromRowNil"] = mkFormSpecFromRowNil;
  exports["mkFormSpecFromRowCons"] = mkFormSpecFromRowCons;
  exports["makeSProxiesNil"] = makeSProxiesNil;
  exports["makeSProxiesCons"] = makeSProxiesCons;
})(PS["Formless.Spec.Transform"] = PS["Formless.Spec.Transform"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];                 
  var OrdBox = (function () {
      function OrdBox(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OrdBox.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OrdBox(value0, value1, value2);
              };
          };
      };
      return OrdBox;
  })();
  var unOrdBox = function (v) {
      return v.value2;
  };
  var mkOrdBox = function (dictOrd) {
      return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
  };
  var eqOrdBox = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.value0(v.value2)(v1.value2);
      };
  });
  var ordOrdBox = new Data_Ord.Ord(function () {
      return eqOrdBox;
  }, function (v) {
      return function (v1) {
          return v.value1(v.value2)(v1.value2);
      };
  });
  exports["mkOrdBox"] = mkOrdBox;
  exports["unOrdBox"] = unOrdBox;
  exports["eqOrdBox"] = eqOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS["Halogen.Data.OrdBox"] = PS["Halogen.Data.OrdBox"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  var Web_DOM = PS["Web.DOM"];
  var RefUpdate = (function () {
      function RefUpdate(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      RefUpdate.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new RefUpdate(value0, value1, value2);
              };
          };
      };
      return RefUpdate;
  })();
  var Query = (function () {
      function Query(value0) {
          this.value0 = value0;
      };
      Query.create = function (value0) {
          return new Query(value0);
      };
      return Query;
  })();                             
  var bifunctorInputF = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof RefUpdate) {
                  return new RefUpdate(v.value0, v.value1, f(v.value2));
              };
              if (v instanceof Query) {
                  return new Query(g(v.value0));
              };
              throw new Error("Failed pattern match at Halogen.Query.InputF line 21, column 15 - line 23, column 27: " + [ v.constructor.name ]);
          };
      };
  });
  var functorInputF = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorInputF));
  exports["RefUpdate"] = RefUpdate;
  exports["Query"] = Query;
  exports["bifunctorInputF"] = bifunctorInputF;
  exports["functorInputF"] = functorInputF;
})(PS["Halogen.Query.InputF"] = PS["Halogen.Query.InputF"] || {});
(function(exports) {
    "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Prelude = PS["Prelude"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var fail = function ($107) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign line 106, column 1 - line 106, column 55: " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS["Foreign"] = PS["Foreign"] || {});
(function(exports) {
    "use strict";    

  exports.runST = function (f) {
    return f();
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;

  exports.keys = Object.keys || toArrayWithKey(function (k) {
    return function () { return k; };
  });
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
    "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Foreign.Object.ST"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Foreign.Object"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Monad_ST_Internal = PS["Control.Monad.ST.Internal"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_FoldableWithIndex = PS["Data.FoldableWithIndex"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_FunctorWithIndex = PS["Data.FunctorWithIndex"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_TraversableWithIndex = PS["Data.TraversableWithIndex"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Foreign_Object_ST = PS["Foreign.Object.ST"];
  var Prelude = PS["Prelude"];
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(Control_Bind.bind(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST["new"])(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_ST_Internal.bindST)(Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(Data_Foldable.foldableArray)(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                  return Foreign_Object_ST.poke(v1.value0)(v1.value1)(v);
              }))(function () {
                  return Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST)(v);
              });
          }));
      };
  };
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["keys"] = $foreign.keys;
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Effect = PS["Effect"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Prelude = PS["Prelude"];                 
  var Step = (function () {
      function Step(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Step(value0, value1, value2);
              };
          };
      };
      return Step;
  })();
  var step = function (v) {
      return v.value1;
  };
  var halt = function (v) {
      return v.value2;
  };
  var extract = function (v) {
      return v.value0;
  };
  exports["Step"] = Step;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS["Halogen.VDom.Machine"] = PS["Halogen.VDom.Machine"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var ElemSpec = (function () {
      function ElemSpec(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ElemSpec.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ElemSpec(value0, value1, value2);
              };
          };
      };
      return ElemSpec;
  })();
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return new Elem(value0, value1);
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return new Keyed(value0, value1);
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($90) {
          return f($90);
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var functorElemSpec = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new ElemSpec(m.value0, m.value1, f(m.value2));
      };
  });
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($92) {
                  return f(v.value0($92));
              }, function ($93) {
                  return g(v.value1($93));
              }, v.value2));
          });
      };
  });
  var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof Text) {
                  return new Text(v.value0);
              };
              if (v instanceof Grafted) {
                  return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
              };
              return new Grafted(graft(new Graft(f, g, v)));
          };
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value1));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value1));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types line 74, column 7 - line 74, column 27: " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["Graft"] = Graft;
  exports["graft"] = graft;
  exports["unGraft"] = unGraft;
  exports["runGraft"] = runGraft;
  exports["ElemSpec"] = ElemSpec;
  exports["bifunctorVDom"] = bifunctorVDom;
  exports["bifunctorGraft"] = bifunctorGraft;
  exports["functorElemSpec"] = functorElemSpec;
})(PS["Halogen.VDom.Types"] = PS["Halogen.VDom.Types"] || {});
(function(exports) {
    "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
      obj[key] = val;
  };

  exports.forE = function (a, f) {
      var b = [];
      for (var i = 0; i < a.length; i++) {
        b.push(f(i, a[i]));
      }
      return b;
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }
      i++;
    }
    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }
    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return doc.createTextNode(s);
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name)
    }
  };

  exports.insertChildIx = function (i, a, b) {
    var n = b.childNodes.item(i) || null;
    if (n !== a) {
      b.insertBefore(a, n);
    }
  };

  exports.removeChild = function (a, b) {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };

  exports.parentNode = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.addEventListener = function (ev, listener, el) {
    el.addEventListener(ev, listener, false);
  };

  exports.removeEventListener = function (ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
    "use strict";                                             

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.DOM.ParentNode"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Web_DOM_HTMLCollection = PS["Web.DOM.HTMLCollection"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NodeList = PS["Web.DOM.NodeList"];
  var querySelector = function (qs) {
      return function ($3) {
          return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign._querySelector(qs)($3));
      };
  };
  exports["querySelector"] = querySelector;
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function(exports) {
    "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };

  exports.removeEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function(exports) {
    "use strict";

  exports._currentTarget = function (e) {
    return e.currentTarget;
  };

  exports.preventDefault = function (e) {
    return function () {
      return e.preventDefault();
    };
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.Event.Event"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Web_Event_EventPhase = PS["Web.Event.EventPhase"];
  var Web_Event_Internal_Types = PS["Web.Event.Internal.Types"];
  var currentTarget = function ($6) {
      return Data_Nullable.toMaybe($foreign._currentTarget($6));
  };
  exports["currentTarget"] = currentTarget;
  exports["preventDefault"] = $foreign.preventDefault;
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.Event.EventTarget"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_Internal_Types = PS["Web.Event.Internal.Types"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.DOM.Element"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_ChildNode = PS["Web.DOM.ChildNode"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NonDocumentTypeChildNode = PS["Web.DOM.NonDocumentTypeChildNode"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];              
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS["Web.DOM.Element"] = PS["Web.DOM.Element"] || {});
(function(exports) {
    "use strict";

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                   

  exports._parentNode = getEffProp("parentNode");          

  exports._nextSibling = getEffProp("nextSibling");

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          return parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.DOM.Node"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NodeType = PS["Web.DOM.NodeType"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];
  var parentNode = function ($2) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign._parentNode($2));
  };
  var nextSibling = function ($6) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign._nextSibling($6));
  };
  exports["parentNode"] = parentNode;
  exports["nextSibling"] = nextSibling;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["appendChild"] = $foreign.appendChild;
  exports["removeChild"] = $foreign.removeChild;
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Halogen.VDom.Util"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Foreign_Object = PS["Foreign.Object"];
  var Foreign_Object_ST = PS["Foreign.Object.ST"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Node = PS["Web.DOM.Node"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];                 
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  var effectUnit = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  exports["effectUnit"] = effectUnit;
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Ref = PS["Effect.Ref"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Foreign = PS["Foreign"];
  var Foreign_Object = PS["Foreign.Object"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];                 
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var v = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if (v === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 178, column 16 - line 185, column 1: " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromInt = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var functorProp = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Handler) {
              return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
          };
          if (v instanceof Ref) {
              return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
          };
          return v;
      };
  });
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 165, column 5 - line 175, column 18: " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return emit(v.value0)();
              };
              return Data_Unit.unit;
          };
          var done = function (ps) {
              var v = Foreign_Object.lookup("ref")(ps);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return function () {
                      return mbEmit(v.value0.value0(new Removed(el)));
                  };
              };
              return Halogen_VDom_Util.effectUnit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $61 = v11.value2 === v2.value2;
                      if ($61) {
                          return v2;
                      };
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return v2;
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $70 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($70) {
                              return v2;
                          };
                          setProperty(v2.value0, v2.value1, el);
                          return v2;
                      };
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                      return v2;
                  };
                  return v2;
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v2 instanceof Property) {
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v2 instanceof Handler) {
                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                          return v2;
                      };
                      var v4 = Effect_Ref["new"](v2.value1)();
                      var v5 = Web_Event_EventTarget.eventListener(function (ev) {
                          return function __do() {
                              var v5 = Effect_Ref.read(v4)();
                              return mbEmit(v5(ev));
                          };
                      })();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(v5, v4), events);
                      Halogen_VDom_Util.addEventListener(v2.value0, v5, el);
                      return v2;
                  };
                  if (v2 instanceof Ref) {
                      mbEmit(v2.value0(new Created(el)));
                      return v2;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 109, column 5 - line 131, column 15: " + [ v2.constructor.name ]);
              };
          };
          var patch = function (prevEvents, ps1) {
              return function (ps2) {
                  var v = Halogen_VDom_Util.newMutMap();
                  var onThis = removeProp(prevEvents);
                  var onThese = diffProp(prevEvents, v);
                  var onThat = applyProp(v);
                  var v1 = Halogen_VDom_Util.diffWithKeyAndIxE(ps1, ps2, propToStrKey, onThese, onThis, onThat);
                  return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
              };
          };
          var render = function (ps1) {
              var v = Halogen_VDom_Util.newMutMap();
              var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(v));
              return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
          };
          return render;
      };
  };
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["propFromString"] = propFromString;
  exports["propFromBoolean"] = propFromBoolean;
  exports["propFromInt"] = propFromInt;
  exports["buildProp"] = buildProp;
  exports["functorProp"] = functorProp;
})(PS["Halogen.VDom.DOM.Prop"] = PS["Halogen.VDom.DOM.Prop"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed_ButtonType = PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_CrossOriginValue = PS["DOM.HTML.Indexed.CrossOriginValue"];
  var DOM_HTML_Indexed_DirValue = PS["DOM.HTML.Indexed.DirValue"];
  var DOM_HTML_Indexed_FormMethod = PS["DOM.HTML.Indexed.FormMethod"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_KindValue = PS["DOM.HTML.Indexed.KindValue"];
  var DOM_HTML_Indexed_MenuType = PS["DOM.HTML.Indexed.MenuType"];
  var DOM_HTML_Indexed_MenuitemType = PS["DOM.HTML.Indexed.MenuitemType"];
  var DOM_HTML_Indexed_OnOff = PS["DOM.HTML.Indexed.OnOff"];
  var DOM_HTML_Indexed_OrderedListType = PS["DOM.HTML.Indexed.OrderedListType"];
  var DOM_HTML_Indexed_PreloadValue = PS["DOM.HTML.Indexed.PreloadValue"];
  var DOM_HTML_Indexed_ScopeValue = PS["DOM.HTML.Indexed.ScopeValue"];
  var DOM_HTML_Indexed_StepValue = PS["DOM.HTML.Indexed.StepValue"];
  var DOM_HTML_Indexed_WrapValue = PS["DOM.HTML.Indexed.WrapValue"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var HTML = function (x) {
      return x;
  };
  var ClassName = function (x) {
      return x;
  };
  var IsProp = function (toPropValue) {
      this.toPropValue = toPropValue;
  }; 
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($27) {
      return HTML(Halogen_VDom_Types.Text.create($27));
  };
  var stringIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var slot = function ($29) {
      return HTML(Halogen_VDom_Types.Widget.create($29));
  };
  var prop = function (dictIsProp) {
      return function (v) {
          return function ($32) {
              return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($32));
          };
      };
  };       
  var newtypeClassName = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ClassName);
  var intIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
  var inputTypeIsProp = new IsProp(function ($40) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($40));
  });
  var handler = Halogen_VDom_DOM_Prop.Handler.create;
  var element = function (ns) {
      return function (name) {
          return function (props) {
              return function (children) {
                  return new Halogen_VDom_Types.Elem(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
              };
          };
      };
  }; 
  var booleanIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
  var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(g))))(f)(v);
          };
      };
  });
  exports["HTML"] = HTML;
  exports["slot"] = slot;
  exports["text"] = text;
  exports["element"] = element;
  exports["prop"] = prop;
  exports["handler"] = handler;
  exports["IsProp"] = IsProp;
  exports["toPropValue"] = toPropValue;
  exports["ClassName"] = ClassName;
  exports["bifunctorHTML"] = bifunctorHTML;
  exports["stringIsProp"] = stringIsProp;
  exports["intIsProp"] = intIsProp;
  exports["booleanIsProp"] = booleanIsProp;
  exports["inputTypeIsProp"] = inputTypeIsProp;
  exports["newtypeClassName"] = newtypeClassName;
})(PS["Halogen.HTML.Core"] = PS["Halogen.HTML.Core"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_AVar = PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];                 
  var Listening = (function () {
      function Listening() {

      };
      Listening.value = new Listening();
      return Listening;
  })();
  var Done = (function () {
      function Done() {

      };
      Done.value = new Done();
      return Done;
  })();
  var unEventSource = function (v) {
      return v;
  };
  var eqSubscribeStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Listening && y instanceof Listening) {
              return true;
          };
          if (x instanceof Done && y instanceof Done) {
              return true;
          };
          return false;
      };
  });
  exports["Listening"] = Listening;
  exports["Done"] = Done;
  exports["unEventSource"] = unEventSource;
  exports["eqSubscribeStatus"] = eqSubscribeStatus;
})(PS["Halogen.Query.EventSource"] = PS["Halogen.Query.EventSource"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var ForkF = (function () {
      function ForkF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ForkF.create = function (value0) {
          return function (value1) {
              return new ForkF(value0, value1);
          };
      };
      return ForkF;
  })();
  var unFork = Unsafe_Coerce.unsafeCoerce;
  var mkFork = Unsafe_Coerce.unsafeCoerce;
  var fork = function (fx) {
      return mkFork(new ForkF(fx, Control_Category.identity(Control_Category.categoryFn)));
  };
  exports["ForkF"] = ForkF;
  exports["fork"] = fork;
  exports["mkFork"] = mkFork;
  exports["unFork"] = unFork;
})(PS["Halogen.Query.ForkF"] = PS["Halogen.Query.ForkF"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Applicative_Free = PS["Control.Applicative.Free"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_ForkF = PS["Halogen.Query.ForkF"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];
  var Web_DOM = PS["Web.DOM"];
  var HalogenM = function (x) {
      return x;
  };
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var Subscribe = (function () {
      function Subscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Subscribe.create = function (value0) {
          return function (value1) {
              return new Subscribe(value0, value1);
          };
      };
      return Subscribe;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Halt = (function () {
      function Halt(value0) {
          this.value0 = value0;
      };
      Halt.create = function (value0) {
          return new Halt(value0);
      };
      return Halt;
  })();
  var GetSlots = (function () {
      function GetSlots(value0) {
          this.value0 = value0;
      };
      GetSlots.create = function (value0) {
          return new GetSlots(value0);
      };
      return GetSlots;
  })();
  var CheckSlot = (function () {
      function CheckSlot(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CheckSlot.create = function (value0) {
          return function (value1) {
              return new CheckSlot(value0, value1);
          };
      };
      return CheckSlot;
  })();
  var ChildQuery = (function () {
      function ChildQuery(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChildQuery.create = function (value0) {
          return function (value1) {
              return new ChildQuery(value0, value1);
          };
      };
      return ChildQuery;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Par = (function () {
      function Par(value0) {
          this.value0 = value0;
      };
      Par.create = function (value0) {
          return new Par(value0);
      };
      return Par;
  })();
  var Fork = (function () {
      function Fork(value0) {
          this.value0 = value0;
      };
      Fork.create = function (value0) {
          return new Fork(value0);
      };
      return Fork;
  })();
  var GetRef = (function () {
      function GetRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetRef.create = function (value0) {
          return function (value1) {
              return new GetRef(value0, value1);
          };
      };
      return GetRef;
  })();
  var raise = function (o) {
      return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
  };            
  var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return HalogenM(Control_Monad_Free.liftF(new Lift(m)));
      };
  });
  var mkQuery = function (dictEq) {
      return function (p) {
          return function ($176) {
              return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(p)(Data_Coyoneda.coyoneda(Control_Category.identity(Control_Category.categoryFn))($176))));
          };
      };
  };
  var functorHalogenM = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v);
      };
  });
  var fork = function (dictMonadAff) {
      return function (a) {
          return Data_Functor.map(functorHalogenM)(Data_Functor.map(Data_Functor.functorFn)(Effect_Aff_Class.liftAff(dictMonadAff)))(Control_Monad_Free.liftF(Fork.create(Halogen_Query_ForkF.fork(a))));
      };
  };
  var checkSlot = function (p) {
      return HalogenM(Control_Monad_Free.liftF(new CheckSlot(p, Control_Category.identity(Control_Category.categoryFn))));
  };
  var applyHalogenM = new Control_Apply.Apply(function () {
      return functorHalogenM;
  }, function (v) {
      return function (v1) {
          return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1);
      };
  });
  var bindHalogenM = new Control_Bind.Bind(function () {
      return applyHalogenM;
  }, function (v) {
      return function (f) {
          return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function (x) {
              var v1 = f(x);
              return v1;
          });
      };
  });                                                       
  var applicativeHalogenM = new Control_Applicative.Applicative(function () {
      return applyHalogenM;
  }, function (a) {
      return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a);
  });
  var monadHalogenM = new Control_Monad.Monad(function () {
      return applicativeHalogenM;
  }, function () {
      return bindHalogenM;
  });
  var monadEffectHalogenM = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadHalogenM;
      }, function (eff) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Class.liftEffect(dictMonadEffect)(eff))));
      });
  };
  var monadAffHalogenM = function (dictMonadAff) {
      return new Effect_Aff_Class.MonadAff(function () {
          return monadEffectHalogenM(dictMonadAff.MonadEffect0());
      }, function (aff) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Aff_Class.liftAff(dictMonadAff)(aff))));
      });
  };
  var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
      return monadHalogenM;
  }, function ($180) {
      return HalogenM(Control_Monad_Free.liftF(State.create($180)));
  });
  var monadRecHalogenM = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadHalogenM;
  }, function (k) {
      return function (a) {
          var go = function (v) {
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return Control_Monad_Rec_Class.tailRecM(monadRecHalogenM)(k)(v.value0);
              };
              if (v instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeHalogenM)(v.value0);
              };
              throw new Error("Failed pattern match at Halogen.Query.HalogenM line 94, column 5 - line 94, column 31: " + [ v.constructor.name ]);
          };
          return Control_Bind.bind(bindHalogenM)(k(a))(go);
      };
  });
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Lift"] = Lift;
  exports["Halt"] = Halt;
  exports["GetSlots"] = GetSlots;
  exports["CheckSlot"] = CheckSlot;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["GetRef"] = GetRef;
  exports["HalogenM"] = HalogenM;
  exports["mkQuery"] = mkQuery;
  exports["checkSlot"] = checkSlot;
  exports["raise"] = raise;
  exports["fork"] = fork;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applyHalogenM"] = applyHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadHalogenM"] = monadHalogenM;
  exports["monadEffectHalogenM"] = monadEffectHalogenM;
  exports["monadAffHalogenM"] = monadAffHalogenM;
  exports["monadTransHalogenM"] = monadTransHalogenM;
  exports["monadRecHalogenM"] = monadRecHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
})(PS["Halogen.Query.HalogenM"] = PS["Halogen.Query.HalogenM"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Const = PS["Data.Const"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var ComponentSlot = (function () {
      function ComponentSlot(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ComponentSlot.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ComponentSlot(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ComponentSlot;
  })();
  var unComponentSlot = function (f) {
      return function (cs) {
          return f(cs.value0)(cs.value1)(cs.value2)(cs.value3)(cs.value4)(cs.value5);
      };
  };
  var unComponent = Unsafe_Coerce.unsafeCoerce;
  var mkComponentSlot = ComponentSlot.create;
  var mkComponent = Unsafe_Coerce.unsafeCoerce;
  var parentComponent = function (dictOrd) {
      return function (spec) {
          return mkComponent({
              initialState: spec.initialState,
              render: spec.render,
              "eval": spec["eval"],
              receiver: spec.receiver,
              initializer: Data_Maybe.Nothing.value,
              finalizer: Data_Maybe.Nothing.value,
              mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
          });
      };
  };
  var lifecycleComponent = function (dictBifunctor) {
      return function (spec) {
          return mkComponent({
              initialState: spec.initialState,
              render: spec.render,
              "eval": spec["eval"],
              receiver: spec.receiver,
              initializer: spec.initializer,
              finalizer: spec.finalizer,
              mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)
          });
      };
  }; 
  var component = function (dictBifunctor) {
      return function (spec) {
          return lifecycleComponent(dictBifunctor)({
              initialState: spec.initialState,
              render: spec.render,
              "eval": spec["eval"],
              receiver: spec.receiver,
              initializer: Data_Maybe.Nothing.value,
              finalizer: Data_Maybe.Nothing.value
          });
      };
  };
  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["component"] = component;
  exports["lifecycleComponent"] = lifecycleComponent;
  exports["parentComponent"] = parentComponent;
  exports["mkComponentSlot"] = mkComponentSlot;
  exports["unComponentSlot"] = unComponentSlot;
})(PS["Halogen.Component"] = PS["Halogen.Component"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Functor_Coproduct = PS["Data.Functor.Coproduct"];
  var Data_Functor_Coproduct_Nested = PS["Data.Functor.Coproduct.Nested"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Maybe = PS["Data.Maybe"];
  var _Either3 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Either_Nested.in3)(Data_Either_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Either2 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Either_Nested.in2)(Data_Either_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Either1 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Either_Nested.in1)(Data_Either_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Coproduct3 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in3)(Data_Functor_Coproduct_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Coproduct2 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in2)(Data_Functor_Coproduct_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  var _Coproduct1 = function (dictChoice) {
      return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in1)(Data_Functor_Coproduct_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };
  exports["_Either1"] = _Either1;
  exports["_Coproduct1"] = _Coproduct1;
  exports["_Either2"] = _Either2;
  exports["_Coproduct2"] = _Coproduct2;
  exports["_Either3"] = _Either3;
  exports["_Coproduct3"] = _Coproduct3;
})(PS["Halogen.Data.Prism"] = PS["Halogen.Data.Prism"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Tagged = PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Prism = PS["Data.Lens.Prism"];
  var Data_Lens_Prism_Coproduct = PS["Data.Lens.Prism.Coproduct"];
  var Data_Lens_Prism_Either = PS["Data.Lens.Prism.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Halogen_Data_Prism = PS["Halogen.Data.Prism"];
  var Prelude = PS["Prelude"];                 
  var ChildPath = (function () {
      function ChildPath(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChildPath.create = function (value0) {
          return function (value1) {
              return new ChildPath(value0, value1);
          };
      };
      return ChildPath;
  })();
  var prjQuery = function (v) {
      return Data_Lens_Fold.preview(v.value0(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
  };
  var injSlot = function (v) {
      return Data_Lens_Prism.review(v.value1(Data_Lens_Internal_Tagged.taggedChoice));
  };
  var injQuery = function (v) {
      return Data_Lens_Prism.review(v.value0(Data_Lens_Internal_Tagged.taggedChoice));
  }; 
  var cp3 = new ChildPath(function (dictChoice) {
      return Halogen_Data_Prism._Coproduct3(dictChoice);
  }, function (dictChoice) {
      return Halogen_Data_Prism._Either3(dictChoice);
  });
  var cp2 = new ChildPath(function (dictChoice) {
      return Halogen_Data_Prism._Coproduct2(dictChoice);
  }, function (dictChoice) {
      return Halogen_Data_Prism._Either2(dictChoice);
  });
  var cp1 = new ChildPath(function (dictChoice) {
      return Halogen_Data_Prism._Coproduct1(dictChoice);
  }, function (dictChoice) {
      return Halogen_Data_Prism._Either1(dictChoice);
  });
  exports["ChildPath"] = ChildPath;
  exports["cp1"] = cp1;
  exports["cp2"] = cp2;
  exports["cp3"] = cp3;
  exports["injQuery"] = injQuery;
  exports["injSlot"] = injSlot;
  exports["prjQuery"] = prjQuery;
})(PS["Halogen.Component.ChildPath"] = PS["Halogen.Component.ChildPath"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var DOM_HTML_Indexed_ButtonType = PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_FormMethod = PS["DOM.HTML.Indexed.FormMethod"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_MenuType = PS["DOM.HTML.Indexed.MenuType"];
  var DOM_HTML_Indexed_MenuitemType = PS["DOM.HTML.Indexed.MenuitemType"];
  var DOM_HTML_Indexed_OnOff = PS["DOM.HTML.Indexed.OnOff"];
  var DOM_HTML_Indexed_OrderedListType = PS["DOM.HTML.Indexed.OrderedListType"];
  var DOM_HTML_Indexed_PreloadValue = PS["DOM.HTML.Indexed.PreloadValue"];
  var DOM_HTML_Indexed_StepValue = PS["DOM.HTML.Indexed.StepValue"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var prop = function (dictIsProp) {
      return Halogen_HTML_Core.prop(dictIsProp);
  };                                                         
  var tabIndex = prop(Halogen_HTML_Core.intIsProp)("tabIndex");
  var type_ = function (dictIsProp) {
      return prop(dictIsProp)("type");
  };
  var value = prop(Halogen_HTML_Core.stringIsProp)("value");  
  var placeholder = prop(Halogen_HTML_Core.stringIsProp)("placeholder");
  var name = prop(Halogen_HTML_Core.stringIsProp)("name");
  var href = prop(Halogen_HTML_Core.stringIsProp)("href");           
  var disabled = prop(Halogen_HTML_Core.booleanIsProp)("disabled");
  var class_ = function ($13) {
      return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($13));
  };
  var checked = prop(Halogen_HTML_Core.booleanIsProp)("checked");
  exports["prop"] = prop;
  exports["class_"] = class_;
  exports["href"] = href;
  exports["name"] = name;
  exports["type_"] = type_;
  exports["value"] = value;
  exports["disabled"] = disabled;
  exports["checked"] = checked;
  exports["placeholder"] = placeholder;
  exports["tabIndex"] = tabIndex;
})(PS["Halogen.HTML.Properties"] = PS["Halogen.HTML.Properties"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
  var h1 = element("h1");
  var h2 = element("h2");
  var h2_ = h2([  ]);
  var input = function (props) {
      return element("input")(props)([  ]);
  };                   
  var label = element("label");
  var li = element("li");
  var li_ = li([  ]);        
  var p = element("p");
  var p_ = p([  ]);          
  var section = element("section");
  var span = element("span");
  var textarea = function (es) {
      return element("textarea")(es)([  ]);
  };               
  var ul = element("ul");
  var div = element("div");
  var div_ = div([  ]);
  var code = element("code");
  var code_ = code([  ]);
  var button = element("button");
  var br = function (props) {
      return element("br")(props)([  ]);
  };
  var br_ = br([  ]);    
  var a = element("a");
  exports["element"] = element;
  exports["a"] = a;
  exports["br"] = br;
  exports["br_"] = br_;
  exports["button"] = button;
  exports["code"] = code;
  exports["code_"] = code_;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["h1"] = h1;
  exports["h2"] = h2;
  exports["h2_"] = h2_;
  exports["input"] = input;
  exports["label"] = label;
  exports["li"] = li;
  exports["li_"] = li_;
  exports["p"] = p;
  exports["p_"] = p_;
  exports["section"] = section;
  exports["span"] = span;
  exports["textarea"] = textarea;
  exports["ul"] = ul;
})(PS["Halogen.HTML.Elements"] = PS["Halogen.HTML.Elements"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                 
  var slot$prime = function (i) {
      return function (p) {
          return function (component) {
              return function (input) {
                  return function (outputQuery) {
                      var pq = Halogen_Component_ChildPath.prjQuery(i);
                      var f = function ($2) {
                          return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component.unComponent(function (v) {
                              return v.receiver;
                          })(component)($2));
                      };
                      return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(Halogen_Component_ChildPath.injSlot(i)(p))(component)(input)(f)(outputQuery)(pq));
                  };
              };
          };
      };
  };
  var slot = function (p) {
      return function (component) {
          return function (input) {
              return function (outputQuery) {
                  var f = Halogen_Component.unComponent(function (v) {
                      return v.receiver;
                  })(component);
                  return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(p)(component)(input)(f)(outputQuery)(Data_Maybe.Just.create));
              };
          };
      };
  };
  var fromPlainHTML = Unsafe_Coerce.unsafeCoerce;
  exports["fromPlainHTML"] = fromPlainHTML;
  exports["slot"] = slot;
  exports["slot'"] = slot$prime;
})(PS["Halogen.HTML"] = PS["Halogen.HTML"] || {});
(function(exports) {
    "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Foreign.Index"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Foreign = PS["Foreign"];
  var Prelude = PS["Prelude"];
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  exports["readProp"] = readProp;
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function(exports) {
    "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };

  exports.focus = function (elt) {
    return function () {
      return elt.focus();
    };
  };

  exports.blur = function (elt) {
    return function () {
      return elt.blur();
    };
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.HTMLElement"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM = PS["Web.DOM"];
  var Web_DOM_DOMTokenList = PS["Web.DOM.DOMTokenList"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NonDocumentTypeChildNode = PS["Web.DOM.NonDocumentTypeChildNode"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];    
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var fromEventTarget = function (x) {
      return $foreign._read(Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  var fromElement = function (x) {
      return $foreign._read(Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromElement"] = fromElement;
  exports["fromEventTarget"] = fromEventTarget;
  exports["toNode"] = toNode;
  exports["focus"] = $foreign.focus;
  exports["blur"] = $foreign.blur;
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];                 
  var request = function (req) {
      return req(Control_Category.identity(Control_Category.categoryFn));
  };
  var query = function (dictEq) {
      return function (p) {
          return function (q) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.checkSlot(p))(function (v) {
                  if (v) {
                      return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.Just.create)(Halogen_Query_HalogenM.mkQuery(dictEq)(p)(q));
                  };
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
              });
          };
      };
  };
  var query$prime = function (dictEq) {
      return function (path) {
          return function (p) {
              return function (q) {
                  return query(dictEq)(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q));
              };
          };
      };
  };
  var action = function (act) {
      return act(Data_Unit.unit);
  };
  exports["action"] = action;
  exports["request"] = request;
  exports["query"] = query;
  exports["query'"] = query$prime;
})(PS["Halogen.Query"] = PS["Halogen.Query"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Web_Event_Event = PS["Web.Event.Event"];
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";
  var blur = "blur";
  exports["blur"] = blur;
  exports["change"] = change;
  exports["domcontentloaded"] = domcontentloaded;
  exports["input"] = input;
})(PS["Web.HTML.Event.EventTypes"] = PS["Web.HTML.Event.EventTypes"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.UIEvent.FocusEvent"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];
  var Web_UIEvent_UIEvent = PS["Web.UIEvent.UIEvent"];
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
})(PS["Web.UIEvent.FocusEvent"] = PS["Web.UIEvent.FocusEvent"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Web_Event_Event = PS["Web.Event.Event"];
  var focus = "focus";
  exports["focus"] = focus;
})(PS["Web.UIEvent.FocusEvent.EventTypes"] = PS["Web.UIEvent.FocusEvent.EventTypes"] || {});
(function(exports) {
    "use strict";

  exports.code = function (e) {
    return e.code;
  };
})(PS["Web.UIEvent.KeyboardEvent"] = PS["Web.UIEvent.KeyboardEvent"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.UIEvent.KeyboardEvent"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];
  var Web_UIEvent_UIEvent = PS["Web.UIEvent.UIEvent"];
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
  exports["code"] = $foreign.code;
})(PS["Web.UIEvent.KeyboardEvent"] = PS["Web.UIEvent.KeyboardEvent"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Web_Event_Event = PS["Web.Event.Event"];
  var keydown = "keydown";
  exports["keydown"] = keydown;
})(PS["Web.UIEvent.KeyboardEvent.EventTypes"] = PS["Web.UIEvent.KeyboardEvent.EventTypes"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.UIEvent.MouseEvent"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];
  var Web_UIEvent_UIEvent = PS["Web.UIEvent.UIEvent"];
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
})(PS["Web.UIEvent.MouseEvent"] = PS["Web.UIEvent.MouseEvent"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Web_Event_Event = PS["Web.Event.Event"];
  var mouseover = "mouseover";  
  var mousedown = "mousedown";
  var click = "click";
  exports["click"] = click;
  exports["mousedown"] = mousedown;
  exports["mouseover"] = mouseover;
})(PS["Web.UIEvent.MouseEvent.EventTypes"] = PS["Web.UIEvent.MouseEvent.EventTypes"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Foreign = PS["Foreign"];
  var Foreign_Index = PS["Foreign.Index"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Clipboard_ClipboardEvent = PS["Web.Clipboard.ClipboardEvent"];
  var Web_Clipboard_ClipboardEvent_EventTypes = PS["Web.Clipboard.ClipboardEvent.EventTypes"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_HTML_Event_DragEvent = PS["Web.HTML.Event.DragEvent"];
  var Web_HTML_Event_DragEvent_EventTypes = PS["Web.HTML.Event.DragEvent.EventTypes"];
  var Web_HTML_Event_EventTypes = PS["Web.HTML.Event.EventTypes"];
  var Web_TouchEvent_TouchEvent = PS["Web.TouchEvent.TouchEvent"];
  var Web_UIEvent_FocusEvent = PS["Web.UIEvent.FocusEvent"];
  var Web_UIEvent_FocusEvent_EventTypes = PS["Web.UIEvent.FocusEvent.EventTypes"];
  var Web_UIEvent_KeyboardEvent = PS["Web.UIEvent.KeyboardEvent"];
  var Web_UIEvent_KeyboardEvent_EventTypes = PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var Web_UIEvent_MouseEvent = PS["Web.UIEvent.MouseEvent"];
  var Web_UIEvent_MouseEvent_EventTypes = PS["Web.UIEvent.MouseEvent.EventTypes"];
  var Web_UIEvent_WheelEvent = PS["Web.UIEvent.WheelEvent"];
  var Web_UIEvent_WheelEvent_EventTypes = PS["Web.UIEvent.WheelEvent.EventTypes"];
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;
  var keyHandler = Unsafe_Coerce.unsafeCoerce;
  var input_ = function (f) {
      return function (v) {
          return Data_Maybe.Just.create(Halogen_Query.action(f));
      };
  };
  var input = function (f) {
      return function (x) {
          return Data_Maybe.Just.create(Halogen_Query.action(f(x)));
      };
  };
  var handler = function (et) {
      return function ($1) {
          return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($1));
      };
  };                             
  var onChange = handler(Web_HTML_Event_EventTypes.change);
  var onClick = function ($2) {
      return handler(Web_UIEvent_MouseEvent_EventTypes.click)(mouseHandler($2));
  };                                                         
  var onKeyDown = function ($4) {
      return handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown)(keyHandler($4));
  };                                                   
  var onMouseDown = function ($6) {
      return handler(Web_UIEvent_MouseEvent_EventTypes.mousedown)(mouseHandler($6));
  };
  var onMouseOver = function ($11) {
      return handler(Web_UIEvent_MouseEvent_EventTypes.mouseover)(mouseHandler($11));
  };
  var focusHandler = Unsafe_Coerce.unsafeCoerce;
  var onBlur = function ($20) {
      return handler(Web_HTML_Event_EventTypes.blur)(focusHandler($20));
  };
  var onFocus = function ($21) {
      return handler(Web_UIEvent_FocusEvent_EventTypes.focus)(focusHandler($21));
  };
  var addForeignPropHandler = function (key) {
      return function (prop) {
          return function (reader) {
              return function (f) {
                  var go = function (a) {
                      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
                  };
                  return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
                      return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
                  }));
              };
          };
      };
  };                                                                                                       
  var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
  exports["input"] = input;
  exports["input_"] = input_;
  exports["handler"] = handler;
  exports["onChange"] = onChange;
  exports["onClick"] = onClick;
  exports["onMouseDown"] = onMouseDown;
  exports["onMouseOver"] = onMouseOver;
  exports["onKeyDown"] = onKeyDown;
  exports["onBlur"] = onBlur;
  exports["onFocus"] = onFocus;
  exports["onValueInput"] = onValueInput;
})(PS["Halogen.HTML.Events"] = PS["Halogen.HTML.Events"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad_Store = PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Class = PS["Control.Comonad.Store.Class"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];                 
  var updateStore = function (r) {
      return function (f) {
          return function ($8) {
              return Control_Comonad_Store.store(r)(Data_Tuple.snd(Control_Comonad_Store.runStore(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(f)($8))));
          };
      };
  };
  var modifyStore_ = function (dictMonadState) {
      return function (r) {
          return function (f) {
              return Control_Monad_State_Class.modify_(dictMonadState)(updateStore(r)(f));
          };
      };
  };
  var modifyState_ = function (dictMonadState) {
      return function ($9) {
          return Control_Monad_State_Class.modify_(dictMonadState)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))($9));
      };
  };
  var modifyState = function (dictMonadState) {
      return function (f) {
          return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($10) {
              return Data_Functor.map((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Data_Tuple.snd)(Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Control_Comonad_Store.runStore($10)));
          })(Control_Monad_State_Class.modify(dictMonadState)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(f)));
      };
  };
  var getState = function (dictMonadState) {
      return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($11) {
          return Data_Functor.map((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Data_Tuple.snd)(Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Control_Comonad_Store.runStore($11)));
      })(Control_Monad_State_Class.get(dictMonadState));
  };
  var getRender = function (dictMonadState) {
      return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($12) {
          return Data_Functor.map((((dictMonadState.Monad0()).Bind1()).Apply0()).Functor0())(Data_Tuple.fst)(Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Control_Comonad_Store.runStore($12)));
      })(Control_Monad_State_Class.get(dictMonadState));
  };
  var putState = function (dictMonadState) {
      return function (s) {
          return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($13) {
              return Control_Monad_State_Class.put(dictMonadState)(Data_Function.flip(Control_Comonad_Store.store)(s)($13));
          })(getRender(dictMonadState));
      };
  };
  exports["getState"] = getState;
  exports["getRender"] = getRender;
  exports["modifyState"] = modifyState;
  exports["modifyState_"] = modifyState_;
  exports["putState"] = putState;
  exports["updateStore"] = updateStore;
  exports["modifyStore_"] = modifyStore_;
})(PS["Renderless.State"] = PS["Renderless.State"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Comonad_Store = PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Trans = PS["Control.Comonad.Store.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];
  var Renderless_State = PS["Renderless.State"];
  var Type_Row = PS["Type.Row"];                 
  var Invalid = (function () {
      function Invalid() {

      };
      Invalid.value = new Invalid();
      return Invalid;
  })();
  var Incomplete = (function () {
      function Incomplete() {

      };
      Incomplete.value = new Incomplete();
      return Incomplete;
  })();
  var Valid = (function () {
      function Valid() {

      };
      Valid.value = new Valid();
      return Valid;
  })();
  var Submitted = (function () {
      function Submitted(value0) {
          this.value0 = value0;
      };
      Submitted.create = function (value0) {
          return new Submitted(value0);
      };
      return Submitted;
  })();
  var Changed = (function () {
      function Changed(value0) {
          this.value0 = value0;
      };
      Changed.create = function (value0) {
          return new Changed(value0);
      };
      return Changed;
  })();
  var Emit = (function () {
      function Emit(value0) {
          this.value0 = value0;
      };
      Emit.create = function (value0) {
          return new Emit(value0);
      };
      return Emit;
  })();
  var InternalState = function (x) {
      return x;
  };
  var Modify = (function () {
      function Modify(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Modify.create = function (value0) {
          return function (value1) {
              return new Modify(value0, value1);
          };
      };
      return Modify;
  })();
  var ModifyValidate = (function () {
      function ModifyValidate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ModifyValidate.create = function (value0) {
          return function (value1) {
              return new ModifyValidate(value0, value1);
          };
      };
      return ModifyValidate;
  })();
  var Reset = (function () {
      function Reset(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Reset.create = function (value0) {
          return function (value1) {
              return new Reset(value0, value1);
          };
      };
      return Reset;
  })();
  var ResetAll = (function () {
      function ResetAll(value0) {
          this.value0 = value0;
      };
      ResetAll.create = function (value0) {
          return new ResetAll(value0);
      };
      return ResetAll;
  })();
  var Reply = (function () {
      function Reply(value0) {
          this.value0 = value0;
      };
      Reply.create = function (value0) {
          return new Reply(value0);
      };
      return Reply;
  })();
  var Validate = (function () {
      function Validate(value0) {
          this.value0 = value0;
      };
      Validate.create = function (value0) {
          return new Validate(value0);
      };
      return Validate;
  })();
  var Submit = (function () {
      function Submit(value0) {
          this.value0 = value0;
      };
      Submit.create = function (value0) {
          return new Submit(value0);
      };
      return Submit;
  })();
  var SubmitReply = (function () {
      function SubmitReply(value0) {
          this.value0 = value0;
      };
      SubmitReply.create = function (value0) {
          return new SubmitReply(value0);
      };
      return SubmitReply;
  })();
  var Send = (function () {
      function Send(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Send.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Send(value0, value1, value2);
              };
          };
      };
      return Send;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Replace = (function () {
      function Replace(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Replace.create = function (value0) {
          return function (value1) {
              return new Replace(value0, value1);
          };
      };
      return Replace;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var AndThen = (function () {
      function AndThen(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      AndThen.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new AndThen(value0, value1, value2);
              };
          };
      };
      return AndThen;
  })();
  var send$prime = function (path) {
      return function (p) {
          return function (q) {
              return Send.create(Halogen_Component_ChildPath.injSlot(path)(p))(Halogen_Component_ChildPath.injQuery(path)(q));
          };
      };
  };
  var newtypeInternalState = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InternalState);
  var genericValidStatus = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Invalid) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Incomplete) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof Valid) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Formless line 144, column 8 - line 144, column 60: " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return Invalid.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return Incomplete.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return Valid.value;
      };
      throw new Error("Failed pattern match at Formless line 144, column 8 - line 144, column 60: " + [ x.constructor.name ]);
  });
  var showValidStatus = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericValidStatus)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Invalid";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Incomplete";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Valid";
  }))))));
  var eqValidStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Invalid && y instanceof Invalid) {
              return true;
          };
          if (x instanceof Incomplete && y instanceof Incomplete) {
              return true;
          };
          if (x instanceof Valid && y instanceof Valid) {
              return true;
          };
          return false;
      };
  });
  var component = function (dictOrd) {
      return function (dictMonad) {
          return function (dictRowToList) {
              return function (dictRowToList1) {
                  return function (dictRowToList2) {
                      return function (dictRowToList3) {
                          return function (dictEqRecord) {
                              return function (dictFormSpecToInputField) {
                                  return function (dictInputFieldsToInput) {
                                      return function (dictSetInputFieldsTouched) {
                                          return function (dictInputFieldToMaybeOutput) {
                                              return function (dictCountErrors) {
                                                  return function (dictAllTouched) {
                                                      return function (dictSumRecord) {
                                                          return function (dictNewtype) {
                                                              return function (dictNewtype1) {
                                                                  return function (dictNewtype2) {
                                                                      return function (dictNewtype3) {
                                                                          var initialState = function (v) {
                                                                              var inputFields = Formless_Internal.formSpecToInputFields(dictRowToList)(dictFormSpecToInputField)(dictNewtype)(dictNewtype1)(v.formSpec);
                                                                              return Control_Comonad_Store.store(v.render)({
                                                                                  validity: Incomplete.value,
                                                                                  dirty: false,
                                                                                  errors: 0,
                                                                                  submitAttempts: 0,
                                                                                  submitting: false,
                                                                                  form: inputFields,
                                                                                  internal: {
                                                                                      formResult: Data_Maybe.Nothing.value,
                                                                                      formSpec: v.formSpec,
                                                                                      allTouched: false,
                                                                                      initialInputs: Formless_Internal.inputFieldsToInput(dictRowToList1)(dictInputFieldsToInput)(dictNewtype1)(dictNewtype3)(inputFields),
                                                                                      validator: v.validator,
                                                                                      submitter: v.submitter
                                                                                  }
                                                                              });
                                                                          };
                                                                          var getPublicState = Record["delete"](new Data_Symbol.IsSymbol(function () {
                                                                              return "internal";
                                                                          }))()()(Data_Symbol.SProxy.value);
                                                                          var runSubmit = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                              var $80 = {};
                                                                              for (var $81 in st) {
                                                                                  if ({}.hasOwnProperty.call(st, $81)) {
                                                                                      $80[$81] = st[$81];
                                                                                  };
                                                                              };
                                                                              $80.submitAttempts = st.submitAttempts + 1 | 0;
                                                                              $80.submitting = true;
                                                                              return $80;
                                                                          }))(function (v) {
                                                                              var internal = Data_Newtype.unwrap(newtypeInternalState)(v.internal);
                                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(!internal.allTouched)(Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                                                  var $84 = {};
                                                                                  for (var $85 in v1) {
                                                                                      if ({}.hasOwnProperty.call(v1, $85)) {
                                                                                          $84[$85] = v1[$85];
                                                                                      };
                                                                                  };
                                                                                  $84.form = Formless_Internal.setInputFieldsTouched(dictRowToList1)(dictSetInputFieldsTouched)(dictNewtype1)(v.form);
                                                                                  $84.internal = Data_Newtype.over(newtypeInternalState)(newtypeInternalState)(InternalState)(function (v2) {
                                                                                      return {
                                                                                          allTouched: true,
                                                                                          formResult: v2.formResult,
                                                                                          formSpec: v2.formSpec,
                                                                                          initialInputs: v2.initialInputs,
                                                                                          submitter: v2.submitter,
                                                                                          validator: v2.validator
                                                                                      };
                                                                                  })(v.internal);
                                                                                  return $84;
                                                                              })))(function () {
                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)($$eval(new Validate(Data_Unit.unit)))(function (v1) {
                                                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                                                                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(eqValidStatus)(v2.validity)(Valid.value))(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictMonad)(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictMonad.Applicative0())(internal.submitter)(Formless_Internal.inputFieldToMaybeOutput(dictRowToList1)(dictInputFieldToMaybeOutput)(dictNewtype1)(dictNewtype2)(v2.form))))(function (v3) {
                                                                                              return Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v4) {
                                                                                                  var $89 = {};
                                                                                                  for (var $90 in v4) {
                                                                                                      if ({}.hasOwnProperty.call(v4, $90)) {
                                                                                                          $89[$90] = v4[$90];
                                                                                                      };
                                                                                                  };
                                                                                                  $89.internal = Data_Newtype.over(newtypeInternalState)(newtypeInternalState)(InternalState)(function (v5) {
                                                                                                      return {
                                                                                                          formResult: v3,
                                                                                                          allTouched: v5.allTouched,
                                                                                                          formSpec: v5.formSpec,
                                                                                                          initialInputs: v5.initialInputs,
                                                                                                          submitter: v5.submitter,
                                                                                                          validator: v5.validator
                                                                                                      };
                                                                                                  })(v2.internal);
                                                                                                  return $89;
                                                                                              });
                                                                                          })))(function () {
                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                  var $92 = {};
                                                                                                  for (var $93 in st) {
                                                                                                      if ({}.hasOwnProperty.call(st, $93)) {
                                                                                                          $92[$93] = st[$93];
                                                                                                      };
                                                                                                  };
                                                                                                  $92.submitting = false;
                                                                                                  return $92;
                                                                                              }))(function (v3) {
                                                                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)((function (v4) {
                                                                                                      return v4.formResult;
                                                                                                  })(Data_Newtype.unwrap(newtypeInternalState)(v3.internal)));
                                                                                              });
                                                                                          });
                                                                                      });
                                                                                  });
                                                                              });
                                                                          });
                                                                          var $$eval = function (v) {
                                                                              if (v instanceof Modify) {
                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                      return {
                                                                                          form: v.value0(st.form),
                                                                                          dirty: st.dirty,
                                                                                          errors: st.errors,
                                                                                          internal: st.internal,
                                                                                          submitAttempts: st.submitAttempts,
                                                                                          submitting: st.submitting,
                                                                                          validity: st.validity
                                                                                      };
                                                                                  }))(function (v1) {
                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(Changed.create(getPublicState(v1))))(function () {
                                                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                                                                      });
                                                                                  });
                                                                              };
                                                                              if (v instanceof ModifyValidate) {
                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                      var $100 = {};
                                                                                      for (var $101 in st) {
                                                                                          if ({}.hasOwnProperty.call(st, $101)) {
                                                                                              $100[$101] = st[$101];
                                                                                          };
                                                                                      };
                                                                                      $100.form = v.value0(st.form);
                                                                                      return $100;
                                                                                  }))(function () {
                                                                                      return $$eval(new Validate(v.value1));
                                                                                  });
                                                                              };
                                                                              if (v instanceof Reset) {
                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                      var $105 = {};
                                                                                      for (var $106 in st) {
                                                                                          if ({}.hasOwnProperty.call(st, $106)) {
                                                                                              $105[$106] = st[$106];
                                                                                          };
                                                                                      };
                                                                                      $105.form = v.value0(st.form);
                                                                                      $105.internal = Data_Newtype.over(newtypeInternalState)(newtypeInternalState)(InternalState)(function (v2) {
                                                                                          return {
                                                                                              allTouched: false,
                                                                                              formResult: v2.formResult,
                                                                                              formSpec: v2.formSpec,
                                                                                              initialInputs: v2.initialInputs,
                                                                                              submitter: v2.submitter,
                                                                                              validator: v2.validator
                                                                                          };
                                                                                      })(st.internal);
                                                                                      return $105;
                                                                                  }))(function () {
                                                                                      return $$eval(new Validate(v.value1));
                                                                                  });
                                                                              };
                                                                              if (v instanceof Validate) {
                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                                                      var internal = Data_Newtype.unwrap(newtypeInternalState)(v1.internal);
                                                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)(dictMonad)(internal.validator(v1.form)))(function (v2) {
                                                                                          var errors = Formless_Internal.countErrors(dictRowToList1)(dictRowToList2)(dictCountErrors)(dictSumRecord)(dictNewtype1)(v2);
                                                                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                              var $112 = {};
                                                                                              for (var $113 in v3) {
                                                                                                  if ({}.hasOwnProperty.call(v3, $113)) {
                                                                                                      $112[$113] = v3[$113];
                                                                                                  };
                                                                                              };
                                                                                              $112.form = v2;
                                                                                              $112.errors = errors;
                                                                                              $112.dirty = !Data_Eq.eq(Data_Eq.eqRec(dictRowToList3)(dictEqRecord))(Data_Newtype.unwrap(dictNewtype3)(Formless_Internal.inputFieldsToInput(dictRowToList1)(dictInputFieldsToInput)(dictNewtype1)(dictNewtype3)(v2)))(Data_Newtype.unwrap(dictNewtype3)(internal.initialInputs));
                                                                                              return $112;
                                                                                          }))(function () {
                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                                                                                  if (internal.allTouched) {
                                                                                                      return Renderless_State.modifyState(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                                          return {
                                                                                                              validity: (function () {
                                                                                                                  var $116 = !(errors === 0);
                                                                                                                  if ($116) {
                                                                                                                      return Invalid.value;
                                                                                                                  };
                                                                                                                  return Valid.value;
                                                                                                              })(),
                                                                                                              internal: v3.internal,
                                                                                                              dirty: v3.dirty,
                                                                                                              errors: v3.errors,
                                                                                                              form: v3.form,
                                                                                                              submitAttempts: v3.submitAttempts,
                                                                                                              submitting: v3.submitting
                                                                                                          };
                                                                                                      });
                                                                                                  };
                                                                                                  var v3 = Formless_Internal.checkTouched(dictRowToList1)(dictAllTouched)(dictNewtype1)(v2);
                                                                                                  if (v3) {
                                                                                                      return Renderless_State.modifyState(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                          return {
                                                                                                              validity: (function () {
                                                                                                                  var $118 = !(errors === 0);
                                                                                                                  if ($118) {
                                                                                                                      return Invalid.value;
                                                                                                                  };
                                                                                                                  return Valid.value;
                                                                                                              })(),
                                                                                                              internal: Data_Newtype.over(newtypeInternalState)(newtypeInternalState)(InternalState)(function (v5) {
                                                                                                                  return {
                                                                                                                      allTouched: true,
                                                                                                                      formResult: v5.formResult,
                                                                                                                      formSpec: v5.formSpec,
                                                                                                                      initialInputs: v5.initialInputs,
                                                                                                                      submitter: v5.submitter,
                                                                                                                      validator: v5.validator
                                                                                                                  };
                                                                                                              })(st.internal),
                                                                                                              dirty: st.dirty,
                                                                                                              errors: st.errors,
                                                                                                              form: st.form,
                                                                                                              submitAttempts: st.submitAttempts,
                                                                                                              submitting: st.submitting
                                                                                                          };
                                                                                                      });
                                                                                                  };
                                                                                                  return Renderless_State.modifyState(Halogen_Query_HalogenM.monadStateHalogenM)(function (v4) {
                                                                                                      return {
                                                                                                          validity: Incomplete.value,
                                                                                                          internal: v4.internal,
                                                                                                          dirty: v4.dirty,
                                                                                                          errors: v4.errors,
                                                                                                          form: v4.form,
                                                                                                          submitAttempts: v4.submitAttempts,
                                                                                                          submitting: v4.submitting
                                                                                                      };
                                                                                                  });
                                                                                              })())(function (v3) {
                                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(Changed.create(getPublicState(v3))))(function () {
                                                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                                                                                                  });
                                                                                              });
                                                                                          });
                                                                                      });
                                                                                  });
                                                                              };
                                                                              if (v instanceof Submit) {
                                                                                  return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value0)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(runSubmit)(function (v1) {
                                                                                      return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function ($145) {
                                                                                          return Halogen_Query_HalogenM.raise(Submitted.create($145));
                                                                                      })(v1);
                                                                                  }));
                                                                              };
                                                                              if (v instanceof SubmitReply) {
                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(runSubmit)(function (v1) {
                                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0(v1));
                                                                                  });
                                                                              };
                                                                              if (v instanceof ResetAll) {
                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyState(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                      return {
                                                                                          validity: Incomplete.value,
                                                                                          dirty: false,
                                                                                          errors: 0,
                                                                                          submitAttempts: 0,
                                                                                          form: Formless_Internal.formSpecToInputFields(dictRowToList)(dictFormSpecToInputField)(dictNewtype)(dictNewtype1)((function (v2) {
                                                                                              return v2.formSpec;
                                                                                          })(Data_Newtype.unwrap(newtypeInternalState)(st.internal))),
                                                                                          internal: Data_Newtype.over(newtypeInternalState)(newtypeInternalState)(InternalState)(function (v2) {
                                                                                              return {
                                                                                                  formResult: Data_Maybe.Nothing.value,
                                                                                                  allTouched: false,
                                                                                                  formSpec: v2.formSpec,
                                                                                                  initialInputs: v2.initialInputs,
                                                                                                  submitter: v2.submitter,
                                                                                                  validator: v2.validator
                                                                                              };
                                                                                          })(st.internal),
                                                                                          submitting: st.submitting
                                                                                      };
                                                                                  }))(function (v1) {
                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(Changed.create(getPublicState(v1))))(function () {
                                                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                                                                                      });
                                                                                  });
                                                                              };
                                                                              if (v instanceof Reply) {
                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0(getPublicState(v1)));
                                                                                  });
                                                                              };
                                                                              if (v instanceof Send) {
                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(dictOrd.Eq0())(v.value0)(v.value1))(function (v1) {
                                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2);
                                                                                  });
                                                                              };
                                                                              if (v instanceof Raise) {
                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Emit(v.value0)))(function () {
                                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                                                                  });
                                                                              };
                                                                              if (v instanceof Replace) {
                                                                                  var inputFields = Formless_Internal.formSpecToInputFields(dictRowToList)(dictFormSpecToInputField)(dictNewtype)(dictNewtype1)(v.value0.formSpec);
                                                                                  var $$new = {
                                                                                      validity: Incomplete.value,
                                                                                      dirty: false,
                                                                                      errors: 0,
                                                                                      submitAttempts: 0,
                                                                                      submitting: false,
                                                                                      form: inputFields,
                                                                                      internal: {
                                                                                          formResult: Data_Maybe.Nothing.value,
                                                                                          formSpec: v.value0.formSpec,
                                                                                          allTouched: false,
                                                                                          initialInputs: Formless_Internal.inputFieldsToInput(dictRowToList1)(dictInputFieldsToInput)(dictNewtype1)(dictNewtype3)(inputFields),
                                                                                          validator: v.value0.validator,
                                                                                          submitter: v.value0.submitter
                                                                                      }
                                                                                  };
                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.putState(Halogen_Query_HalogenM.monadStateHalogenM)($$new))(function () {
                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(Changed.create(getPublicState($$new))))(function () {
                                                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                                                                      });
                                                                                  });
                                                                              };
                                                                              if (v instanceof Receive) {
                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Renderless_State.modifyStore_(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0.render)(Control_Category.identity(Control_Category.categoryFn)))(function () {
                                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                                                                  });
                                                                              };
                                                                              if (v instanceof AndThen) {
                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)($$eval(v.value0))(function (v1) {
                                                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)($$eval(v.value1))(function (v2) {
                                                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value2);
                                                                                      });
                                                                                  });
                                                                              };
                                                                              throw new Error("Failed pattern match at Formless line 242, column 10 - line 362, column 13: " + [ v.constructor.name ]);
                                                                          };
                                                                          return Halogen_Component.parentComponent(dictOrd)({
                                                                              initialState: initialState,
                                                                              render: Control_Comonad.extract(Control_Comonad_Store_Trans.comonadStoreT(Data_Identity.comonadIdentity)),
                                                                              "eval": $$eval,
                                                                              receiver: Halogen_HTML_Events.input(Receive.create)
                                                                          });
                                                                      };
                                                                  };
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["Modify"] = Modify;
  exports["ModifyValidate"] = ModifyValidate;
  exports["Reset"] = Reset;
  exports["ResetAll"] = ResetAll;
  exports["Reply"] = Reply;
  exports["Validate"] = Validate;
  exports["Submit"] = Submit;
  exports["SubmitReply"] = SubmitReply;
  exports["Send"] = Send;
  exports["Raise"] = Raise;
  exports["Replace"] = Replace;
  exports["Receive"] = Receive;
  exports["AndThen"] = AndThen;
  exports["Submitted"] = Submitted;
  exports["Changed"] = Changed;
  exports["Emit"] = Emit;
  exports["InternalState"] = InternalState;
  exports["Invalid"] = Invalid;
  exports["Incomplete"] = Incomplete;
  exports["Valid"] = Valid;
  exports["component"] = component;
  exports["send'"] = send$prime;
  exports["newtypeInternalState"] = newtypeInternalState;
  exports["genericValidStatus"] = genericValidStatus;
  exports["eqValidStatus"] = eqValidStatus;
  exports["showValidStatus"] = showValidStatus;
})(PS["Formless"] = PS["Formless"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Fold = PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Formless = PS["Formless"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];
  var Record_Builder = PS["Record.Builder"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_UIEvent_FocusEvent = PS["Web.UIEvent.FocusEvent"];                 
  var resultToHelp = function (dictToText) {
      return function (str) {
          return function ($11) {
              return Data_Maybe.maybe(new Data_Either.Right(str))(Data_Either.Left.create)(Example_App_Validation.showError(dictToText)($11));
          };
      };
  };
  var p_ = function (str) {
      return Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text(str) ]);
  };
  var formlessField = function (dictIsSymbol) {
      return function (dictToText) {
          return function (dictNewtype) {
              return function (dictCons) {
                  return function (fieldType) {
                      return function (config) {
                          return function (state) {
                              var props = [ Halogen_HTML_Properties.value(Formless_Spec_Transform.getInput(dictIsSymbol)(dictNewtype)(dictCons)(config.sym)(state.form)), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(function ($12) {
                                  return Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(dictIsSymbol)(dictNewtype)(dictCons)(config.sym)($12));
                              })) ];
                              var help$prime = (function () {
                                  var v = Data_Lens_Fold.preview(Formless_Spec._Error(dictIsSymbol)(dictNewtype)(dictCons)(config.sym)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst)))(state.form);
                                  if (v instanceof Data_Maybe.Nothing) {
                                      return new Data_Either.Right(config.help);
                                  };
                                  if (v instanceof Data_Maybe.Just) {
                                      return Data_Either.Left.create(Data_Maybe.fromMaybe("")(Data_Functor.map(Data_Maybe.functorMaybe)(Example_App_Validation.toText(dictToText))(Data_Array.head(v.value0))));
                                  };
                                  throw new Error("Failed pattern match at Example.App.UI.Element line 181, column 13 - line 183, column 56: " + [ v.constructor.name ]);
                              })();
                              var config$prime = Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder["delete"](new Data_Symbol.IsSymbol(function () {
                                  return "sym";
                              }))()()(Data_Symbol.SProxy.value))(Record_Builder.modify()()(new Data_Symbol.IsSymbol(function () {
                                  return "help";
                              }))(Data_Symbol.SProxy.value)(Data_Function["const"](help$prime)));
                              return fieldType(Record_Builder.build(config$prime)(config))(props);
                          };
                      };
                  };
              };
          };
      };
  };
  var css = function ($13) {
      return Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName($13));
  };
  var field = function (config) {
      return function (contents) {
          var help_ = function (str) {
              return Halogen_HTML_Elements.p([ css("help") ])([ Halogen_HTML_Core.text(str) ]);
          };
          var helpError_ = function (str) {
              return Halogen_HTML_Elements.p([ css("help is-danger") ])([ Halogen_HTML_Core.text(str) ]);
          };
          return Halogen_HTML_Elements.div([ css("field") ])([ Halogen_HTML_Elements.div([ css("label") ])([ Halogen_HTML_Core.text(config.label) ]), Halogen_HTML_Elements.div([ css("control") ])(contents), (function () {
              if (config.help instanceof Data_Either.Left) {
                  return helpError_(config.help.value0);
              };
              if (config.help instanceof Data_Either.Right) {
                  return help_(config.help.value0);
              };
              throw new Error("Failed pattern match at Example.App.UI.Element line 103, column 5 - line 105, column 29: " + [ config.help.constructor.name ]);
          })() ]);
      };
  };
  var formContent_ = function (content) {
      return Halogen_HTML_Elements.div([ css("content") ])([ Halogen_HTML_Elements.div([ css("column has-background-white-bis") ])(content) ]);
  };
  var grouped_ = function (array) {
      var wrap = function (x) {
          return Halogen_HTML_Elements.p([ css("control") ])([ x ]);
      };
      return Halogen_HTML_Elements.div([ css("field is-grouped") ])(Data_Functor.map(Data_Functor.functorArray)(wrap)(array));
  };
  var h1_ = Halogen_HTML_Elements.h1([ css("title") ]);
  var h2_ = Halogen_HTML_Elements.h2([ css("subtitle is-size-4 has-text-grey") ]);
  var input = function (config) {
      return function (props) {
          return field({
              label: config.label,
              help: config.help
          })([ Halogen_HTML_Elements.input(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputText.value), Data_Either.either(Data_Function["const"](css("input is-danger")))(Data_Function["const"](css("input")))(config.help), Halogen_HTML_Properties.placeholder(config.placeholder) ])(props)) ]);
      };
  };
  var section_ = function (content) {
      return Halogen_HTML_Elements.section([ css("section columns") ])([ Halogen_HTML_Elements.div([ css("column is-11-tablet is-three-fifths-desktop") ])(content) ]);
  };
  var textarea = function (config) {
      return function (props) {
          return field({
              label: config.label,
              help: config.help
          })([ Halogen_HTML_Elements.textarea(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Either.either(Data_Function["const"](css("textarea is-danger")))(Data_Function["const"](css("textarea")))(config.help), Halogen_HTML_Properties.placeholder(config.placeholder) ])(props)) ]);
      };
  };
  var content_ = Halogen_HTML_Elements.div([ css("content") ]);
  var buttonPrimary = function (props) {
      return Halogen_HTML_Elements.button(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ css("button is-link") ])(props));
  };
  var button = function (props) {
      return Halogen_HTML_Elements.button(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ css("button is-light") ])(props));
  };
  var a = function (props) {
      return Halogen_HTML_Elements.a(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ css("has-text-blue") ])(props));
  };
  exports["css"] = css;
  exports["h1_"] = h1_;
  exports["h2_"] = h2_;
  exports["p_"] = p_;
  exports["a"] = a;
  exports["section_"] = section_;
  exports["formContent_"] = formContent_;
  exports["content_"] = content_;
  exports["button"] = button;
  exports["buttonPrimary"] = buttonPrimary;
  exports["grouped_"] = grouped_;
  exports["field"] = field;
  exports["resultToHelp"] = resultToHelp;
  exports["input"] = input;
  exports["textarea"] = textarea;
  exports["formlessField"] = formlessField;
})(PS["Example.App.UI.Element"] = PS["Example.App.UI.Element"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var render = Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A renderless component for painless forms in Halogen") ]), Example_App_UI_Element.content_([ Example_App_UI_Element.p_("Formless allows you to write a small, simple spec for your form and receive " + ("state updates, validation, dirty states, submission handling, and more for " + ("free. You are responsible for providing an initial value and a validation " + ("function for every field in your form, but beyond that, Formless will take " + ("care of things behind the scenes without ever imposing on how you'd like to " + ("render and display your form. You can freely use external Halogen components, " + ("add new form behaviors on top (like dependent validation or clearing sets of " + ("fields), and more." + "\x0a")))))))), Example_App_UI_Element.a([ Halogen_HTML_Properties.href("https://github.com/thomashoneyman/purescript-halogen-formless") ])([ Halogen_HTML_Core.text("purescript-halogen-formless") ]) ]) ]);
  var component = (function () {
      var $$eval = function (v) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: Data_Function["const"](render),
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["render"] = render;
  exports["component"] = component;
})(PS["Example.App.Home"] = PS["Example.App.Home"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad_Store = PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Class = PS["Control.Comonad.Store.Class"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen = PS["Halogen"];
  var Prelude = PS["Prelude"];                 
  var updateStore = function (r) {
      return function (f) {
          return function ($5) {
              return (function (v) {
                  return Control_Comonad_Store.store(r)(v.value1);
              })(Control_Comonad_Store.runStore(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(f)($5)));
          };
      };
  };
  var getState = function (dictMonadState) {
      return Control_Bind.bindFlipped((dictMonadState.Monad0()).Bind1())(function ($6) {
          return Control_Applicative.pure((dictMonadState.Monad0()).Applicative0())(Control_Comonad_Store.runStore($6));
      })(Control_Monad_State_Class.get(dictMonadState));
  };
  exports["getState"] = getState;
  exports["updateStore"] = updateStore;
})(PS["Select.Internal.State"] = PS["Select.Internal.State"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Comonad_Store = PS["Control.Comonad.Store"];
  var Control_Comonad_Store_Class = PS["Control.Comonad.Store.Class"];
  var Control_Comonad_Store_Trans = PS["Control.Comonad.Store.Trans"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_AVar = PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var Select_Internal_State = PS["Select.Internal.State"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_UIEvent_KeyboardEvent = PS["Web.UIEvent.KeyboardEvent"];
  var Web_UIEvent_MouseEvent = PS["Web.UIEvent.MouseEvent"];                 
  var Off = (function () {
      function Off() {

      };
      Off.value = new Off();
      return Off;
  })();
  var On = (function () {
      function On() {

      };
      On.value = new On();
      return On;
  })();
  var Prev = (function () {
      function Prev() {

      };
      Prev.value = new Prev();
      return Prev;
  })();
  var Next = (function () {
      function Next() {

      };
      Next.value = new Next();
      return Next;
  })();
  var Index = (function () {
      function Index(value0) {
          this.value0 = value0;
      };
      Index.create = function (value0) {
          return new Index(value0);
      };
      return Index;
  })();
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var Selected = (function () {
      function Selected(value0) {
          this.value0 = value0;
      };
      Selected.create = function (value0) {
          return new Selected(value0);
      };
      return Selected;
  })();
  var VisibilityChanged = (function () {
      function VisibilityChanged(value0) {
          this.value0 = value0;
      };
      VisibilityChanged.create = function (value0) {
          return new VisibilityChanged(value0);
      };
      return VisibilityChanged;
  })();
  var Emit = (function () {
      function Emit(value0) {
          this.value0 = value0;
      };
      Emit.create = function (value0) {
          return new Emit(value0);
      };
      return Emit;
  })();
  var TextInput = (function () {
      function TextInput() {

      };
      TextInput.value = new TextInput();
      return TextInput;
  })();
  var Toggle = (function () {
      function Toggle() {

      };
      Toggle.value = new Toggle();
      return Toggle;
  })();
  var Search = (function () {
      function Search(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Search.create = function (value0) {
          return function (value1) {
              return new Search(value0, value1);
          };
      };
      return Search;
  })();
  var Highlight = (function () {
      function Highlight(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Highlight.create = function (value0) {
          return function (value1) {
              return new Highlight(value0, value1);
          };
      };
      return Highlight;
  })();
  var Select = (function () {
      function Select(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Select.create = function (value0) {
          return function (value1) {
              return new Select(value0, value1);
          };
      };
      return Select;
  })();
  var CaptureRef = (function () {
      function CaptureRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CaptureRef.create = function (value0) {
          return function (value1) {
              return new CaptureRef(value0, value1);
          };
      };
      return CaptureRef;
  })();
  var Focus = (function () {
      function Focus(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Focus.create = function (value0) {
          return function (value1) {
              return new Focus(value0, value1);
          };
      };
      return Focus;
  })();
  var Key = (function () {
      function Key(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Key.create = function (value0) {
          return function (value1) {
              return new Key(value0, value1);
          };
      };
      return Key;
  })();
  var PreventClick = (function () {
      function PreventClick(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PreventClick.create = function (value0) {
          return function (value1) {
              return new PreventClick(value0, value1);
          };
      };
      return PreventClick;
  })();
  var SetVisibility = (function () {
      function SetVisibility(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetVisibility.create = function (value0) {
          return function (value1) {
              return new SetVisibility(value0, value1);
          };
      };
      return SetVisibility;
  })();
  var GetVisibility = (function () {
      function GetVisibility(value0) {
          this.value0 = value0;
      };
      GetVisibility.create = function (value0) {
          return new GetVisibility(value0);
      };
      return GetVisibility;
  })();
  var ReplaceItems = (function () {
      function ReplaceItems(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ReplaceItems.create = function (value0) {
          return function (value1) {
              return new ReplaceItems(value0, value1);
          };
      };
      return ReplaceItems;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var triggerFocus = Control_Monad_Free.liftF(new Focus(true, Data_Unit.unit));
  var triggerBlur = Control_Monad_Free.liftF(new Focus(false, Data_Unit.unit));
  var setVisibility = function (v) {
      return Control_Monad_Free.liftF(new SetVisibility(v, Data_Unit.unit));
  };
  var select = function (i) {
      return Control_Monad_Free.liftF(new Select(i, Data_Unit.unit));
  };
  var search = function (s) {
      return Control_Monad_Free.liftF(new Search(s, Data_Unit.unit));
  };
  var replaceItems = function (items) {
      return Control_Monad_Free.liftF(new ReplaceItems(items, Data_Unit.unit));
  };
  var receive = function (i) {
      return Control_Monad_Free.liftF(new Receive(i, Data_Unit.unit));
  };
  var raise = function (o) {
      return Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit));
  };
  var preventClick = function (i) {
      return Control_Monad_Free.liftF(new PreventClick(i, Data_Unit.unit));
  };
  var key = function (e) {
      return Control_Monad_Free.liftF(new Key(e, Data_Unit.unit));
  };
  var highlight = function (t) {
      return Control_Monad_Free.liftF(new Highlight(t, Data_Unit.unit));
  };           
  var getVisibility = Control_Monad_Free.liftF(new GetVisibility(Control_Category.identity(Control_Category.categoryFn)));
  var eqVisibility = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Off && y instanceof Off) {
              return true;
          };
          if (x instanceof On && y instanceof On) {
              return true;
          };
          return false;
      };
  });
  var component = function (dictMonadAff) {
      var initialState = function (i) {
          return Control_Comonad_Store.store(i.render)({
              inputType: i.inputType,
              search: Data_Maybe.fromMaybe("")(i.initialSearch),
              debounceTime: Data_Maybe.fromMaybe(0.0)(i.debounceTime),
              debouncer: Data_Maybe.Nothing.value,
              inputElement: Data_Maybe.Nothing.value,
              items: i.items,
              highlightedIndex: Data_Maybe.Nothing.value,
              visibility: Off.value,
              lastIndex: Data_Array.length(i.items) - 1 | 0
          });
      };
      var setVis = function (v) {
          return eval$prime(setVisibility(v));
      };
      var eval$prime = function (a) {
          return Control_Monad_Free.foldFree(Halogen_Query_HalogenM.monadRecHalogenM)($$eval)(a);
      };
      var $$eval = function (v) {
          if (v instanceof Search) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                      var $59 = {};
                      for (var $60 in v2) {
                          if ({}.hasOwnProperty.call(v2, $60)) {
                              $59[$60] = v2[$60];
                          };
                      };
                      $59.search = v.value0;
                      return $59;
                  })))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(setVis(On.value))(function () {
                          if (v1.value1.inputType instanceof TextInput && v1.value1.debouncer instanceof Data_Maybe.Nothing) {
                              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(Data_Unit.unit)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.empty))(function (v2) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(v1.value1.debounceTime))(function () {
                                      return Effect_Aff_AVar.put(Data_Unit.unit)(v2);
                                  }))))(function (v3) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.fork(dictMonadAff)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.take(v2)))(function (v4) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v5) {
                                              var $66 = {};
                                              for (var $67 in v5) {
                                                  if ({}.hasOwnProperty.call(v5, $67)) {
                                                      $66[$67] = v5[$67];
                                                  };
                                              };
                                              $66.debouncer = Data_Maybe.Nothing.value;
                                              $66.highlightedIndex = new Data_Maybe.Just(0);
                                              return $66;
                                          })))(function () {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v5) {
                                                  return Halogen_Query_HalogenM.raise(new Searched(v5.value1.search));
                                              });
                                          });
                                      })))(function (v4) {
                                          return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v5) {
                                              var $72 = {};
                                              for (var $73 in v5) {
                                                  if ({}.hasOwnProperty.call(v5, $73)) {
                                                      $72[$73] = v5[$73];
                                                  };
                                              };
                                              $72.debouncer = new Data_Maybe.Just({
                                                  "var": v2,
                                                  fiber: v3
                                              });
                                              return $72;
                                          }));
                                      });
                                  });
                              }));
                          };
                          if (v1.value1.inputType instanceof TextInput && v1.value1.debouncer instanceof Data_Maybe.Just) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.killFiber(Effect_Exception.error("Time's up!"))(v1.value1.debouncer.value0.fiber)))(function (v2) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(v1.value1.debounceTime))(function () {
                                      return Effect_Aff_AVar.put(Data_Unit.unit)(v1["value1"]["debouncer"]["value0"]["var"]);
                                  }))))(function (v3) {
                                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v4) {
                                          var $76 = {};
                                          for (var $77 in v4) {
                                              if ({}.hasOwnProperty.call(v4, $77)) {
                                                  $76[$77] = v4[$77];
                                              };
                                          };
                                          $76.debouncer = new Data_Maybe.Just({
                                              "var": v1["value1"]["debouncer"]["value0"]["var"],
                                              fiber: v3
                                          });
                                          return $76;
                                      }));
                                  });
                              });
                          };
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                      });
                  });
              }));
          };
          if (v instanceof Highlight) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(eqVisibility)(v1.value1.visibility)(Off.value))((function () {
                      var highlightedIndex = (function () {
                          if (v.value0 instanceof Prev) {
                              if (v1.value1.highlightedIndex instanceof Data_Maybe.Just && v1.value1.highlightedIndex.value0 !== 0) {
                                  return new Data_Maybe.Just(v1.value1.highlightedIndex.value0 - 1 | 0);
                              };
                              return new Data_Maybe.Just(v1.value1.lastIndex);
                          };
                          if (v.value0 instanceof Next) {
                              if (v1.value1.highlightedIndex instanceof Data_Maybe.Just && v1.value1.highlightedIndex.value0 !== v1.value1.lastIndex) {
                                  return new Data_Maybe.Just(v1.value1.highlightedIndex.value0 + 1 | 0);
                              };
                              return new Data_Maybe.Just(0);
                          };
                          if (v.value0 instanceof Index) {
                              return new Data_Maybe.Just(v.value0.value0);
                          };
                          throw new Error("Failed pattern match at Select line 319, column 34 - line 331, column 25: " + [ v.value0.constructor.name ]);
                      })();
                      return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                          var $91 = {};
                          for (var $92 in v2) {
                              if ({}.hasOwnProperty.call(v2, $92)) {
                                  $91[$92] = v2[$92];
                              };
                          };
                          $91.highlightedIndex = highlightedIndex;
                          return $91;
                      }));
                  })()))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                  });
              }));
          };
          if (v instanceof Select) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(eqVisibility)(v1.value1.visibility)(On.value))(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(Data_Array.index(v1.value1.items)(v.value0))(function (item) {
                      return Halogen_Query_HalogenM.raise(new Selected(item));
                  }));
              }));
          };
          if (v instanceof CaptureRef) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v2) {
                      var $104 = {};
                      for (var $105 in v2) {
                          if ({}.hasOwnProperty.call(v2, $105)) {
                              $104[$105] = v2[$105];
                          };
                      };
                      $104.inputElement = Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromEventTarget)(Web_Event_Event.currentTarget(v.value0));
                      return $104;
                  })))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  });
              }));
          };
          if (v instanceof Focus) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function ($150) {
                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))((function () {
                          if (v.value0) {
                              return Web_HTML_HTMLElement.focus;
                          };
                          return Web_HTML_HTMLElement.blur;
                      })()($150));
                  })(v1.value1.inputElement);
              }));
          };
          if (v instanceof Key) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(setVis(On.value))(function () {
                  var preventIt = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0)));
                  var v1 = Web_UIEvent_KeyboardEvent.code(v.value0);
                  if (v1 === "ArrowUp") {
                      return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(preventIt)(eval$prime(highlight(Prev.value)));
                  };
                  if (v1 === "ArrowDown") {
                      return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(preventIt)(eval$prime(highlight(Next.value)));
                  };
                  if (v1 === "Escape") {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                              return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v2.value1.inputElement)(function ($151) {
                                  return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_HTML_HTMLElement.blur($151));
                              });
                          });
                      });
                  };
                  if (v1 === "Enter") {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                              return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v2.value1.highlightedIndex)(function ($152) {
                                  return eval$prime(select($152));
                              });
                          });
                      });
                  };
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              }));
          };
          if (v instanceof PreventClick) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(v.value0))));
          };
          if (v instanceof SetVisibility) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                  return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(eqVisibility)(v2.value1.visibility)(v.value0))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v3) {
                      var $129 = {};
                      for (var $130 in v3) {
                          if ({}.hasOwnProperty.call(v3, $130)) {
                              $129[$130] = v3[$130];
                          };
                      };
                      $129.visibility = v.value0;
                      $129.highlightedIndex = new Data_Maybe.Just(0);
                      return $129;
                  })))(function () {
                      return Halogen_Query_HalogenM.raise(new VisibilityChanged(v.value0));
                  }));
              }));
          };
          if (v instanceof GetVisibility) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Select_Internal_State.getState(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0(v1.value1.visibility));
              });
          };
          if (v instanceof ReplaceItems) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Control_Comonad_Store_Class.seeks(Control_Comonad_Store_Class.comonadStoreStoreT(Data_Identity.comonadIdentity))(function (v1) {
                  var $140 = {};
                  for (var $141 in v1) {
                      if ({}.hasOwnProperty.call(v1, $141)) {
                          $140[$141] = v1[$141];
                      };
                  };
                  $140.items = v.value0;
                  $140.lastIndex = Data_Array.length(v.value0) - 1 | 0;
                  $140.highlightedIndex = Data_Maybe.Nothing.value;
                  return $140;
              })));
          };
          if (v instanceof Raise) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Halogen_Query_HalogenM.raise(new Emit(v.value0)));
          };
          if (v instanceof Receive) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(Select_Internal_State.updateStore(v.value0.render)(Control_Category.identity(Control_Category.categoryFn))));
          };
          throw new Error("Failed pattern match at Select line 280, column 12 - line 389, column 53: " + [ v.constructor.name ]);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: initialState,
          render: Control_Comonad.extract(Control_Comonad_Store_Trans.comonadStoreT(Data_Identity.comonadIdentity)),
          "eval": eval$prime,
          receiver: function ($153) {
              return Data_Maybe.Just.create(receive($153));
          }
      });
  };
  var captureRef = function (r) {
      return Control_Monad_Free.liftF(new CaptureRef(r, Data_Unit.unit));
  }; 
  var always = function ($154) {
      return Data_Function["const"](Data_Maybe.Just.create($154));
  };
  exports["Search"] = Search;
  exports["Highlight"] = Highlight;
  exports["Select"] = Select;
  exports["CaptureRef"] = CaptureRef;
  exports["Focus"] = Focus;
  exports["Key"] = Key;
  exports["PreventClick"] = PreventClick;
  exports["SetVisibility"] = SetVisibility;
  exports["GetVisibility"] = GetVisibility;
  exports["ReplaceItems"] = ReplaceItems;
  exports["Raise"] = Raise;
  exports["Receive"] = Receive;
  exports["always"] = always;
  exports["search"] = search;
  exports["highlight"] = highlight;
  exports["select"] = select;
  exports["captureRef"] = captureRef;
  exports["triggerFocus"] = triggerFocus;
  exports["triggerBlur"] = triggerBlur;
  exports["key"] = key;
  exports["preventClick"] = preventClick;
  exports["setVisibility"] = setVisibility;
  exports["getVisibility"] = getVisibility;
  exports["replaceItems"] = replaceItems;
  exports["raise"] = raise;
  exports["receive"] = receive;
  exports["Prev"] = Prev;
  exports["Next"] = Next;
  exports["Index"] = Index;
  exports["Off"] = Off;
  exports["On"] = On;
  exports["TextInput"] = TextInput;
  exports["Toggle"] = Toggle;
  exports["Searched"] = Searched;
  exports["Selected"] = Selected;
  exports["VisibilityChanged"] = VisibilityChanged;
  exports["Emit"] = Emit;
  exports["component"] = component;
  exports["eqVisibility"] = eqVisibility;
})(PS["Select"] = PS["Select"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Prelude = PS["Prelude"];
  var Select = PS["Select"];
  var Web_Event_Event = PS["Web.Event.Event"];
  var Web_UIEvent_FocusEvent = PS["Web.UIEvent.FocusEvent"];
  var Web_UIEvent_KeyboardEvent = PS["Web.UIEvent.KeyboardEvent"];
  var Web_UIEvent_MouseEvent = PS["Web.UIEvent.MouseEvent"];                 
  var setToggleProps = Data_Function.flip(Data_Semigroup.append(Data_Semigroup.semigroupArray))([ Halogen_HTML_Events.onFocus(function (ev) {
      return new Data_Maybe.Just(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.captureRef(Web_UIEvent_FocusEvent.toEvent(ev)))(function () {
          return Select.setVisibility(Select.On.value);
      }));
  }), Halogen_HTML_Events.onMouseDown(function (ev) {
      return new Data_Maybe.Just(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.captureRef(Web_UIEvent_MouseEvent.toEvent(ev)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.preventClick(ev))(function () {
              return Control_Bind.bind(Control_Monad_Free.freeBind)(Select.getVisibility)(function (v) {
                  if (v instanceof Select.On) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.triggerBlur)(function () {
                          return Select.setVisibility(Select.Off.value);
                      });
                  };
                  if (v instanceof Select.Off) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.triggerFocus)(function () {
                          return Select.setVisibility(Select.On.value);
                      });
                  };
                  throw new Error("Failed pattern match at Select.Utils.Setters line 50, column 32 - line 56, column 41: " + [ v.constructor.name ]);
              });
          });
      }));
  }), Halogen_HTML_Events.onKeyDown(function ($2) {
      return Data_Maybe.Just.create(Select.key($2));
  }), Halogen_HTML_Events.onBlur(Select.always(Select.setVisibility(Select.Off.value))), Halogen_HTML_Properties.tabIndex(0) ]);
  var setItemProps = function (index) {
      return Data_Function.flip(Data_Semigroup.append(Data_Semigroup.semigroupArray))([ Halogen_HTML_Events.onMouseDown(function (ev) {
          return new Data_Maybe.Just(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.preventClick(ev))(function () {
              return Select.select(index);
          }));
      }), Halogen_HTML_Events.onMouseOver(Select.always(Select.highlight(new Select.Index(index)))) ]);
  };
  var setInputProps = Data_Function.flip(Data_Semigroup.append(Data_Semigroup.semigroupArray))([ Halogen_HTML_Events.onFocus(function (ev) {
      return new Data_Maybe.Just(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Select.captureRef(Web_UIEvent_FocusEvent.toEvent(ev)))(function () {
          return Select.setVisibility(Select.On.value);
      }));
  }), Halogen_HTML_Events.onKeyDown(function ($3) {
      return Data_Maybe.Just.create(Select.key($3));
  }), Halogen_HTML_Events.onValueInput(function ($4) {
      return Data_Maybe.Just.create(Select.search($4));
  }), Halogen_HTML_Events.onMouseDown(Select.always(Select.setVisibility(Select.On.value))), Halogen_HTML_Events.onBlur(Select.always(Select.setVisibility(Select.Off.value))), Halogen_HTML_Properties.tabIndex(0) ]);
  var setContainerProps = Data_Function.flip(Data_Semigroup.append(Data_Semigroup.semigroupArray))([ Halogen_HTML_Events.onMouseDown(function ($5) {
      return Data_Maybe.Just.create(Select.preventClick($5));
  }) ]);
  exports["setToggleProps"] = setToggleProps;
  exports["setInputProps"] = setInputProps;
  exports["setItemProps"] = setItemProps;
  exports["setContainerProps"] = setContainerProps;
})(PS["Select.Utils.Setters"] = PS["Select.Utils.Setters"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var Select = PS["Select"];
  var Select_Utils_Setters = PS["Select.Utils.Setters"];                 
  var HandleSelect = (function () {
      function HandleSelect(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleSelect.create = function (value0) {
          return function (value1) {
              return new HandleSelect(value0, value1);
          };
      };
      return HandleSelect;
  })();
  var Clear = (function () {
      function Clear(value0) {
          this.value0 = value0;
      };
      Clear.create = function (value0) {
          return new Clear(value0);
      };
      return Clear;
  })();
  var Selected = (function () {
      function Selected(value0) {
          this.value0 = value0;
      };
      Selected.create = function (value0) {
          return new Selected(value0);
      };
      return Selected;
  })();
  var Cleared = (function () {
      function Cleared() {

      };
      Cleared.value = new Cleared();
      return Cleared;
  })();
  var toggle = function (dictToText) {
      return function (props) {
          return function (parentState) {
              return Halogen_HTML_Elements.div([ Example_App_UI_Element.css("dropdown-trigger") ])([ Example_App_UI_Element.button(Select_Utils_Setters.setToggleProps(props))([ Halogen_HTML_Core.text(Data_Maybe.fromMaybe(parentState.placeholder)(Data_Functor.map(Data_Maybe.functorMaybe)(Example_App_Validation.toText(dictToText))(parentState.selected))) ]) ]);
          };
      };
  };
  var menu = function (dictToText) {
      return function (selectState) {
          return Halogen_HTML_Elements.div([ Example_App_UI_Element.css("dropdown-menu") ])([ (function () {
              var $15 = Data_Eq.eq(Select.eqVisibility)(selectState.visibility)(Select.Off.value);
              if ($15) {
                  return Halogen_HTML_Core.text("");
              };
              return Halogen_HTML_Elements.div(Select_Utils_Setters.setContainerProps([ Example_App_UI_Element.css("dropdown-content") ]))(Data_Array.mapWithIndex(function (ix) {
                  return function (item) {
                      return Halogen_HTML_Elements.span(Select_Utils_Setters.setItemProps(ix)((function () {
                          var v = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(new Data_Maybe.Just(ix))(selectState.highlightedIndex);
                          if (v) {
                              return [ Example_App_UI_Element.css("dropdown-item has-background-link has-text-white-bis") ];
                          };
                          return [ Example_App_UI_Element.css("dropdown-item") ];
                      })()))([ Halogen_HTML_Core.text(Example_App_Validation.toText(dictToText)(item)) ]);
                  };
              })(selectState.items));
          })() ]);
      };
  };
  var component = function (dictMonadAff) {
      return function (dictToText) {
          return function (dictEq) {
              var render = function (parentState) {
                  var dropdown = function (childState) {
                      return Halogen_HTML_Elements.div([ (function () {
                          var $17 = Data_Eq.eq(Select.eqVisibility)(childState.visibility)(Select.On.value);
                          if ($17) {
                              return Example_App_UI_Element.css("dropdown is-active");
                          };
                          return Example_App_UI_Element.css("dropdown");
                      })() ])([ toggle(dictToText)([  ])(parentState), menu(dictToText)(childState) ]);
                  };
                  var selectInput = {
                      inputType: Select.Toggle.value,
                      items: parentState.items,
                      initialSearch: Data_Maybe.Nothing.value,
                      debounceTime: Data_Maybe.Nothing.value,
                      render: dropdown
                  };
                  return Halogen_HTML.slot(Data_Unit.unit)(Select.component(dictMonadAff))(selectInput)(Halogen_HTML_Events.input(HandleSelect.create));
              };
              var initialState = function (v) {
                  return {
                      selected: Data_Maybe.Nothing.value,
                      items: v.items,
                      placeholder: v.placeholder
                  };
              };
              var $$eval = function (v) {
                  if (v instanceof Clear) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                          var $22 = {};
                          for (var $23 in v1) {
                              if ({}.hasOwnProperty.call(v1, $23)) {
                                  $22[$23] = v1[$23];
                              };
                          };
                          $22.selected = Data_Maybe.Nothing.value;
                          return $22;
                      }))(function (v1) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.replaceItems(v1.items)))(function (v2) {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                          });
                      });
                  };
                  if (v instanceof HandleSelect) {
                      if (v.value0 instanceof Select.Selected) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.setVisibility(Select.Off.value)))(function (v2) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.replaceItems(Data_Array.difference(dictEq)(v1.items)([ v.value0.value0 ]))))(function (v3) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v4) {
                                          var $29 = {};
                                          for (var $30 in v4) {
                                              if ({}.hasOwnProperty.call(v4, $30)) {
                                                  $29[$30] = v4[$30];
                                              };
                                          };
                                          $29.selected = new Data_Maybe.Just(v.value0.value0);
                                          return $29;
                                      }))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Selected(v.value0.value0)))(function () {
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                          });
                                      });
                                  });
                              });
                          });
                      };
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  };
                  throw new Error("Failed pattern match at Example.App.UI.Dropdown line 82, column 10 - line 96, column 21: " + [ v.constructor.name ]);
              };
              return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
                  initialState: initialState,
                  render: render,
                  "eval": $$eval,
                  receiver: Data_Function["const"](Data_Maybe.Nothing.value)
              });
          };
      };
  };
  exports["HandleSelect"] = HandleSelect;
  exports["Clear"] = Clear;
  exports["Selected"] = Selected;
  exports["Cleared"] = Cleared;
  exports["component"] = component;
  exports["toggle"] = toggle;
  exports["menu"] = menu;
})(PS["Example.App.UI.Dropdown"] = PS["Example.App.UI.Dropdown"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Example_App_UI_Dropdown = PS["Example.App.UI.Dropdown"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var Select = PS["Select"];
  var Select_Utils_Setters = PS["Select.Utils.Setters"];                 
  var HandleSelect = (function () {
      function HandleSelect(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleSelect.create = function (value0) {
          return function (value1) {
              return new HandleSelect(value0, value1);
          };
      };
      return HandleSelect;
  })();
  var Remove = (function () {
      function Remove(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Remove.create = function (value0) {
          return function (value1) {
              return new Remove(value0, value1);
          };
      };
      return Remove;
  })();
  var Clear = (function () {
      function Clear(value0) {
          this.value0 = value0;
      };
      Clear.create = function (value0) {
          return new Clear(value0);
      };
      return Clear;
  })();
  var SelectionsChanged = (function () {
      function SelectionsChanged(value0) {
          this.value0 = value0;
      };
      SelectionsChanged.create = function (value0) {
          return new SelectionsChanged(value0);
      };
      return SelectionsChanged;
  })();
  var component$prime = function (dictMonadAff) {
      return function (dictFunctor) {
          return function (dictMonoid) {
              return function (dictToText) {
                  return function (dictEq) {
                      return function (select$prime) {
                          return function (remove$prime) {
                              return function (filter$prime) {
                                  return function (render$prime) {
                                      var render = function (st) {
                                          var selectInput = {
                                              inputType: Select.TextInput.value,
                                              items: st.items,
                                              initialSearch: Data_Maybe.Nothing.value,
                                              debounceTime: Data_Maybe.Nothing.value,
                                              render: render$prime(st)
                                          };
                                          return Halogen_HTML.slot(Data_Unit.unit)(Select.component(dictMonadAff))(selectInput)(Halogen_HTML_Events.input(HandleSelect.create));
                                      };
                                      var initialState = function (v) {
                                          return {
                                              items: v.items,
                                              placeholder: v.placeholder,
                                              selected: Data_Monoid.mempty(dictMonoid)
                                          };
                                      };
                                      var $$eval = function (v) {
                                          if (v instanceof Clear) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $32 = {};
                                                  for (var $33 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $33)) {
                                                          $32[$33] = v1[$33];
                                                      };
                                                  };
                                                  $32.selected = Data_Monoid.mempty(dictMonoid);
                                                  return $32;
                                              }))(function (v1) {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.replaceItems(v1.items)))(function (v2) {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionsChanged(v1.selected)))(function () {
                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                                                      });
                                                  });
                                              });
                                          };
                                          if (v instanceof Remove) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                  var $37 = {};
                                                  for (var $38 in st) {
                                                      if ({}.hasOwnProperty.call(st, $38)) {
                                                          $37[$38] = st[$38];
                                                      };
                                                  };
                                                  $37.selected = remove$prime(v.value0)(st.selected);
                                                  return $37;
                                              }))(function (v1) {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.replaceItems(filter$prime(v1.items)(v1.selected))))(function (v2) {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionsChanged(v1.selected)))(function () {
                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                                      });
                                                  });
                                              });
                                          };
                                          if (v instanceof HandleSelect) {
                                              if (v.value0 instanceof Select.Emit) {
                                                  return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)($$eval(v.value0.value0))(v.value1);
                                              };
                                              if (v.value0 instanceof Select.Searched) {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                      var items = Data_Array.filter(function ($63) {
                                                          return Data_String_CodeUnits.contains(v.value0.value0)(Example_App_Validation.toText(dictToText)($63));
                                                      })(v1.items);
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.replaceItems(filter$prime(items)(v1.selected))))(function (v2) {
                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                                      });
                                                  });
                                              };
                                              if (v.value0 instanceof Select.Selected) {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                      var $47 = {};
                                                      for (var $48 in st) {
                                                          if ({}.hasOwnProperty.call(st, $48)) {
                                                              $47[$48] = st[$48];
                                                          };
                                                      };
                                                      $47.selected = select$prime(v.value0.value0)(st.selected);
                                                      return $47;
                                                  }))(function (v1) {
                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.setVisibility(Select.Off.value)))(function (v2) {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Select.replaceItems(filter$prime(v1.items)(v1.selected))))(function (v3) {
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionsChanged(v1.selected)))(function () {
                                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                                              });
                                                          });
                                                      });
                                                  });
                                              };
                                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                                          };
                                          throw new Error("Failed pattern match at Example.App.UI.Typeahead line 151, column 10 - line 179, column 17: " + [ v.constructor.name ]);
                                      };
                                      return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
                                          initialState: initialState,
                                          render: render,
                                          "eval": $$eval,
                                          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
                                      });
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var multi = function (dictMonadAff) {
      return function (dictToText) {
          return function (dictEq) {
              var render = function (st) {
                  return function (selectState) {
                      return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.div([ (function () {
                          var $54 = Data_Array.length(st.selected) > 0;
                          if ($54) {
                              return Example_App_UI_Element.css("panel is-marginless");
                          };
                          return Example_App_UI_Element.css("panel is-hidden");
                      })() ])(Data_Functor.map(Data_Functor.functorArray)(function (i) {
                          return Halogen_HTML_Elements.div([ Example_App_UI_Element.css("panel-block has-background-white"), Halogen_HTML_Events.onClick(Select.always(Select.raise(Halogen_Query.action(Remove.create(i))))) ])([ Halogen_HTML_Core.text(Example_App_Validation.toText(dictToText)(i)) ]);
                      })(st.selected)), Halogen_HTML_Elements.div([ (function () {
                          var $55 = Data_Eq.eq(Select.eqVisibility)(selectState.visibility)(Select.On.value);
                          if ($55) {
                              return Example_App_UI_Element.css("dropdown is-flex is-active");
                          };
                          return Example_App_UI_Element.css("dropdown is-flex");
                      })() ])([ Halogen_HTML_Elements.input(Select_Utils_Setters.setInputProps([ Example_App_UI_Element.css("input"), Halogen_HTML_Properties.placeholder(st.placeholder), Halogen_HTML_Properties.value(selectState.search) ])), Example_App_UI_Dropdown.menu(dictToText)(selectState) ]) ]);
                  };
              };
              return component$prime(dictMonadAff)(Data_Functor.functorArray)(Data_Monoid.monoidArray)(dictToText)(dictEq)(Data_Array.cons)(function ($64) {
                  return Data_Array.filter(Data_Eq.notEq(dictEq)($64));
              })(Data_Array.difference(dictEq))(render);
          };
      };
  };
  var single = function (dictMonadAff) {
      return function (dictToText) {
          return function (dictEq) {
              return function (dictSemigroup) {
                  var render = function (st) {
                      return function (selectState) {
                          if (st.selected instanceof Data_Maybe.Just) {
                              return Halogen_HTML_Elements.div([ (function () {
                                  var $57 = Data_Eq.eq(Select.eqVisibility)(selectState.visibility)(Select.On.value);
                                  if ($57) {
                                      return Example_App_UI_Element.css("dropdown is-active");
                                  };
                                  return Example_App_UI_Element.css("dropdown is-flex");
                              })() ])([ Example_App_UI_Dropdown.toggle(dictToText)([ Halogen_HTML_Events.onClick(Select.always(Select.raise(Halogen_Query.action(Remove.create(st.selected.value0))))) ])(st), Example_App_UI_Dropdown.menu(dictToText)(selectState) ]);
                          };
                          if (st.selected instanceof Data_Maybe.Nothing) {
                              return Halogen_HTML_Elements.div([ (function () {
                                  var $59 = Data_Eq.eq(Select.eqVisibility)(selectState.visibility)(Select.On.value);
                                  if ($59) {
                                      return Example_App_UI_Element.css("dropdown is-flex is-active");
                                  };
                                  return Example_App_UI_Element.css("dropdown is-flex");
                              })() ])([ Halogen_HTML_Elements.input(Select_Utils_Setters.setInputProps([ Halogen_HTML_Properties.placeholder(st.placeholder), Halogen_HTML_Properties.value(selectState.search), Example_App_UI_Element.css("input") ])), Example_App_UI_Dropdown.menu(dictToText)(selectState) ]);
                          };
                          throw new Error("Failed pattern match at Example.App.UI.Typeahead line 56, column 27 - line 74, column 8: " + [ st.selected.constructor.name ]);
                      };
                  };
                  var filter$prime = function (items) {
                      return function (v) {
                          if (v instanceof Data_Maybe.Nothing) {
                              return items;
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return Data_Array.filter(function (v1) {
                                  return Data_Eq.eq(dictEq)(v1)(v.value0);
                              })(items);
                          };
                          throw new Error("Failed pattern match at Example.App.UI.Typeahead line 53, column 3 - line 53, column 32: " + [ items.constructor.name, v.constructor.name ]);
                      };
                  };
                  return component$prime(dictMonadAff)(Data_Maybe.functorMaybe)(Data_Maybe.monoidMaybe(dictSemigroup))(dictToText)(dictEq)(function ($65) {
                      return Data_Function["const"](Data_Maybe.Just.create($65));
                  })(Data_Function["const"](Data_Function["const"](Data_Maybe.Nothing.value)))(filter$prime)(render);
              };
          };
      };
  };
  exports["HandleSelect"] = HandleSelect;
  exports["Remove"] = Remove;
  exports["Clear"] = Clear;
  exports["SelectionsChanged"] = SelectionsChanged;
  exports["single"] = single;
  exports["multi"] = multi;
})(PS["Example.App.UI.Typeahead"] = PS["Example.App.UI.Typeahead"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Symbol = PS["Data.Symbol"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Polyform_Validation = PS["Polyform.Validation"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];
  var Record_Builder = PS["Record.Builder"];
  var Type_Row = PS["Type.Row"];                 
  var OnInputFields = function (onInputFieldsBuilder) {
      this.onInputFieldsBuilder = onInputFieldsBuilder;
  };
  var onInputFieldsNil = new OnInputFields(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var onInputFieldsBuilder = function (dict) {
      return dict.onInputFieldsBuilder;
  };
  var onInputField = function (dictMonad) {
      return function (validator) {
          return function (v) {
              if (!v.touched) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(v);
              };
              if (Data_Boolean.otherwise) {
                  return Control_Bind.bind(dictMonad.Bind1())(Polyform_Validation.runValidation(validator)(v.input))(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(Formless_Spec.InputField((function () {
                          if (v1 instanceof Polyform_Validation.Invalid) {
                              return {
                                  input: v.input,
                                  touched: v.touched,
                                  result: Data_Maybe.Just.create(new Data_Either.Left(v1.value0))
                              };
                          };
                          if (v1 instanceof Polyform_Validation.Valid) {
                              return {
                                  input: v.input,
                                  touched: v.touched,
                                  result: Data_Maybe.Just.create(new Data_Either.Right(v1.value1))
                              };
                          };
                          throw new Error("Failed pattern match at Formless.Validation.Polyform line 40, column 27 - line 42, column 51: " + [ v1.constructor.name ]);
                      })()));
                  });
              };
              throw new Error("Failed pattern match at Formless.Validation.Polyform line 30, column 1 - line 35, column 26: " + [ validator.constructor.name, v.constructor.name ]);
          };
      };
  };
  var onInputFieldsCons = function (dictIsSymbol) {
      return function (dictMonad) {
          return function (dictCons) {
              return function (dictOnInputFields) {
                  return function (dictRow1Cons) {
                      return new OnInputFields(function (v) {
                          return function (r) {
                              var rest = onInputFieldsBuilder(dictOnInputFields)(Type_Row.RLProxy.value)(r);
                              var func = onInputField(dictMonad)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                              var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(func);
                              return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                          };
                      });
                  };
              };
          };
      };
  };
  var applyOnInputFields = function (dictMonad) {
      return function (dictRowToList) {
          return function (dictRowToList1) {
              return function (dictOnInputFields) {
                  return function (dictApplyRecord) {
                      return function (dictSequenceRecord) {
                          return function (dictNewtype) {
                              return function (dictNewtype1) {
                                  return function (dictNewtype2) {
                                      return function (r) {
                                          var io = Formless_Internal.fromScratch(onInputFieldsBuilder(dictOnInputFields)(Type_Row.RLProxy.value)(r));
                                          return function ($29) {
                                              return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Newtype.wrap(dictNewtype2))(Formless_Internal.sequenceRecord(dictRowToList1)(dictMonad.Applicative0())(dictSequenceRecord)(Formless_Internal.applyRecord(dictApplyRecord)(io)(Data_Newtype.unwrap(dictNewtype1)($29))));
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["onInputFieldsBuilder"] = onInputFieldsBuilder;
  exports["onInputField"] = onInputField;
  exports["applyOnInputFields"] = applyOnInputFields;
  exports["OnInputFields"] = OnInputFields;
  exports["onInputFieldsNil"] = onInputFieldsNil;
  exports["onInputFieldsCons"] = onInputFieldsCons;
})(PS["Formless.Validation.Polyform"] = PS["Formless.Validation.Polyform"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Console = PS["Effect.Console"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Formless = PS["Formless"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Formless_Validation_Polyform = PS["Formless.Validation.Polyform"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];                 
  var Form = function (x) {
      return x;
  };   
  var newtypeForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Form);
  var renderFormless = function (state) {
      return Example_App_UI_Element.formContent_([ Example_App_UI_Element.input({
          label: "Name",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Write your name")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(newtypeForm)()(Data_Symbol.SProxy.value)(state.form)),
          placeholder: "Dale"
      })([ Halogen_HTML_Properties.value(Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(newtypeForm)()(Data_Symbol.SProxy.value)(state.form)), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(function ($11) {
          return Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(newtypeForm)()(Data_Symbol.SProxy.value)($11));
      })) ]), Example_App_UI_Element.textarea({
          label: "Message",
          help: new Data_Either.Right("Write us a message"),
          placeholder: "We prefer nice messages, but have at it."
      })([ Halogen_HTML_Properties.value(Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
          return "text";
      }))(newtypeForm)()(Data_Symbol.SProxy.value)(state.form)), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(function ($12) {
          return Formless.Modify.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(newtypeForm)()(Data_Symbol.SProxy.value)($12));
      })) ]), Example_App_UI_Element.buttonPrimary([ Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Formless.Submit.create)) ])([ Halogen_HTML_Core.text("Submit") ]) ]);
  };
  var validator = function (dictMonad) {
      return Formless_Validation_Polyform.applyOnInputFields(dictMonad)()()(Formless_Validation_Polyform.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(dictMonad)()(Formless_Validation_Polyform.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "text";
      }))(dictMonad)()(Formless_Validation_Polyform.onInputFieldsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.applyRecordImpl()()()(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListNil)(new Data_Symbol.IsSymbol(function () {
          return "text";
      })))(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))))(Formless_Internal.sequenceRecordCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(dictMonad.Applicative0())()(Formless_Internal.sequenceRecordCons(new Data_Symbol.IsSymbol(function () {
          return "text";
      }))(dictMonad.Applicative0())()(Formless_Internal.sequenceRecordNil(dictMonad.Applicative0()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(newtypeForm)(newtypeForm)(newtypeForm)(Control_Category.identity(Control_Category.categoryFn)({
          name: Example_App_Validation.minLength(dictMonad)(5),
          text: Example_App_Validation.notRequired(dictMonad)(Data_Monoid.monoidUnit)
      }));
  };
  var component = (function () {
      var render = function (st) {
          return Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A basic contact form.") ]), Example_App_UI_Element.p_("You can create a full Halogen contact form like this in less than 100 lines of code with " + ("Formless, most of which is simply Halogen boilerplate. The actual form spec and wiring " + "consists of less than 20 lines of code.")), Halogen_HTML_Elements.br_, Halogen_HTML.slot(Data_Unit.unit)(Formless.component(Data_Ord.ordVoid)(Effect_Aff.monadAff)()()()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal.formSpecToInputFieldNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal.inputFieldsToInputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedNil)))(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal.inputFieldToMaybeOutputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal.countErrorsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal.nilAllTouched)))(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.nilSumRecord(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt)))))(newtypeForm)(newtypeForm)(newtypeForm)(newtypeForm))({
              formSpec: Formless_Spec_Transform.mkFormSpec()(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "text";
              }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(newtypeForm)({
                  name: "",
                  text: ""
              }),
              validator: validator(Effect_Aff.monadAff),
              submitter: function ($13) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Formless_Spec_Transform.unwrapOutput()(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "text";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(newtypeForm)($13));
              },
              render: renderFormless
          })(Data_Function["const"](Data_Maybe.Nothing.value)) ]);
      };
      var $$eval = function (v) {
          if (v.value0 instanceof Formless.Submitted) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.log(Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "text";
              }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString)))(v.value0.value0))));
          };
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      };
      return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["component"] = component;
  exports["Form"] = Form;
  exports["validator"] = validator;
  exports["renderFormless"] = renderFormless;
  exports["newtypeForm"] = newtypeForm;
})(PS["Example.Basic.Component"] = PS["Example.Basic.Component"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Validation_Semigroup = PS["Data.Validation.Semigroup"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];
  var Record_Builder = PS["Record.Builder"];
  var Type_Row = PS["Type.Row"];                 
  var OnInputFields = function (onInputFieldsBuilder) {
      this.onInputFieldsBuilder = onInputFieldsBuilder;
  };
  var onInputFieldsNil = new OnInputFields(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var onInputFieldsBuilder = function (dict) {
      return dict.onInputFieldsBuilder;
  };
  var onInputField = function (validator) {
      return function (v) {
          if (!v.touched) {
              return v;
          };
          if (Data_Boolean.otherwise) {
              return Formless_Spec.InputField(Data_Validation_Semigroup.unV(function (e) {
                  return {
                      result: Data_Maybe.Just.create(new Data_Either.Left(e)),
                      input: v.input,
                      touched: v.touched
                  };
              })(function (v1) {
                  return {
                      result: Data_Maybe.Just.create(new Data_Either.Right(v1)),
                      input: v.input,
                      touched: v.touched
                  };
              })(validator(v.input)));
          };
          throw new Error("Failed pattern match at Formless.Validation.Semigroup line 29, column 1 - line 33, column 22: " + [ validator.constructor.name, v.constructor.name ]);
      };
  };
  var onInputFieldsCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictOnInputFields) {
              return function (dictRow1Cons) {
                  return new OnInputFields(function (v) {
                      return function (r) {
                          var rest = onInputFieldsBuilder(dictOnInputFields)(Type_Row.RLProxy.value)(r);
                          var func = onInputField(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(func);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var applyOnInputFields = function (dictRowToList) {
      return function (dictOnInputFields) {
          return function (dictApplyRecord) {
              return function (dictNewtype) {
                  return function (dictNewtype1) {
                      return function (r) {
                          var io = Record_Builder.build(onInputFieldsBuilder(dictOnInputFields)(Type_Row.RLProxy.value)(r))({});
                          return function ($17) {
                              return Data_Newtype.wrap(dictNewtype1)(Formless_Internal.applyRecord(dictApplyRecord)(io)(Data_Newtype.unwrap(dictNewtype)($17)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["onInputFieldsBuilder"] = onInputFieldsBuilder;
  exports["onInputField"] = onInputField;
  exports["applyOnInputFields"] = applyOnInputFields;
  exports["OnInputFields"] = OnInputFields;
  exports["onInputFieldsNil"] = onInputFieldsNil;
  exports["onInputFieldsCons"] = onInputFieldsCons;
})(PS["Formless.Validation.Semigroup"] = PS["Formless.Validation.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Symbol = PS["Data.Symbol"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Formless_Validation_Semigroup = PS["Formless.Validation.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var Form = function (x) {
      return x;
  };
  var proxies = function (dictRowToList) {
      return function (dictMakeSProxies) {
          return function (dictNewtype) {
              return Formless_Spec_Transform.mkSProxies(dictRowToList)(dictMakeSProxies)(dictNewtype)(Formless_Spec.FormProxy.value);
          };
      };
  };
  var newtypeForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Form);
  var submitter = function (dictMonad) {
      return function ($11) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Formless_Spec_Transform.unwrapOutput()(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(newtypeForm)($11));
      };
  };
  var validator = Formless_Validation_Semigroup.applyOnInputFields()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "email";
  }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "language";
  }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "name";
  }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "whiskey";
  }))()(Formless_Validation_Semigroup.onInputFieldsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.applyRecordImpl()()()(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListNil)(new Data_Symbol.IsSymbol(function () {
      return "whiskey";
  })))(new Data_Symbol.IsSymbol(function () {
      return "name";
  })))(new Data_Symbol.IsSymbol(function () {
      return "language";
  })))(new Data_Symbol.IsSymbol(function () {
      return "email";
  }))))(newtypeForm)(newtypeForm)({
      name: Data_Function.flip(Example_App_Validation.validateMinimumLength)(7),
      email: function ($12) {
          return Example_App_Validation.validateEmailRegex(Data_Maybe.fromMaybe("")($12));
      },
      whiskey: function (v) {
          return Example_App_Validation.validateMaybe(v);
      },
      language: function (v) {
          return Example_App_Validation.validateMaybe(v);
      }
  });
  var formSpec = Formless_Spec_Transform.mkFormSpecFromProxy()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "email";
  }))(Formless_Class_Initial.initialMaybe)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "language";
  }))(Formless_Class_Initial.initialMaybe)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "name";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "whiskey";
  }))(Formless_Class_Initial.initialMaybe)()(Formless_Spec_Transform.mkFormSpecFromRowNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(newtypeForm)(newtypeForm)(Formless_Spec.FormProxy.value);
  exports["Form"] = Form;
  exports["proxies"] = proxies;
  exports["formSpec"] = formSpec;
  exports["validator"] = validator;
  exports["submitter"] = submitter;
  exports["newtypeForm"] = newtypeForm;
})(PS["Example.ExternalComponents.Spec"] = PS["Example.ExternalComponents.Spec"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Effect_Aff = PS["Effect.Aff"];
  var Example_App_UI_Typeahead = PS["Example.App.UI.Typeahead"];
  var Example_ExternalComponents_Spec = PS["Example.ExternalComponents.Spec"];
  var Formless_1 = PS["Formless"];
  var Prelude = PS["Prelude"];                 
  var Email = (function () {
      function Email() {

      };
      Email.value = new Email();
      return Email;
  })();
  var Whiskey = (function () {
      function Whiskey() {

      };
      Whiskey.value = new Whiskey();
      return Whiskey;
  })();
  var Language = (function () {
      function Language() {

      };
      Language.value = new Language();
      return Language;
  })();
  var Formless = (function () {
      function Formless(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Formless.create = function (value0) {
          return function (value1) {
              return new Formless(value0, value1);
          };
      };
      return Formless;
  })();
  var Typeahead = (function () {
      function Typeahead(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Typeahead.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Typeahead(value0, value1, value2);
              };
          };
      };
      return Typeahead;
  })();
  var Reset = (function () {
      function Reset(value0) {
          this.value0 = value0;
      };
      Reset.create = function (value0) {
          return new Reset(value0);
      };
      return Reset;
  })();
  var eqSlot = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Email && y instanceof Email) {
              return true;
          };
          if (x instanceof Whiskey && y instanceof Whiskey) {
              return true;
          };
          if (x instanceof Language && y instanceof Language) {
              return true;
          };
          return false;
      };
  });
  var ordSlot = new Data_Ord.Ord(function () {
      return eqSlot;
  }, function (x) {
      return function (y) {
          if (x instanceof Email && y instanceof Email) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Email) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Email) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Whiskey && y instanceof Whiskey) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Whiskey) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Whiskey) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Language && y instanceof Language) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Example.ExternalComponents.Types line 29, column 8 - line 29, column 32: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  exports["Formless"] = Formless;
  exports["Typeahead"] = Typeahead;
  exports["Reset"] = Reset;
  exports["Email"] = Email;
  exports["Whiskey"] = Whiskey;
  exports["Language"] = Language;
  exports["eqSlot"] = eqSlot;
  exports["ordSlot"] = ordSlot;
})(PS["Example.ExternalComponents.Types"] = PS["Example.ExternalComponents.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_UI_Typeahead = PS["Example.App.UI.Typeahead"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Example_ExternalComponents_Spec = PS["Example.ExternalComponents.Spec"];
  var Example_ExternalComponents_Types = PS["Example.ExternalComponents.Types"];
  var Formless = PS["Formless"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Halogen = PS["Halogen"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Prelude = PS["Prelude"];                 
  var whiskey = function (state) {
      return Example_App_UI_Element.field({
          label: "Whiskey",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Select a favorite whiskey")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Example_ExternalComponents_Spec.newtypeForm)()((Example_ExternalComponents_Spec.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(Example_ExternalComponents_Spec.newtypeForm)).whiskey)(state.form))
      })([ Halogen_HTML.slot(Example_ExternalComponents_Types.Whiskey.value)(Example_App_UI_Typeahead.single(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString)(Data_Semigroup.semigroupString))({
          placeholder: "Lagavulin 12",
          items: [ "Lagavulin 16", "Kilchoman Blue Label", "Laphroaig", "Ardbeg" ]
      })(Halogen_HTML_Events.input(function ($2) {
          return Formless.Raise.create(Halogen_Query.action(Example_ExternalComponents_Types.Typeahead.create(Example_ExternalComponents_Types.Whiskey.value)($2)));
      })) ]);
  };
  var language = function (state) {
      return Example_App_UI_Element.field({
          label: "Language",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose your favorite programming language.")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))(Example_ExternalComponents_Spec.newtypeForm)()((Example_ExternalComponents_Spec.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(Example_ExternalComponents_Spec.newtypeForm)).language)(state.form))
      })([ Halogen_HTML.slot(Example_ExternalComponents_Types.Language.value)(Example_App_UI_Typeahead.single(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString)(Data_Semigroup.semigroupString))({
          placeholder: "Haskell",
          items: [ "Rust", "Python", "Haskell", "PureScript", "PHP", "JavaScript", "C", "C++", "C#", "C--", "Ruby", "APL" ]
      })(Halogen_HTML_Events.input(function ($3) {
          return Formless.Raise.create(Halogen_Query.action(Example_ExternalComponents_Types.Typeahead.create(Example_ExternalComponents_Types.Language.value)($3)));
      })) ]);
  };
  var email = function (state) {
      return Example_App_UI_Element.field({
          label: "Email",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose an email address -- carefully.")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Example_ExternalComponents_Spec.newtypeForm)()((Example_ExternalComponents_Spec.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(Example_ExternalComponents_Spec.newtypeForm)).email)(state.form))
      })([ Halogen_HTML.slot(Example_ExternalComponents_Types.Email.value)(Example_App_UI_Typeahead.single(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString)(Data_Semigroup.semigroupString))({
          placeholder: "me@you.com",
          items: [ "not@anemail.org", "snail@utopia.snailutopia", "blue@jordans@blordans.pordens", "yea_that_won't_work@email.com", "standard@email.com" ]
      })(Halogen_HTML_Events.input(function ($4) {
          return Formless.Raise.create(Halogen_Query.action(Example_ExternalComponents_Types.Typeahead.create(Example_ExternalComponents_Types.Email.value)($4)));
      })) ]);
  };
  var formless = function (state) {
      return Example_App_UI_Element.formContent_([ Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Example_App_Validation.toTextFieldError)(Example_ExternalComponents_Spec.newtypeForm)()(Example_App_UI_Element.input)({
          label: "Name",
          help: "Write your name",
          placeholder: "Dale",
          sym: (Example_ExternalComponents_Spec.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(Example_ExternalComponents_Spec.newtypeForm)).name
      })(state), email(state), whiskey(state), language(state), Example_App_UI_Element.p_("You can only attempt to submit this form if it is valid " + ("and not already being submitted. You can only attempt " + ("to reset the form if it has been changed from its initial " + "state."))), Halogen_HTML_Elements.br_, Example_App_UI_Element.grouped_([ Example_App_UI_Element.buttonPrimary([ (function () {
          var $0 = state.submitting || Data_Eq.notEq(Formless.eqValidStatus)(state.validity)(Formless.Valid.value);
          if ($0) {
              return Halogen_HTML_Properties.disabled(true);
          };
          return Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Formless.Submit.create));
      })() ])([ Halogen_HTML_Core.text("Submit") ]), Example_App_UI_Element.button([ (function () {
          var $1 = !state.dirty;
          if ($1) {
              return Halogen_HTML_Properties.disabled(true);
          };
          return Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Formless.Raise.create(Halogen_Query.action(Example_ExternalComponents_Types.Reset.create))));
      })() ])([ Halogen_HTML_Core.text("Reset") ]) ]) ]);
  };
  exports["formless"] = formless;
  exports["email"] = email;
  exports["whiskey"] = whiskey;
  exports["language"] = language;
})(PS["Example.ExternalComponents.RenderForm"] = PS["Example.ExternalComponents.RenderForm"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Console = PS["Effect.Console"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_UI_Typeahead = PS["Example.App.UI.Typeahead"];
  var Example_ExternalComponents_RenderForm = PS["Example.ExternalComponents.RenderForm"];
  var Example_ExternalComponents_Spec = PS["Example.ExternalComponents.Spec"];
  var Example_ExternalComponents_Types = PS["Example.ExternalComponents.Types"];
  var Formless = PS["Formless"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];                 
  var component = (function () {
      var render = function (st) {
          return Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A form leveraging external components and custom form actions.") ]), Example_App_UI_Element.p_("In Formless, you can freely leverage external components and embed them in the form. " + ("This form shows how to use custom typeahead components built with Select from " + ("CitizenNet. This form also demonstrates how you can manipulate forms in Formless. " + ("Try selecting an email address, then a whiskey. You'll notice that changing your " + "whiskey selection also clears the selected email.")))), Halogen_HTML_Elements.br_, Example_App_UI_Element.p_("Next, try opening the console. If you submit the form with invalid values, Formless will " + ("show you your errors. If you submit a valid form, you'll see Formless just returns the " + "valid outputs for you to work with.")), Halogen_HTML_Elements.br_, Halogen_HTML.slot(Data_Unit.unit)(Formless.component(Example_ExternalComponents_Types.ordSlot)(Effect_Aff.monadAff)()()()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.eqInput(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))(Formless_Internal.eqInput(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.eqInput(Data_Maybe.eqMaybe(Data_Eq.eqString))))(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.formSpecToInputFieldNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.inputFieldsToInputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedNil)))))(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.inputFieldToMaybeOutputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.countErrorsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.nilAllTouched)))))(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.nilSumRecord(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt)))))))(Example_ExternalComponents_Spec.newtypeForm)(Example_ExternalComponents_Spec.newtypeForm)(Example_ExternalComponents_Spec.newtypeForm)(Example_ExternalComponents_Spec.newtypeForm))({
              formSpec: Example_ExternalComponents_Spec.formSpec,
              validator: Data_Functor.map(Data_Functor.functorFn)(Control_Applicative.pure(Effect_Aff.applicativeAff))(Example_ExternalComponents_Spec.validator),
              submitter: Example_ExternalComponents_Spec.submitter(Effect_Aff.monadAff),
              render: Example_ExternalComponents_RenderForm.formless
          })(Halogen_HTML_Events.input(Example_ExternalComponents_Types.Formless.create)) ]);
      };
      var $$eval = function (v) {
          if (v instanceof Example_ExternalComponents_Types.Formless) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)((function () {
                  if (v.value0 instanceof Formless.Emit) {
                      return $$eval(v.value0.value0);
                  };
                  if (v.value0 instanceof Formless.Submitted) {
                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.log(Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "email";
                      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "language";
                      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))(Data_Show.showString))(Data_Show.showString)))(v.value0.value0)));
                  };
                  if (v.value0 instanceof Formless.Changed) {
                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.log(Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "dirty";
                      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "errors";
                      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "submitAttempts";
                      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "submitting";
                      }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                          return "validity";
                      }))(Data_Show.showRecordFieldsNil)(Formless.showValidStatus))(Data_Show.showBoolean))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showBoolean)))(Record["delete"](new Data_Symbol.IsSymbol(function () {
                          return "form";
                      }))()()(Data_Symbol.SProxy.value)(v.value0.value0))));
                  };
                  throw new Error("Failed pattern match at Example.ExternalComponents.Component line 60, column 26 - line 65, column 84: " + [ v.value0.constructor.name ]);
              })());
          };
          if (v instanceof Example_ExternalComponents_Types.Reset) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value0)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.Send.create(Example_ExternalComponents_Types.Email.value)(Halogen_Query.action(Example_App_UI_Typeahead.Clear.create)))))(function (v1) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.Send.create(Example_ExternalComponents_Types.Whiskey.value)(Halogen_Query.action(Example_App_UI_Typeahead.Clear.create)))))(function (v2) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.Send.create(Example_ExternalComponents_Types.Language.value)(Halogen_Query.action(Example_App_UI_Typeahead.Clear.create)))))(function (v3) {
                          return Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.ResetAll.create));
                      });
                  });
              }));
          };
          if (v instanceof Example_ExternalComponents_Types.Typeahead) {
              if (v.value0 instanceof Example_ExternalComponents_Types.Email) {
                  return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value2)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                      return "email";
                  }))(Example_ExternalComponents_Spec.newtypeForm)()((Example_ExternalComponents_Spec.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "email";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "language";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(Example_ExternalComponents_Spec.newtypeForm)).email)(v.value1.value0)))));
              };
              if (v.value0 instanceof Example_ExternalComponents_Types.Whiskey) {
                  return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value2)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Example_ExternalComponents_Spec.newtypeForm)()((Example_ExternalComponents_Spec.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "email";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "language";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(Example_ExternalComponents_Spec.newtypeForm)).whiskey)(v.value1.value0)))))(function (v1) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.Reset.create(Formless_Spec_Transform.resetField(new Data_Symbol.IsSymbol(function () {
                          return "email";
                      }))(Formless_Class_Initial.initialMaybe)(Example_ExternalComponents_Spec.newtypeForm)()((Example_ExternalComponents_Spec.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "email";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "language";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(Example_ExternalComponents_Spec.newtypeForm)).email)))))(function (v2) {
                          return Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.Send.create(Example_ExternalComponents_Types.Email.value)(Halogen_Query.action(Example_App_UI_Typeahead.Clear.create))));
                      });
                  }));
              };
              if (v.value0 instanceof Example_ExternalComponents_Types.Language) {
                  return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value2)(Halogen_Query.query(Data_Eq.eqUnit)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                      return "language";
                  }))(Example_ExternalComponents_Spec.newtypeForm)()((Example_ExternalComponents_Spec.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "email";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "language";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(Example_ExternalComponents_Spec.newtypeForm)).language)(v.value1.value0)))));
              };
              throw new Error("Failed pattern match at Example.ExternalComponents.Component line 73, column 52 - line 84, column 84: " + [ v.value0.constructor.name ]);
          };
          throw new Error("Failed pattern match at Example.ExternalComponents.Component line 59, column 10 - line 84, column 84: " + [ v.constructor.name ]);
      };
      return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["component"] = component;
})(PS["Example.ExternalComponents.Component"] = PS["Example.ExternalComponents.Component"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Console = PS["Effect.Console"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Formless = PS["Formless"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Formless_Validation_Polyform = PS["Formless.Validation.Polyform"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Polyform_Validation = PS["Polyform.Validation"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];                 
  var Form = function (x) {
      return x;
  };
  var HandleFormless = (function () {
      function HandleFormless(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleFormless.create = function (value0) {
          return function (value1) {
              return new HandleFormless(value0, value1);
          };
      };
      return HandleFormless;
  })();
  var newtypeForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Form);
  var validator = function (dictMonadEffect) {
      return Formless_Validation_Polyform.applyOnInputFields(dictMonadEffect.Monad0())()()(Formless_Validation_Polyform.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "city";
      }))(dictMonadEffect.Monad0())()(Formless_Validation_Polyform.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(dictMonadEffect.Monad0())()(Formless_Validation_Polyform.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(dictMonadEffect.Monad0())()(Formless_Validation_Polyform.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "state";
      }))(dictMonadEffect.Monad0())()(Formless_Validation_Polyform.onInputFieldsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.applyRecordImpl()()()(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListNil)(new Data_Symbol.IsSymbol(function () {
          return "state";
      })))(new Data_Symbol.IsSymbol(function () {
          return "name";
      })))(new Data_Symbol.IsSymbol(function () {
          return "email";
      })))(new Data_Symbol.IsSymbol(function () {
          return "city";
      }))))(Formless_Internal.sequenceRecordCons(new Data_Symbol.IsSymbol(function () {
          return "city";
      }))((dictMonadEffect.Monad0()).Applicative0())()(Formless_Internal.sequenceRecordCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))((dictMonadEffect.Monad0()).Applicative0())()(Formless_Internal.sequenceRecordCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))((dictMonadEffect.Monad0()).Applicative0())()(Formless_Internal.sequenceRecordCons(new Data_Symbol.IsSymbol(function () {
          return "state";
      }))((dictMonadEffect.Monad0()).Applicative0())()(Formless_Internal.sequenceRecordNil((dictMonadEffect.Monad0()).Applicative0()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(newtypeForm)(newtypeForm)(newtypeForm)({
          name: Data_Functor.map(Polyform_Validation.functorValidation((((dictMonadEffect.Monad0()).Bind1()).Apply0()).Functor0()))(Example_App_Validation.Name)(Control_Apply.applySecond(Polyform_Validation.applyValidation(Data_Semigroup.semigroupArray)(dictMonadEffect.Monad0()))(Example_App_Validation.minLength(dictMonadEffect.Monad0())(5))(Example_App_Validation.maxLength(dictMonadEffect.Monad0())(10))),
          email: Control_Semigroupoid.composeFlipped(Polyform_Validation.semigroupoidValidation(dictMonadEffect.Monad0())(Data_Semigroup.semigroupArray))(Example_App_Validation.emailFormat(dictMonadEffect.Monad0()))(Example_App_Validation.emailIsUsed(dictMonadEffect)),
          city: Example_App_Validation.minLength(dictMonadEffect.Monad0())(0),
          state: Polyform_Validation.hoistFnV(dictMonadEffect.Monad0())(Data_Monoid.monoidArray)(Control_Applicative.pure(Polyform_Validation.applicativeV(Data_Monoid.monoidArray)))
      });
  };
  var _form = Formless_Spec.FormProxy.value;
  var proxies = function (dictRowToList) {
      return function (dictMakeSProxies) {
          return function (dictNewtype) {
              return Formless_Spec_Transform.mkSProxies(dictRowToList)(dictMakeSProxies)(dictNewtype)(_form);
          };
      };
  };
  var renderFormless = function (state) {
      return Example_App_UI_Element.formContent_([ Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Example_App_Validation.toTextFieldError)(newtypeForm)()(Example_App_UI_Element.input)({
          label: "Name",
          help: "Write your name",
          placeholder: "Dale",
          sym: (proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(newtypeForm)).name
      })(state), Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Example_App_Validation.toTextFieldError)(newtypeForm)()(Example_App_UI_Element.input)({
          label: "Email Address",
          help: "Write your email",
          placeholder: "me@you.com",
          sym: (proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(newtypeForm)).email
      })(state), Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
          return "city";
      }))(Example_App_Validation.toTextFieldError)(newtypeForm)()(Example_App_UI_Element.input)({
          label: "City",
          help: "Write your favorite city",
          placeholder: "Los Angeles",
          sym: (proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(newtypeForm)).city
      })(state), Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
          return "state";
      }))(Example_App_Validation.toTextFieldError)(newtypeForm)()(Example_App_UI_Element.input)({
          label: "State",
          help: "Write your favorite state of mind",
          placeholder: "",
          sym: (proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))(newtypeForm)).state
      })(state), Halogen_HTML_Elements.br_, Example_App_UI_Element.p_("You can only attempt to submit this form if it is valid " + ("and not already being submitted. You can only attempt " + ("to reset the form if it has been changed from its initial " + "state."))), Halogen_HTML_Elements.br_, Example_App_UI_Element.grouped_([ Example_App_UI_Element.buttonPrimary([ (function () {
          var $8 = state.submitting || Data_Eq.notEq(Formless.eqValidStatus)(state.validity)(Formless.Valid.value);
          if ($8) {
              return Halogen_HTML_Properties.disabled(true);
          };
          return Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Formless.Submit.create));
      })() ])([ Halogen_HTML_Core.text("Submit") ]), Example_App_UI_Element.button([ (function () {
          var $9 = !state.dirty;
          if ($9) {
              return Halogen_HTML_Properties.disabled(true);
          };
          return Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Formless.ResetAll.create));
      })() ])([ Halogen_HTML_Core.text("Reset") ]) ]) ]);
  };
  var component = (function () {
      var render = function (st) {
          return Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A form using the composable validation toolkit Polyform.") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("In Formless, you can use whatever validation library you prefer. The component provides " + "helpers for working with "), Halogen_HTML_Elements.code_([ Halogen_HTML_Core.text("purescript-polyform") ]), Halogen_HTML_Core.text("or the canonical "), Halogen_HTML_Elements.code_([ Halogen_HTML_Core.text("purescript-validation") ]), Halogen_HTML_Core.text(" library, but you're not obligated to use either. This form demonstrates using Polyform " + "as the underlying validation library, whereas the other examples use "), Halogen_HTML_Elements.code_([ Halogen_HTML_Core.text("purescript-validation") ]), Halogen_HTML_Core.text(".") ]), Halogen_HTML_Elements.br_, Example_App_UI_Element.p_("Try watching the console output as you fill out the form, and notice how you can only reset the " + "form if it is in a dirty state, and can only submit the form if it is valid."), Halogen_HTML_Elements.br_, Halogen_HTML.slot(Data_Unit.unit)(Formless.component(Data_Ord.ordVoid)(Effect_Aff.monadAff)()()()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))()(Formless_Internal.formSpecToInputFieldNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))()(Formless_Internal.inputFieldsToInputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedNil)))))(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))()(Formless_Internal.inputFieldToMaybeOutputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))()(Formless_Internal.countErrorsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))()(Formless_Internal.nilAllTouched)))))(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "city";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "state";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.nilSumRecord(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt)))))))(newtypeForm)(newtypeForm)(newtypeForm)(newtypeForm))({
              formSpec: Formless_Spec_Transform.mkFormSpecFromProxy()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
                  return "city";
              }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
                  return "state";
              }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(newtypeForm)(newtypeForm)(_form),
              validator: validator(Effect_Aff.monadEffectAff),
              submitter: function ($17) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Formless_Spec_Transform.unwrapOutput()(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "city";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "email";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "state";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(newtypeForm)($17));
              },
              render: renderFormless
          })(Halogen_HTML_Events.input(HandleFormless.create)) ]);
      };
      var $$eval = function (v) {
          if (v.value0 instanceof Formless.Emit) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          };
          if (v.value0 instanceof Formless.Submitted) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.log(Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "city";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "state";
              }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Example_App_Validation.showName))(Example_App_Validation.showEmail))(Data_Show.showString)))(v.value0.value0))));
          };
          if (v.value0 instanceof Formless.Changed) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.log(Data_Show.show(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "dirty";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "errors";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "submitAttempts";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "submitting";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "validity";
              }))(Data_Show.showRecordFieldsNil)(Formless.showValidStatus))(Data_Show.showBoolean))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showBoolean)))(Record["delete"](new Data_Symbol.IsSymbol(function () {
                  return "form";
              }))()()(Data_Symbol.SProxy.value)(v.value0.value0)))));
          };
          throw new Error("Failed pattern match at Example.Polyform.Component line 41, column 27 - line 46, column 84: " + [ v.value0.constructor.name ]);
      };
      return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["HandleFormless"] = HandleFormless;
  exports["component"] = component;
  exports["Form"] = Form;
  exports["_form"] = _form;
  exports["proxies"] = proxies;
  exports["validator"] = validator;
  exports["renderFormless"] = renderFormless;
  exports["newtypeForm"] = newtypeForm;
})(PS["Example.Polyform.Component"] = PS["Example.Polyform.Component"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Generic_Rep = PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = PS["Data.Generic.Rep.Show"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Formless = PS["Formless"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Prelude = PS["Prelude"];                 
  var Low = (function () {
      function Low() {

      };
      Low.value = new Low();
      return Low;
  })();
  var Medium = (function () {
      function Medium() {

      };
      Medium.value = new Medium();
      return Medium;
  })();
  var Fast = (function () {
      function Fast() {

      };
      Fast.value = new Fast();
      return Fast;
  })();
  var ViewCost = (function () {
      function ViewCost() {

      };
      ViewCost.value = new ViewCost();
      return ViewCost;
  })();
  var ClickCost = (function () {
      function ClickCost() {

      };
      ClickCost.value = new ClickCost();
      return ClickCost;
  })();
  var InstallCost = (function () {
      function InstallCost() {

      };
      InstallCost.value = new InstallCost();
      return InstallCost;
  })();
  var Dollars = function (x) {
      return x;
  };
  var Options = function (x) {
      return x;
  };
  var OptionsForm = function (x) {
      return x;
  };
  var toTextMetric = new Example_App_Validation.ToText(function (v) {
      if (v instanceof ViewCost) {
          return "View Cost";
      };
      if (v instanceof ClickCost) {
          return "Click Cost";
      };
      if (v instanceof InstallCost) {
          return "Install Cost";
      };
      throw new Error("Failed pattern match at Example.RealWorld.Data.Options line 40, column 1 - line 40, column 39: " + [ v.constructor.name ]);
  });
  var showDollars = Data_Show.showInt;
  var proxies = function (dictRowToList) {
      return function (dictMakeSProxies) {
          return function (dictNewtype) {
              return Formless_Spec_Transform.mkSProxies(dictRowToList)(dictMakeSProxies)(dictNewtype)(Formless_Spec.FormProxy.value);
          };
      };
  };
  var newtypeOptionsForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OptionsForm);
  var initialSpeed = new Formless_Class_Initial.Initial(Low.value);
  var genericSpeed = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Low) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Medium) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof Fast) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Example.RealWorld.Data.Options line 52, column 8 - line 52, column 48: " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return Low.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return Medium.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return Fast.value;
      };
      throw new Error("Failed pattern match at Example.RealWorld.Data.Options line 52, column 8 - line 52, column 48: " + [ x.constructor.name ]);
  });
  var showSpeed = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericSpeed)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Low";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Medium";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Fast";
  }))))));
  var genericMetric = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof ViewCost) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof ClickCost) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof InstallCost) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Example.RealWorld.Data.Options line 33, column 8 - line 33, column 50: " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return ViewCost.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return ClickCost.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return InstallCost.value;
      };
      throw new Error("Failed pattern match at Example.RealWorld.Data.Options line 33, column 8 - line 33, column 50: " + [ x.constructor.name ]);
  });
  var showMetric = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericMetric)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ViewCost";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ClickCost";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "InstallCost";
  }))))));
  var showOptions = Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "clickCost";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "dimensions";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "enable";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "installCost";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "metric";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "size";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "speed";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "viewCost";
  }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(showDollars)))(showSpeed))(Data_Show.showNumber))(showMetric))(Data_Maybe.showMaybe(showDollars)))(Data_Show.showBoolean))(Data_Show.showNumber))(Data_Maybe.showMaybe(showDollars)));
  var eqSpeed = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Low && y instanceof Low) {
              return true;
          };
          if (x instanceof Medium && y instanceof Medium) {
              return true;
          };
          if (x instanceof Fast && y instanceof Fast) {
              return true;
          };
          return false;
      };
  });
  var eqMetric = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof ViewCost && y instanceof ViewCost) {
              return true;
          };
          if (x instanceof ClickCost && y instanceof ClickCost) {
              return true;
          };
          if (x instanceof InstallCost && y instanceof InstallCost) {
              return true;
          };
          return false;
      };
  });
  exports["Dollars"] = Dollars;
  exports["ViewCost"] = ViewCost;
  exports["ClickCost"] = ClickCost;
  exports["InstallCost"] = InstallCost;
  exports["Low"] = Low;
  exports["Medium"] = Medium;
  exports["Fast"] = Fast;
  exports["proxies"] = proxies;
  exports["Options"] = Options;
  exports["OptionsForm"] = OptionsForm;
  exports["showDollars"] = showDollars;
  exports["genericMetric"] = genericMetric;
  exports["eqMetric"] = eqMetric;
  exports["showMetric"] = showMetric;
  exports["toTextMetric"] = toTextMetric;
  exports["genericSpeed"] = genericSpeed;
  exports["eqSpeed"] = eqSpeed;
  exports["showSpeed"] = showSpeed;
  exports["initialSpeed"] = initialSpeed;
  exports["showOptions"] = showOptions;
  exports["newtypeOptionsForm"] = newtypeOptionsForm;
})(PS["Example.RealWorld.Data.Options"] = PS["Example.RealWorld.Data.Options"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Example_RealWorld_Data_Options = PS["Example.RealWorld.Data.Options"];
  var Formless = PS["Formless"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Prelude = PS["Prelude"];
  var Group = function (x) {
      return x;
  };
  var GroupForm = function (x) {
      return x;
  };
  var toTextAdmin = new Example_App_Validation.ToText(function (v) {
      if (v.id instanceof Data_Maybe.Just) {
          return "Administrator " + Data_Show.show(Data_Show.showInt)(v.id.value0);
      };
      if (v.id instanceof Data_Maybe.Nothing) {
          return "None";
      };
      throw new Error("Failed pattern match at Example.RealWorld.Data.Group line 29, column 27 - line 33, column 1: " + [ v.id.constructor.name ]);
  });
  var showGroupId = Data_Show.showInt;
  var showAdmin = Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(showGroupId)));
  var showGroup = Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "admin";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "applications";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "name";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "options";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "pixels";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "secretKey";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "whiskey";
  }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))(Data_Show.showArray(Data_Show.showString)))(Data_Maybe.showMaybe(Example_RealWorld_Data_Options.showOptions)))(Data_Show.showString))(showGroupId))(Data_Show.showArray(Data_Show.showString)))(showAdmin));
  var proxies = function (dictRowToList) {
      return function (dictMakeSProxies) {
          return function (dictNewtype) {
              return Formless_Spec_Transform.mkSProxies(dictRowToList)(dictMakeSProxies)(dictNewtype)(Formless_Spec.FormProxy.value);
          };
      };
  };
  var newtypeGroupForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, GroupForm);
  var newtypeGroup = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Group);
  var eqGroupId = Data_Eq.eqInt;
  var eqAdmin = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))(Data_Maybe.eqMaybe(eqGroupId)));
  exports["Group"] = Group;
  exports["GroupForm"] = GroupForm;
  exports["proxies"] = proxies;
  exports["eqGroupId"] = eqGroupId;
  exports["showGroupId"] = showGroupId;
  exports["eqAdmin"] = eqAdmin;
  exports["showAdmin"] = showAdmin;
  exports["toTextAdmin"] = toTextAdmin;
  exports["newtypeGroup"] = newtypeGroup;
  exports["showGroup"] = showGroup;
  exports["newtypeGroupForm"] = newtypeGroupForm;
})(PS["Example.RealWorld.Data.Group"] = PS["Example.RealWorld.Data.Group"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Either_Nested = PS["Data.Either.Nested"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor_Coproduct_Nested = PS["Data.Functor.Coproduct.Nested"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Effect_Aff = PS["Effect.Aff"];
  var Example_App_UI_Dropdown = PS["Example.App.UI.Dropdown"];
  var Example_App_UI_Typeahead = PS["Example.App.UI.Typeahead"];
  var Example_RealWorld_Data_Group = PS["Example.RealWorld.Data.Group"];
  var Example_RealWorld_Data_Options = PS["Example.RealWorld.Data.Options"];
  var Formless = PS["Formless"];
  var Prelude = PS["Prelude"];                 
  var GroupTab = (function () {
      function GroupTab() {

      };
      GroupTab.value = new GroupTab();
      return GroupTab;
  })();
  var OptionsTab = (function () {
      function OptionsTab() {

      };
      OptionsTab.value = new OptionsTab();
      return OptionsTab;
  })();
  var Applications = (function () {
      function Applications() {

      };
      Applications.value = new Applications();
      return Applications;
  })();
  var Pixels = (function () {
      function Pixels() {

      };
      Pixels.value = new Pixels();
      return Pixels;
  })();
  var GroupForm = (function () {
      function GroupForm(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GroupForm.create = function (value0) {
          return function (value1) {
              return new GroupForm(value0, value1);
          };
      };
      return GroupForm;
  })();
  var OptionsForm = (function () {
      function OptionsForm(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OptionsForm.create = function (value0) {
          return function (value1) {
              return new OptionsForm(value0, value1);
          };
      };
      return OptionsForm;
  })();
  var TASingle = (function () {
      function TASingle(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TASingle.create = function (value0) {
          return function (value1) {
              return new TASingle(value0, value1);
          };
      };
      return TASingle;
  })();
  var TAMulti = (function () {
      function TAMulti(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TAMulti.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TAMulti(value0, value1, value2);
              };
          };
      };
      return TAMulti;
  })();
  var AdminDropdown = (function () {
      function AdminDropdown(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AdminDropdown.create = function (value0) {
          return function (value1) {
              return new AdminDropdown(value0, value1);
          };
      };
      return AdminDropdown;
  })();
  var MetricDropdown = (function () {
      function MetricDropdown(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      MetricDropdown.create = function (value0) {
          return function (value1) {
              return new MetricDropdown(value0, value1);
          };
      };
      return MetricDropdown;
  })();
  var Select = (function () {
      function Select(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Select.create = function (value0) {
          return function (value1) {
              return new Select(value0, value1);
          };
      };
      return Select;
  })();
  var Reset = (function () {
      function Reset(value0) {
          this.value0 = value0;
      };
      Reset.create = function (value0) {
          return new Reset(value0);
      };
      return Reset;
  })();
  var Submit = (function () {
      function Submit(value0) {
          this.value0 = value0;
      };
      Submit.create = function (value0) {
          return new Submit(value0);
      };
      return Submit;
  })();
  var eqTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof GroupTab && y instanceof GroupTab) {
              return true;
          };
          if (x instanceof OptionsTab && y instanceof OptionsTab) {
              return true;
          };
          return false;
      };
  });
  var eqGroupTASlot = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Applications && y instanceof Applications) {
              return true;
          };
          if (x instanceof Pixels && y instanceof Pixels) {
              return true;
          };
          return false;
      };
  });
  var ordGroupTASlot = new Data_Ord.Ord(function () {
      return eqGroupTASlot;
  }, function (x) {
      return function (y) {
          if (x instanceof Applications && y instanceof Applications) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Applications) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Applications) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Pixels && y instanceof Pixels) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Example.RealWorld.Types line 78, column 8 - line 78, column 50: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  exports["GroupForm"] = GroupForm;
  exports["OptionsForm"] = OptionsForm;
  exports["TASingle"] = TASingle;
  exports["TAMulti"] = TAMulti;
  exports["AdminDropdown"] = AdminDropdown;
  exports["MetricDropdown"] = MetricDropdown;
  exports["Select"] = Select;
  exports["Reset"] = Reset;
  exports["Submit"] = Submit;
  exports["Applications"] = Applications;
  exports["Pixels"] = Pixels;
  exports["GroupTab"] = GroupTab;
  exports["OptionsTab"] = OptionsTab;
  exports["eqGroupTASlot"] = eqGroupTASlot;
  exports["ordGroupTASlot"] = ordGroupTASlot;
  exports["eqTab"] = eqTab;
})(PS["Example.RealWorld.Types"] = PS["Example.RealWorld.Types"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Example_App_UI_Dropdown = PS["Example.App.UI.Dropdown"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_UI_Typeahead = PS["Example.App.UI.Typeahead"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Example_RealWorld_Data_Group = PS["Example.RealWorld.Data.Group"];
  var Example_RealWorld_Types = PS["Example.RealWorld.Types"];
  var Formless = PS["Formless"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Halogen = PS["Halogen"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_Query = PS["Halogen.Query"];
  var Prelude = PS["Prelude"];                 
  var renderWhiskey = function (state) {
      return Example_App_UI_Element.field({
          label: "Whiskey",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose a whiskey to be awarded")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).whiskey)(state.form))
      })([ Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Example_App_UI_Typeahead.single(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString)(Data_Semigroup.semigroupString))({
          placeholder: "Choose a whiskey",
          items: [ "Laphroiag 10", "Lagavulin 12", "Lagavulin 16", "Oban 16", "Kilchoman Blue Label" ]
      })(Halogen_HTML_Events.input(function ($0) {
          return Formless.Raise.create(Halogen_Query.action(Example_RealWorld_Types.TASingle.create($0)));
      })) ]);
  };
  var renderSecretKey2 = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
      return "secretKey2";
  }))(Example_App_Validation.toTextFieldError)(Example_RealWorld_Data_Group.newtypeGroupForm)()(Example_App_UI_Element.input)({
      label: "Secret Key 2",
      help: "Confirm the secret identifier for the group.",
      placeholder: "iasncat3ihba/0",
      sym: (Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).secretKey2
  });
  var renderSecretKey1 = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
      return "secretKey1";
  }))(Example_App_Validation.toTextFieldError)(Example_RealWorld_Data_Group.newtypeGroupForm)()(Example_App_UI_Element.input)({
      label: "Secret Key 1",
      help: "Provide a secret identifier for the group.",
      placeholder: "iasncat3ihba/0",
      sym: (Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).secretKey1
  });
  var renderPixels = function (state) {
      return Example_App_UI_Element.field({
          label: "Tracking Pixels",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose a pixel to track")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).pixels)(state.form))
      })([ Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(Example_RealWorld_Types.Pixels.value)(Example_App_UI_Typeahead.multi(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString))({
          placeholder: "Search pixels",
          items: [ "My favorite pixel", "Your favorite pixel", "Application main pixel", "A pixel for you is a pixel for me" ]
      })(Halogen_HTML_Events.input(function ($1) {
          return Formless.Raise.create(Halogen_Query.action(Example_RealWorld_Types.TAMulti.create(Example_RealWorld_Types.Pixels.value)($1)));
      })) ]);
  };
  var renderName = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
      return "name";
  }))(Example_App_Validation.toTextFieldError)(Example_RealWorld_Data_Group.newtypeGroupForm)()(Example_App_UI_Element.input)({
      label: "Name",
      help: "Give the group a name.",
      placeholder: "January Analytics Seminar",
      sym: (Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).name
  });
  var renderApplications = function (state) {
      return Example_App_UI_Element.field({
          label: "Application Targets",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Applications are available in several sizes")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).applications)(state.form))
      })([ Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(Example_RealWorld_Types.Applications.value)(Example_App_UI_Typeahead.multi(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString))({
          placeholder: "Search one or more applications",
          items: [ "Facebook", "Google", "Twitter", "Pinterest" ]
      })(Halogen_HTML_Events.input(function ($2) {
          return Formless.Raise.create(Halogen_Query.action(Example_RealWorld_Types.TAMulti.create(Example_RealWorld_Types.Applications.value)($2)));
      })) ]);
  };
  var renderAdmin = function (state) {
      var items = [ {
          id: Data_Maybe.Nothing.value
      }, {
          id: Data_Maybe.Just.create(10)
      }, {
          id: Data_Maybe.Just.create(15)
      }, {
          id: Data_Maybe.Just.create(20)
      }, {
          id: Data_Maybe.Just.create(25)
      }, {
          id: Data_Maybe.Just.create(30)
      }, {
          id: Data_Maybe.Just.create(35)
      } ];
      return Example_App_UI_Element.field({
          label: "Administrator",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose an administrator for the account")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).admin)(state.form))
      })([ Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp3)(Data_Unit.unit)(Example_App_UI_Dropdown.component(Effect_Aff_Class.monadAffAff)(Example_RealWorld_Data_Group.toTextAdmin)(Example_RealWorld_Data_Group.eqAdmin))({
          items: items,
          placeholder: "Choose an admin"
      })(Halogen_HTML_Events.input(function ($3) {
          return Formless.Raise.create(Halogen_Query.action(Example_RealWorld_Types.AdminDropdown.create($3)));
      })) ]);
  };
  var render = function (state) {
      return Example_App_UI_Element.formContent_([ renderName(state), renderAdmin(state), renderSecretKey1(state), renderSecretKey2(state), renderApplications(state), renderPixels(state), renderWhiskey(state) ]);
  };
  exports["render"] = render;
  exports["renderName"] = renderName;
  exports["renderSecretKey1"] = renderSecretKey1;
  exports["renderSecretKey2"] = renderSecretKey2;
  exports["renderAdmin"] = renderAdmin;
  exports["renderWhiskey"] = renderWhiskey;
  exports["renderPixels"] = renderPixels;
  exports["renderApplications"] = renderApplications;
})(PS["Example.RealWorld.Render.GroupForm"] = PS["Example.RealWorld.Render.GroupForm"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Lens = PS["Data.Lens"];
  var Data_Lens_Getter = PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_Class = PS["Effect.Aff.Class"];
  var Example_App_UI_Dropdown = PS["Example.App.UI.Dropdown"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Example_RealWorld_Data_Options = PS["Example.RealWorld.Data.Options"];
  var Example_RealWorld_Types = PS["Example.RealWorld.Types"];
  var Formless = PS["Formless"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Halogen = PS["Halogen"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Prelude = PS["Prelude"];                 
  var renderViewCost = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
      return "viewCost";
  }))(Example_App_Validation.toTextFieldError)(Example_RealWorld_Data_Options.newtypeOptionsForm)()(Example_App_UI_Element.input)({
      label: "View Cost",
      placeholder: "100",
      help: "Enter a dollar amount for view costs.",
      sym: (Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).viewCost
  });
  var renderSpeed = function (state) {
      var speed = Data_Lens_Getter.view(Formless_Spec._Field(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).speed)(Data_Lens_Internal_Forget.strongForget))(state.form);
      return Example_App_UI_Element.field({
          label: "Speed",
          help: new Data_Either.Right("How fast do you want to go?")
      })([ Halogen_HTML_Elements.label([ Example_App_UI_Element.css("radio") ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.name("speed"), Example_App_UI_Element.css("radio"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputRadio.value), Halogen_HTML_Properties.checked(Data_Eq.eq(Example_RealWorld_Data_Options.eqSpeed)(speed.input)(Example_RealWorld_Data_Options.Low.value)), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Formless.Modify.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).speed)(Example_RealWorld_Data_Options.Low.value)))) ]), Halogen_HTML_Core.text(" " + Data_Show.show(Example_RealWorld_Data_Options.showSpeed)(Example_RealWorld_Data_Options.Low.value)) ]), Halogen_HTML_Elements.label([ Example_App_UI_Element.css("radio") ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.name("speed"), Example_App_UI_Element.css("radio"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputRadio.value), Halogen_HTML_Properties.checked(Data_Eq.eq(Example_RealWorld_Data_Options.eqSpeed)(speed.input)(Example_RealWorld_Data_Options.Medium.value)), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Formless.Modify.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).speed)(Example_RealWorld_Data_Options.Medium.value)))) ]), Halogen_HTML_Core.text(" " + Data_Show.show(Example_RealWorld_Data_Options.showSpeed)(Example_RealWorld_Data_Options.Medium.value)) ]), Halogen_HTML_Elements.label([ Example_App_UI_Element.css("radio") ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.name("speed"), Example_App_UI_Element.css("radio"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputRadio.value), Halogen_HTML_Properties.checked(Data_Eq.eq(Example_RealWorld_Data_Options.eqSpeed)(speed.input)(Example_RealWorld_Data_Options.Fast.value)), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Formless.Modify.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).speed)(Example_RealWorld_Data_Options.Fast.value)))) ]), Halogen_HTML_Core.text(" " + Data_Show.show(Example_RealWorld_Data_Options.showSpeed)(Example_RealWorld_Data_Options.Fast.value)) ]) ]);
  };
  var renderSize = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
      return "size";
  }))(Example_App_Validation.toTextFieldError)(Example_RealWorld_Data_Options.newtypeOptionsForm)()(Example_App_UI_Element.input)({
      label: "Size",
      placeholder: "10.233",
      help: "Enter a total campaign size.",
      sym: (Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).size
  });
  var renderMetric = function (state) {
      return Example_App_UI_Element.field({
          label: "Metric",
          help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose a metric to optimize for.")(Formless_Spec_Transform.getResult(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).metric)(state.form))
      })([ Halogen_HTML.slot(Data_Unit.unit)(Example_App_UI_Dropdown.component(Effect_Aff_Class.monadAffAff)(Example_RealWorld_Data_Options.toTextMetric)(Example_RealWorld_Data_Options.eqMetric))({
          placeholder: "Choose a metric",
          items: [ Example_RealWorld_Data_Options.ViewCost.value, Example_RealWorld_Data_Options.ClickCost.value, Example_RealWorld_Data_Options.InstallCost.value ]
      })(Halogen_HTML_Events.input(function ($6) {
          return Formless.Raise.create(Halogen_Query.action(Example_RealWorld_Types.MetricDropdown.create($6)));
      })) ]);
  };
  var renderInstallCost = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
      return "installCost";
  }))(Example_App_Validation.toTextFieldError)(Example_RealWorld_Data_Options.newtypeOptionsForm)()(Example_App_UI_Element.input)({
      label: "Install Cost",
      placeholder: "10",
      help: "Enter a dollar amount you're willing to pay for an app instal.",
      sym: (Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).installCost
  });
  var renderEnabled = function (state) {
      return Example_App_UI_Element.field({
          label: "Enable",
          help: new Data_Either.Right("Do you want to enable this set of options?")
      })([ Halogen_HTML_Elements.label([ Example_App_UI_Element.css("checkbox") ])([ Halogen_HTML_Elements.input([ Example_App_UI_Element.css("checkbox"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputCheckbox.value), Halogen_HTML_Properties.checked(Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).enable)(state.form)), Halogen_HTML_Events.onChange(Halogen_HTML_Events.input_(Formless.Modify.create(Formless_Spec_Transform.modifyInput(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).enable)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))))) ]), Halogen_HTML_Core.text(" Enable extra options") ]) ]);
  };
  var renderDimensions = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
      return "dimensions";
  }))(Example_App_Validation.toTextFieldError)(Example_RealWorld_Data_Options.newtypeOptionsForm)()(Example_App_UI_Element.input)({
      label: "Dimensions",
      placeholder: "1.027",
      help: "Enter a total campaign dimension set ratio buzzword.",
      sym: (Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).dimensions
  });
  var renderOthers = function (state) {
      return [ renderSize(state), renderDimensions(state), renderSpeed(state) ];
  };
  var renderClickCost = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
      return "clickCost";
  }))(Example_App_Validation.toTextFieldError)(Example_RealWorld_Data_Options.newtypeOptionsForm)()(Example_App_UI_Element.input)({
      label: "Click Cost",
      placeholder: "1",
      help: "Enter a dollar amount you're willing to pay for a click.",
      sym: (Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).clickCost
  });
  var renderMetrics = function (state) {
      var renderMetricField = function (v) {
          if (v instanceof Data_Maybe.Just && v.value0 instanceof Example_RealWorld_Data_Options.ViewCost) {
              return renderViewCost(state);
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof Example_RealWorld_Data_Options.ClickCost) {
              return renderClickCost(state);
          };
          if (v instanceof Data_Maybe.Just && v.value0 instanceof Example_RealWorld_Data_Options.InstallCost) {
              return renderInstallCost(state);
          };
          if (v instanceof Data_Maybe.Nothing) {
              return Halogen_HTML_Elements.div_([  ]);
          };
          throw new Error("Failed pattern match at Example.RealWorld.Render.OptionsForm line 51, column 25 - line 55, column 28: " + [ v.constructor.name ]);
      };
      return [ renderMetric(state), renderMetricField(Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).metric)(state.form)) ];
  };
  var render = function (state) {
      return Example_App_UI_Element.formContent_([ renderEnabled(state), Halogen_HTML_Elements.div([ (function () {
          var $5 = Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).enable)(state.form);
          if ($5) {
              return Example_App_UI_Element.css("");
          };
          return Example_App_UI_Element.css("is-hidden");
      })() ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(renderMetrics(state))(renderOthers(state))) ]);
  };
  exports["render"] = render;
  exports["renderMetrics"] = renderMetrics;
  exports["renderOthers"] = renderOthers;
  exports["renderEnabled"] = renderEnabled;
  exports["renderMetric"] = renderMetric;
  exports["renderViewCost"] = renderViewCost;
  exports["renderClickCost"] = renderClickCost;
  exports["renderInstallCost"] = renderInstallCost;
  exports["renderSize"] = renderSize;
  exports["renderDimensions"] = renderDimensions;
  exports["renderSpeed"] = renderSpeed;
})(PS["Example.RealWorld.Render.OptionsForm"] = PS["Example.RealWorld.Render.OptionsForm"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Validation_Semigroup = PS["Data.Validation.Semigroup"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Example_RealWorld_Data_Group = PS["Example.RealWorld.Data.Group"];
  var Formless = PS["Formless"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Formless_Validation_Semigroup = PS["Formless.Validation.Semigroup"];
  var Prelude = PS["Prelude"];
  var Record = PS["Record"];                 
  var groupFormValidate = function (dictMonad) {
      return function (form) {
          var validateBudget = Data_Function["const"](Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(new Data_Maybe.Just(100)));
          return Control_Applicative.pure(dictMonad.Applicative0())(Formless_Validation_Semigroup.applyOnInputFields()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))()(Formless_Validation_Semigroup.onInputFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Validation_Semigroup.onInputFieldsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.applyRecordImpl()()()(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListCons()()(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.row3(Formless_Internal.row1Cons()())()())(Formless_Internal.applyRowListNil)(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          })))(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          })))(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          })))(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          })))(new Data_Symbol.IsSymbol(function () {
              return "name";
          })))(new Data_Symbol.IsSymbol(function () {
              return "applications";
          })))(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))))(Example_RealWorld_Data_Group.newtypeGroupForm)(Example_RealWorld_Data_Group.newtypeGroupForm)(Control_Category.identity(Control_Category.categoryFn)({
              name: Example_App_Validation.validateNonEmpty,
              secretKey1: function (i) {
                  return Control_Apply.applySecond(Data_Validation_Semigroup.applyV(Data_Semigroup.semigroupArray))(Example_App_Validation.validateNonEmpty(i))(Example_App_Validation.validateEqual(Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).secretKey2)(form))(i));
              },
              secretKey2: function (i) {
                  return Control_Apply.applySecond(Data_Validation_Semigroup.applyV(Data_Semigroup.semigroupArray))(Example_App_Validation.validateNonEmpty(i))(Example_App_Validation.validateEqual(Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).secretKey1)(form))(i));
              },
              admin: Example_App_Validation.validateMaybe,
              applications: Example_App_Validation.validateNonEmptyArray,
              pixels: Example_App_Validation.validateNonEmptyArray,
              whiskey: Example_App_Validation.validateMaybe
          }))(form));
      };
  };
  var groupFormSubmit = function (dictMonad) {
      return function (form) {
          return Control_Bind.bind(dictMonad.Bind1())(Control_Applicative.pure(dictMonad.Applicative0())(10))(function (v) {
              return Control_Applicative.pure(dictMonad.Applicative0())(Example_RealWorld_Data_Group.Group(Record["delete"](new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))()()(Data_Symbol.SProxy.value)(Record.rename(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(new Data_Symbol.IsSymbol(function () {
                  return "secretKey";
              }))()()()()(Data_Symbol.SProxy.value)(Data_Symbol.SProxy.value)(Record.insert(new Data_Symbol.IsSymbol(function () {
                  return "id";
              }))()()(Data_Symbol.SProxy.value)(v)(Record.insert(new Data_Symbol.IsSymbol(function () {
                  return "options";
              }))()()(Data_Symbol.SProxy.value)(Data_Maybe.Nothing.value)(Formless_Spec_Transform.unwrapOutput()(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Example_RealWorld_Data_Group.newtypeGroupForm)(form)))))));
          });
      };
  };
  var groupFormSpec = Formless_Spec_Transform.mkFormSpecFromProxy()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "admin";
  }))(Formless_Class_Initial.initialMaybe)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "applications";
  }))(Formless_Class_Initial.initialArray)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "name";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "pixels";
  }))(Formless_Class_Initial.initialArray)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "secretKey1";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "secretKey2";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "whiskey";
  }))(Formless_Class_Initial.initialMaybe)()(Formless_Spec_Transform.mkFormSpecFromRowNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Example_RealWorld_Data_Group.newtypeGroupForm)(Example_RealWorld_Data_Group.newtypeGroupForm)(Formless_Spec.FormProxy.value);
  exports["groupFormSpec"] = groupFormSpec;
  exports["groupFormSubmit"] = groupFormSubmit;
  exports["groupFormValidate"] = groupFormValidate;
})(PS["Example.RealWorld.Spec.GroupForm"] = PS["Example.RealWorld.Spec.GroupForm"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Validation_Semigroup = PS["Data.Validation.Semigroup"];
  var Example_App_Validation = PS["Example.App.Validation"];
  var Example_RealWorld_Data_Options = PS["Example.RealWorld.Data.Options"];
  var Formless = PS["Formless"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Formless_Validation_Semigroup = PS["Formless.Validation.Semigroup"];
  var Prelude = PS["Prelude"];                 
  var optionsFormValidate = function (v) {
      var validateInt = function (str) {
          return Data_Functor.map(Data_Validation_Semigroup.functorV)(Data_Int.toNumber)(Example_App_Validation.validateInt(str));
      };
      var metric = Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).metric)(v);
      var validateMetric = function (m) {
          return function (str) {
              if (Data_Eq.eq(Data_Maybe.eqMaybe(Example_RealWorld_Data_Options.eqMetric))(metric)(new Data_Maybe.Just(m))) {
                  return Data_Functor.map(Data_Validation_Semigroup.functorV)(function ($4) {
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Example_RealWorld_Data_Options.Dollars($4));
                  })(Example_App_Validation.validateInt(str));
              };
              if (Data_Boolean.otherwise) {
                  return Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupArray))(Data_Maybe.Nothing.value);
              };
              throw new Error("Failed pattern match at Example.RealWorld.Spec.OptionsForm line 45, column 5 - line 47, column 33: " + [ m.constructor.name, str.constructor.name ]);
          };
      };
      return {
          enable: Formless_Validation_Semigroup.onInputField(Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupUnit)))(v.enable),
          metric: Formless_Validation_Semigroup.onInputField(Example_App_Validation.validateMaybe)(v.metric),
          viewCost: Formless_Validation_Semigroup.onInputField(validateMetric(Example_RealWorld_Data_Options.ViewCost.value))(v.viewCost),
          clickCost: Formless_Validation_Semigroup.onInputField(validateMetric(Example_RealWorld_Data_Options.ClickCost.value))(v.clickCost),
          installCost: Formless_Validation_Semigroup.onInputField(validateMetric(Example_RealWorld_Data_Options.InstallCost.value))(v.installCost),
          size: Formless_Validation_Semigroup.onInputField(validateInt)(v.size),
          dimensions: Formless_Validation_Semigroup.onInputField(validateInt)(v.dimensions),
          speed: Formless_Validation_Semigroup.onInputField(Control_Applicative.pure(Data_Validation_Semigroup.applicativeV(Data_Semigroup.semigroupUnit)))(v.speed)
      };
  };
  var optionsFormSpec = Formless_Spec_Transform.mkFormSpecFromProxy()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "clickCost";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "dimensions";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "enable";
  }))(Formless_Class_Initial.initialBoolean)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "installCost";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "metric";
  }))(Formless_Class_Initial.initialMaybe)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "size";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "speed";
  }))(Example_RealWorld_Data_Options.initialSpeed)()(Formless_Spec_Transform.mkFormSpecFromRowCons(new Data_Symbol.IsSymbol(function () {
      return "viewCost";
  }))(Formless_Class_Initial.initialString)()(Formless_Spec_Transform.mkFormSpecFromRowNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Example_RealWorld_Data_Options.newtypeOptionsForm)(Example_RealWorld_Data_Options.newtypeOptionsForm)(Formless_Spec.FormProxy.value);
  var defaultOptionsSpec = Formless_Spec_Transform.mkFormSpec()(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
      return "clickCost";
  }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
      return "dimensions";
  }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
      return "enable";
  }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
      return "installCost";
  }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
      return "metric";
  }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
      return "size";
  }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
      return "speed";
  }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordCons(new Data_Symbol.IsSymbol(function () {
      return "viewCost";
  }))()(Formless_Spec.newtypeFormSpec)(Formless_Internal.wrapRecordNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Example_RealWorld_Data_Options.newtypeOptionsForm)({
      enable: false,
      metric: new Data_Maybe.Just(Example_RealWorld_Data_Options.ViewCost.value),
      viewCost: "1",
      clickCost: "",
      installCost: "",
      size: "1",
      dimensions: "1",
      speed: Example_RealWorld_Data_Options.Medium.value
  });
  exports["optionsFormSpec"] = optionsFormSpec;
  exports["defaultOptionsSpec"] = defaultOptionsSpec;
  exports["optionsFormValidate"] = optionsFormValidate;
})(PS["Example.RealWorld.Spec.OptionsForm"] = PS["Example.RealWorld.Spec.OptionsForm"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Symbol = PS["Data.Symbol"];
  var Data_Unit = PS["Data.Unit"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Console = PS["Effect.Console"];
  var Example_App_UI_Dropdown = PS["Example.App.UI.Dropdown"];
  var Example_App_UI_Element = PS["Example.App.UI.Element"];
  var Example_App_UI_Typeahead = PS["Example.App.UI.Typeahead"];
  var Example_RealWorld_Data_Group = PS["Example.RealWorld.Data.Group"];
  var Example_RealWorld_Data_Options = PS["Example.RealWorld.Data.Options"];
  var Example_RealWorld_Render_GroupForm = PS["Example.RealWorld.Render.GroupForm"];
  var Example_RealWorld_Render_OptionsForm = PS["Example.RealWorld.Render.OptionsForm"];
  var Example_RealWorld_Spec_GroupForm = PS["Example.RealWorld.Spec.GroupForm"];
  var Example_RealWorld_Spec_OptionsForm = PS["Example.RealWorld.Spec.OptionsForm"];
  var Example_RealWorld_Types = PS["Example.RealWorld.Types"];
  var Formless = PS["Formless"];
  var Formless_Class_Initial = PS["Formless.Class.Initial"];
  var Formless_Internal = PS["Formless.Internal"];
  var Formless_Spec = PS["Formless.Spec"];
  var Formless_Spec_Transform = PS["Formless.Spec.Transform"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Prelude = PS["Prelude"];                 
  var component = (function () {
      var render = function (st) {
          return Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A complex form inspired by real-world use cases.") ]), Example_App_UI_Element.p_("This component demonstrates building a large form with complex rendering and validation " + ("requirements. Notice how both tabs end up unifying to a single output type after the " + ("two forms are combined, how various dropdowns determine the contents (and visibility) " + ("of other form elements, the assorted external components, and how validation for many " + "fields depends on the values of other fields in the form.")))), Halogen_HTML_Elements.br_, Example_App_UI_Element.p_("Next, review the source code. You'll notice that all of the complex types and state necessary " + ("to run this form can be generated from a pair of row types. All that's left for you to handle " + "is to write the validation (with helper functions) and the render function.")), Halogen_HTML_Elements.br_, Example_App_UI_Element.grouped_([ Example_App_UI_Element.button([ Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Example_RealWorld_Types.Select.create(Example_RealWorld_Types.GroupTab.value))) ])([ Example_App_UI_Element.p_("Group Form" + (function () {
              var $23 = st.groupFormErrors > 0;
              if ($23) {
                  return " (" + (Data_Show.show(Data_Show.showInt)(st.groupFormErrors) + ")");
              };
              return "";
          })()) ]), Example_App_UI_Element.button([ Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Example_RealWorld_Types.Select.create(Example_RealWorld_Types.OptionsTab.value))) ])([ Example_App_UI_Element.p_("Options Form" + (function () {
              var $24 = st.optionsFormErrors > 0;
              if ($24) {
                  return " (" + (Data_Show.show(Data_Show.showInt)(st.optionsFormErrors) + ")");
              };
              return "";
          })()) ]), Example_App_UI_Element.buttonPrimary([ Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Example_RealWorld_Types.Submit.create)) ])([ Halogen_HTML_Core.text("Submit Form") ]), Example_App_UI_Element.button([ (function () {
              var $25 = st.groupFormDirty || st.optionsFormDirty;
              if ($25) {
                  return Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(Example_RealWorld_Types.Reset.create));
              };
              return Halogen_HTML_Properties.disabled(true);
          })() ])([ Halogen_HTML_Core.text("Reset All") ]) ]), Halogen_HTML_Elements.div([ (function () {
              var $26 = Data_Eq.eq(Example_RealWorld_Types.eqTab)(st.focus)(Example_RealWorld_Types.GroupTab.value);
              if ($26) {
                  return Example_App_UI_Element.css("");
              };
              return Example_App_UI_Element.css("is-hidden");
          })() ])([ Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Formless.component(Data_Either.ordEither(Example_RealWorld_Types.ordGroupTASlot)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Ord.ordVoid))))(Effect_Aff.monadAff)()()()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal.eqInput(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Formless_Internal.eqInput(Data_Eq.eqArray(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Formless_Internal.eqInput(Data_Eq.eqArray(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Formless_Internal.eqInput(Data_Maybe.eqMaybe(Example_RealWorld_Data_Group.eqAdmin))))(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.formSpecToInputFieldNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.inputFieldsToInputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedNil))))))))(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.inputFieldToMaybeOutputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.countErrorsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))()(Formless_Internal.nilAllTouched))))))))(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.nilSumRecord(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)(Example_RealWorld_Data_Group.newtypeGroupForm)(Example_RealWorld_Data_Group.newtypeGroupForm)(Example_RealWorld_Data_Group.newtypeGroupForm))({
              formSpec: Example_RealWorld_Spec_GroupForm.groupFormSpec,
              validator: Example_RealWorld_Spec_GroupForm.groupFormValidate(Effect_Aff.monadAff),
              submitter: Example_RealWorld_Spec_GroupForm.groupFormSubmit(Effect_Aff.monadAff),
              render: Example_RealWorld_Render_GroupForm.render
          })(Halogen_HTML_Events.input(Example_RealWorld_Types.GroupForm.create)) ]), Halogen_HTML_Elements.div([ (function () {
              var $27 = Data_Eq.eq(Example_RealWorld_Types.eqTab)(st.focus)(Example_RealWorld_Types.OptionsTab.value);
              if ($27) {
                  return Example_App_UI_Element.css("");
              };
              return Example_App_UI_Element.css("is-hidden");
          })() ])([ Halogen_HTML["slot'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Formless.component(Data_Ord.ordUnit)(Effect_Aff.monadAff)()()()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Formless_Internal.eqInput(Example_RealWorld_Data_Options.eqSpeed)))()(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Formless_Internal.eqInput(Data_Maybe.eqMaybe(Example_RealWorld_Data_Options.eqMetric))))()(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Formless_Internal.eqInput(Data_Eq.eqBoolean)))()(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Formless_Internal.eqInput(Data_Eq.eqString)))(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal.formSpecToInputFieldCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal.formSpecToInputFieldNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal.inputFieldsToInputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal.row1Cons()())(Formless_Internal.setInputFieldsTouchedNil)))))))))(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal.inputFieldToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal.inputFieldToMaybeOutputNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal.countErrorsCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal.countErrorsNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal.nilAllTouched)))))))))(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.consSumRecord(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt))()(Formless_Internal.nilSumRecord(Data_Monoid_Additive.monoidAdditive(Data_Semiring.semiringInt)))))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)(Example_RealWorld_Data_Options.newtypeOptionsForm)(Example_RealWorld_Data_Options.newtypeOptionsForm)(Example_RealWorld_Data_Options.newtypeOptionsForm))({
              formSpec: Example_RealWorld_Spec_OptionsForm.defaultOptionsSpec,
              validator: Data_Functor.map(Data_Functor.functorFn)(Control_Applicative.pure(Effect_Aff.applicativeAff))(Example_RealWorld_Spec_OptionsForm.optionsFormValidate),
              submitter: function ($83) {
                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Example_RealWorld_Data_Options.Options(Formless_Spec_Transform.unwrapOutput()(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "clickCost";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "dimensions";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "enable";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "installCost";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "metric";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "size";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "speed";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                      return "viewCost";
                  }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Example_RealWorld_Data_Options.newtypeOptionsForm)($83)));
              },
              render: Example_RealWorld_Render_OptionsForm.render
          })(Halogen_HTML_Events.input(Example_RealWorld_Types.OptionsForm.create)) ]) ]);
      };
      var initialState = {
          focus: Example_RealWorld_Types.GroupTab.value,
          groupFormErrors: 0,
          groupFormDirty: false,
          optionsFormErrors: 0,
          optionsFormDirty: false,
          optionsEnabled: false,
          group: Data_Maybe.Nothing.value
      };
      var $$eval = function (v) {
          if (v instanceof Example_RealWorld_Types.Select) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                  var $29 = {};
                  for (var $30 in v1) {
                      if ({}.hasOwnProperty.call(v1, $30)) {
                          $29[$30] = v1[$30];
                      };
                  };
                  $29.focus = v.value0;
                  return $29;
              }))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              });
          };
          if (v instanceof Example_RealWorld_Types.Reset) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless["send'"](Halogen_Component_ChildPath.cp1)(Example_RealWorld_Types.Applications.value)(Halogen_Query.action(Example_App_UI_Typeahead.Clear.create)))))(function (v1) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless["send'"](Halogen_Component_ChildPath.cp1)(Example_RealWorld_Types.Pixels.value)(Halogen_Query.action(Example_App_UI_Typeahead.Clear.create)))))(function (v2) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless["send'"](Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.action(Example_App_UI_Typeahead.Clear.create)))))(function (v3) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless["send'"](Halogen_Component_ChildPath.cp3)(Data_Unit.unit)(Halogen_Query.action(Example_App_UI_Dropdown.Clear.create)))))(function (v4) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.action(Formless.Send.create(Data_Unit.unit)(Halogen_Query.action(Example_App_UI_Dropdown.Clear.create)))))(function (v5) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless.ResetAll.create)))(function (v6) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.action(Formless.ResetAll.create)))(function (v7) {
                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          };
          if (v instanceof Example_RealWorld_Types.Submit) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.request(Formless.SubmitReply.create)))(function (v1) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.request(Formless.SubmitReply.create)))(function (v2) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)((function () {
                          if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                              return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v4) {
                                  var $39 = {};
                                  for (var $40 in v4) {
                                      if ({}.hasOwnProperty.call(v4, $40)) {
                                          $39[$40] = v4[$40];
                                      };
                                  };
                                  $39.group = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.over(Example_RealWorld_Data_Group.newtypeGroup)(Example_RealWorld_Data_Group.newtypeGroup)(Example_RealWorld_Data_Group.Group)(function (v5) {
                                      return {
                                          options: v2.value0,
                                          admin: v5.admin,
                                          applications: v5.applications,
                                          id: v5.id,
                                          name: v5.name,
                                          pixels: v5.pixels,
                                          secretKey: v5.secretKey,
                                          whiskey: v5.whiskey
                                      };
                                  }))(v1.value0);
                                  return $39;
                              });
                          };
                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.error("Forms did not validate."));
                      })())(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v3) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.log(Data_Show.show(Data_Maybe.showMaybe(Example_RealWorld_Data_Group.showGroup))(v3.group))))(function () {
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                              });
                          });
                      });
                  });
              });
          };
          if (v instanceof Example_RealWorld_Types.GroupForm) {
              if (v.value0 instanceof Formless.Emit) {
                  return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)($$eval(v.value0.value0))(v.value1);
              };
              if (v.value0 instanceof Formless.Submitted) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              };
              if (v.value0 instanceof Formless.Changed) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                      var $49 = {};
                      for (var $50 in st) {
                          if ({}.hasOwnProperty.call(st, $50)) {
                              $49[$50] = st[$50];
                          };
                      };
                      $49.groupFormErrors = v.value0.value0.errors;
                      $49.groupFormDirty = v.value0.value0.dirty;
                      return $49;
                  }))(function () {
                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                  });
              };
              throw new Error("Failed pattern match at Example.RealWorld.Component line 154, column 22 - line 162, column 15: " + [ v.value0.constructor.name ]);
          };
          if (v instanceof Example_RealWorld_Types.TASingle) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).whiskey)(v.value0.value0)))));
          };
          if (v instanceof Example_RealWorld_Types.TAMulti) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value2)((function () {
                  if (v.value0 instanceof Example_RealWorld_Types.Applications) {
                      return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "admin";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).applications)(v.value1.value0))));
                  };
                  if (v.value0 instanceof Example_RealWorld_Types.Pixels) {
                      return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "admin";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).pixels)(v.value1.value0))));
                  };
                  throw new Error("Failed pattern match at Example.RealWorld.Component line 167, column 55 - line 171, column 93: " + [ v.value0.constructor.name ]);
              })());
          };
          if (v instanceof Example_RealWorld_Types.AdminDropdown) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless.Reset.create(Formless_Spec_Transform.resetField(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Class_Initial.initialString)(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).secretKey1)))))(function (v1) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless.Reset.create(Formless_Spec_Transform.resetField(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Class_Initial.initialString)(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).secretKey2)))))(function (v2) {
                      if (v.value0 instanceof Example_App_UI_Dropdown.Selected) {
                          return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                              return "admin";
                          }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "admin";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "applications";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "name";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "pixels";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "secretKey1";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "secretKey2";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "whiskey";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).admin)(new Data_Maybe.Just(v.value0.value0)))));
                      };
                      if (v.value0 instanceof Example_App_UI_Dropdown.Cleared) {
                          return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp1)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                              return "admin";
                          }))(Example_RealWorld_Data_Group.newtypeGroupForm)()((Example_RealWorld_Data_Group.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "admin";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "applications";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "name";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "pixels";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "secretKey1";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "secretKey2";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "whiskey";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil))))))))(Example_RealWorld_Data_Group.newtypeGroupForm)).admin)(Data_Maybe.Nothing.value))));
                      };
                      throw new Error("Failed pattern match at Example.RealWorld.Component line 176, column 7 - line 180, column 98: " + [ v.value0.constructor.name ]);
                  });
              }));
          };
          if (v instanceof Example_RealWorld_Types.OptionsForm) {
              if (v.value0 instanceof Formless.Emit) {
                  return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)($$eval(v.value0.value0))(v.value1);
              };
              if (v.value0 instanceof Formless.Submitted) {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              };
              if (v.value0 instanceof Formless.Changed) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                          var $71 = {};
                          for (var $72 in v2) {
                              if ({}.hasOwnProperty.call(v2, $72)) {
                                  $71[$72] = v2[$72];
                              };
                          };
                          $71.optionsFormErrors = v.value0.value0.errors;
                          $71.optionsFormDirty = v.value0.value0.dirty;
                          $71.optionsEnabled = Formless_Spec_Transform.getInput(new Data_Symbol.IsSymbol(function () {
                              return "enable";
                          }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "clickCost";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "dimensions";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "enable";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "installCost";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "metric";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "size";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "speed";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                              return "viewCost";
                          }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).enable)(v.value0.value0.form);
                          return $71;
                      }))(function (v2) {
                          var validator = Data_Functor.map(Data_Functor.functorFn)(Control_Applicative.pure(Effect_Aff.applicativeAff))(Example_RealWorld_Spec_OptionsForm.optionsFormValidate);
                          var submitter = function ($84) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(Example_RealWorld_Data_Options.Options(Formless_Spec_Transform.unwrapOutput()(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                                  return "clickCost";
                              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                                  return "dimensions";
                              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                                  return "enable";
                              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                                  return "installCost";
                              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                                  return "metric";
                              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                                  return "size";
                              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                                  return "speed";
                              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordCons(new Data_Symbol.IsSymbol(function () {
                                  return "viewCost";
                              }))()(Formless_Spec.newtypeOutputField)(Formless_Internal.unwrapRecordNil)(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Formless_Internal.row1Cons()()))(Example_RealWorld_Data_Options.newtypeOptionsForm)($84)));
                          };
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(v1.optionsEnabled !== v2.optionsEnabled)((function () {
                              if (v2.optionsEnabled) {
                                  var spec$prime = Example_RealWorld_Data_Options.OptionsForm((function (v3) {
                                      return {
                                          enable: true,
                                          clickCost: v3.clickCost,
                                          dimensions: v3.dimensions,
                                          installCost: v3.installCost,
                                          metric: v3.metric,
                                          size: v3.size,
                                          speed: v3.speed,
                                          viewCost: v3.viewCost
                                      };
                                  })(Data_Newtype.unwrap(Example_RealWorld_Data_Options.newtypeOptionsForm)(Example_RealWorld_Spec_OptionsForm.optionsFormSpec)));
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.action(Formless.Replace.create({
                                      formSpec: spec$prime,
                                      submitter: submitter,
                                      validator: validator
                                  }))))(function (v3) {
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  });
                              };
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.action(Formless.Replace.create({
                                  formSpec: Example_RealWorld_Spec_OptionsForm.defaultOptionsSpec,
                                  submitter: submitter,
                                  validator: validator
                              }))))(function (v3) {
                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                              });
                          })()))(function () {
                              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at Example.RealWorld.Component line 185, column 24 - line 210, column 15: " + [ v.value0.constructor.name ]);
          };
          if (v instanceof Example_RealWorld_Types.MetricDropdown) {
              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(v.value1)((function () {
                  if (v.value0 instanceof Example_App_UI_Dropdown.Selected) {
                      return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                          return "metric";
                      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "clickCost";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "dimensions";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "enable";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "installCost";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "metric";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "size";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "speed";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "viewCost";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).metric)(new Data_Maybe.Just(v.value0.value0)))));
                  };
                  if (v.value0 instanceof Example_App_UI_Dropdown.Cleared) {
                      return Halogen_Query["query'"](Data_Either.eqEither(Data_Eq.eqUnit)(Data_Either.eqEither(Data_Eq.eqUnit)(Data_Eq.eqVoid)))(Halogen_Component_ChildPath.cp2)(Data_Unit.unit)(Halogen_Query.action(Formless.ModifyValidate.create(Formless_Spec_Transform.setInput(new Data_Symbol.IsSymbol(function () {
                          return "metric";
                      }))(Example_RealWorld_Data_Options.newtypeOptionsForm)()((Example_RealWorld_Data_Options.proxies()(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "clickCost";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "dimensions";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "enable";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "installCost";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "metric";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "size";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "speed";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "viewCost";
                      }))(Formless_Internal.row1Cons()())(Formless_Spec_Transform.makeSProxiesNil)))))))))(Example_RealWorld_Data_Options.newtypeOptionsForm)).metric)(Data_Maybe.Nothing.value))));
                  };
                  throw new Error("Failed pattern match at Example.RealWorld.Component line 212, column 32 - line 216, column 96: " + [ v.value0.constructor.name ]);
              })());
          };
          throw new Error("Failed pattern match at Example.RealWorld.Component line 119, column 10 - line 216, column 96: " + [ v.constructor.name ]);
      };
      return Halogen_Component.parentComponent(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Either.ordEither(Data_Ord.ordUnit)(Data_Ord.ordVoid)))({
          initialState: Data_Function["const"](initialState),
          render: render,
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  exports["component"] = component;
})(PS["Example.RealWorld.Component"] = PS["Example.RealWorld.Component"] || {});
(function(exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeDecodeURI = decodeURI;
  exports.unsafeEncodeURI = encodeURI;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Global.Unsafe"];
  exports["unsafeDecodeURI"] = $foreign.unsafeDecodeURI;
  exports["unsafeEncodeURI"] = $foreign.unsafeEncodeURI;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Ref = PS["Effect.Ref"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM = PS["Web.DOM"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX_ = function (dictApplicative) {
      return function (f) {
          return unDriverStateX(function (st) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
          });
      };
  };
  var mkRenderStateX = function (v) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  var renderStateX = function (dictFunctor) {
      return function (f) {
          return unDriverStateX(function (st) {
              return mkRenderStateX(st.prjQuery)(f(st.rendering));
          });
      };
  };
  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
  var initDriverState = function (component) {
      return function (input) {
          return function (handler) {
              return function (prjQuery) {
                  return function (lchs) {
                      return function __do() {
                          var v = Effect_Ref["new"]({})();
                          var v1 = Effect_Ref["new"](Data_Map_Internal.empty)();
                          var v2 = Effect_Ref["new"](Data_Map_Internal.empty)();
                          var v3 = Effect_Ref["new"](Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value))();
                          var v4 = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                          var v5 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                          var v6 = Effect_Ref["new"](0)();
                          var v7 = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                          var ds = {
                              component: component,
                              state: component.initialState(input),
                              refs: Data_Map_Internal.empty,
                              children: Data_Map_Internal.empty,
                              childrenIn: v1,
                              childrenOut: v2,
                              selfRef: v,
                              handler: handler,
                              pendingQueries: v3,
                              pendingOuts: v4,
                              pendingHandlers: v5,
                              rendering: Data_Maybe.Nothing.value,
                              prjQuery: prjQuery,
                              fresh: v6,
                              subscriptions: v7,
                              lifecycleHandlers: lchs
                          };
                          Effect_Ref.write(ds)(v)();
                          return mkDriverStateXRef(v);
                      };
                  };
              };
          };
      };
  };
  exports["unDriverStateX"] = unDriverStateX;
  exports["mkDriverStateXRef"] = mkDriverStateXRef;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unRenderStateX"] = unRenderStateX;
  exports["initDriverState"] = initDriverState;
})(PS["Halogen.Aff.Driver.State"] = PS["Halogen.Aff.Driver.State"] || {});
(function(exports) {
    "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Unsafe.Reference"]; 
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Applicative_Free = PS["Control.Applicative.Free"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Fork_Class = PS["Control.Monad.Fork.Class"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Set = PS["Data.Set"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Ref = PS["Effect.Ref"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_ForkF = PS["Halogen.Query.ForkF"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];
  var Unsafe_Reference = PS["Unsafe.Reference"];                 
  var queuingHandler = function (handler) {
      return function (ref) {
          return function (message) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return handler(message);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(handler(message), v.value0)))(ref));
                  };
                  throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 171, column 3 - line 175, column 59: " + [ v.constructor.name ]);
              });
          };
      };
  };
  var handleLifecycle = function (lchs) {
      return function (f) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
              initializers: Data_List_Types.Nil.value,
              finalizers: Data_List_Types.Nil.value
          })(lchs)))(function () {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (v) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v1.finalizers))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v1.initializers))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v);
                          });
                      });
                  });
              });
          });
      };
  };
  var $$eval = function (render) {
      return function (r) {
          var go = function (ref) {
              return function (v) {
                  if (v instanceof Halogen_Query_HalogenM.State) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          var v2 = v.value0(v1.state);
                          if (Unsafe_Reference.unsafeRefEq(v1.state)(v2.value1)) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v2.value0);
                          };
                          if (Data_Boolean.otherwise) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                                  component: v1.component,
                                  state: v2.value1,
                                  refs: v1.refs,
                                  children: v1.children,
                                  childrenIn: v1.childrenIn,
                                  childrenOut: v1.childrenOut,
                                  selfRef: v1.selfRef,
                                  handler: v1.handler,
                                  pendingQueries: v1.pendingQueries,
                                  pendingOuts: v1.pendingOuts,
                                  pendingHandlers: v1.pendingHandlers,
                                  rendering: v1.rendering,
                                  prjQuery: v1.prjQuery,
                                  fresh: v1.fresh,
                                  subscriptions: v1.subscriptions,
                                  lifecycleHandlers: v1.lifecycleHandlers
                              })(ref)))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v1.lifecycleHandlers)(render(v1.lifecycleHandlers)(ref)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v2.value0);
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 76, column 7 - line 82, column 21: " + [ v2.constructor.name ]);
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Subscribe) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                                  return {
                                      state: i + 1 | 0,
                                      value: i
                                  };
                              })(v1.fresh)))(function (v3) {
                                  var done$prime = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.subscriptions)))(function (v4) {
                                      return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Data_Ord.ordInt)(v3))(v4))(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Data_Ord.ordInt)(v3)))(v1.subscriptions)));
                                  });
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Data_Ord.ordInt)(v3)(done$prime)))(v1.subscriptions)))(function () {
                                      var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (v4) {
                                          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.subscriptions))))(function (v5) {
                                              return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Maybe.isJust(v5))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(evalF(ref)(v4)))(function (v6) {
                                                  return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v6)(Halogen_Query_EventSource.Listening.value))(consumer);
                                              }));
                                          });
                                      });
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v2.producer)))(function () {
                                          return done$prime;
                                      });
                                  });
                              });
                          })))(function (v2) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1);
                          });
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Lift) {
                      return v.value0;
                  };
                  if (v instanceof Halogen_Query_HalogenM.Halt) {
                      return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(v.value0));
                  };
                  if (v instanceof Halogen_Query_HalogenM.GetSlots) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_List.fromFoldable(Data_Set.foldableSet)(Data_Map.keys(v1.children)))));
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.CheckSlot) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Data_Map_Internal.member(Halogen_Data_OrdBox.ordOrdBox)(v1.component.mkOrdBox(v.value0))(v1.children)));
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.ChildQuery) {
                      return evalChildQuery(ref)(v.value0)(v.value1);
                  };
                  if (v instanceof Halogen_Query_HalogenM.Raise) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queuingHandler(v1.handler)(v1.pendingOuts)(v.value0))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1);
                          });
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Par) {
                      return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($103) {
                          return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(evalM(ref)($103));
                      })(v.value0)));
                  };
                  if (v instanceof Halogen_Query_HalogenM.Fork) {
                      return Halogen_Query_ForkF.unFork(function (v1) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)))(function (v2) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Function.flip(Effect_Aff.killFiber)(v2)));
                          });
                      })(v.value0);
                  };
                  if (v instanceof Halogen_Query_HalogenM.GetRef) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v.value0)(v1.refs)));
                      });
                  };
                  throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 73, column 12 - line 128, column 33: " + [ v.constructor.name ]);
              };
          };
          var evalM = function (ref) {
              return function (v) {
                  return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(ref))(v);
              };
          };
          var evalF = function (ref) {
              return function (q) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                      var v1 = v["component"]["eval"](q);
                      return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(ref))(v1);
                  });
              };
          };
          var evalChildQuery = function (ref) {
              return function (p) {
                  return Data_Coyoneda.unCoyoneda(function (k) {
                      return function (q) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                              var v1 = Data_Map_Internal.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.component.mkOrdBox(p))(v.children);
                              if (v1 instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.value0)))(function (v2) {
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                          var v3 = ds.prjQuery(q);
                                          if (v3 instanceof Data_Maybe.Just) {
                                              return Data_Functor.map(Effect_Aff.functorAff)(k)(evalF(ds.selfRef)(v3.value0));
                                          };
                                          if (v3 instanceof Data_Maybe.Nothing) {
                                              return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Query projection failed for child query"));
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 141, column 32 - line 143, column 82: " + [ v3.constructor.name ]);
                                      })(v2);
                                  });
                              };
                              if (v1 instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Slot lookup failed for child query"));
                              };
                              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 138, column 5 - line 144, column 73: " + [ v1.constructor.name ]);
                          });
                      };
                  });
              };
          };
          return function (v) {
              if (v instanceof Halogen_Query_InputF.RefUpdate) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(function (v1) {
                      return {
                          component: v1.component,
                          state: v1.state,
                          refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(v1.refs),
                          children: v1.children,
                          childrenIn: v1.childrenIn,
                          childrenOut: v1.childrenOut,
                          selfRef: v1.selfRef,
                          handler: v1.handler,
                          pendingQueries: v1.pendingQueries,
                          pendingOuts: v1.pendingOuts,
                          pendingHandlers: v1.pendingHandlers,
                          rendering: v1.rendering,
                          prjQuery: v1.prjQuery,
                          fresh: v1.fresh,
                          subscriptions: v1.subscriptions,
                          lifecycleHandlers: v1.lifecycleHandlers
                      };
                  })(r)))(function () {
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value2);
                  });
              };
              if (v instanceof Halogen_Query_InputF.Query) {
                  return evalF(r)(v.value0);
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 59, column 3 - line 64, column 25: " + [ v.constructor.name ]);
          };
      };
  };
  exports["handleLifecycle"] = handleLifecycle;
  exports["eval"] = $$eval;
  exports["queuingHandler"] = queuingHandler;
})(PS["Halogen.Aff.Driver.Eval"] = PS["Halogen.Aff.Driver.Eval"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Fork_Class = PS["Control.Monad.Fork.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Map_Internal = PS["Data.Map.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Aff_AVar = PS["Effect.Aff.AVar"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Console = PS["Effect.Console"];
  var Effect_Exception = PS["Effect.Exception"];
  var Effect_Ref = PS["Effect.Ref"];
  var Halogen = PS["Halogen"];
  var Halogen_Aff_Driver_Eval = PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Prelude = PS["Prelude"];                 
  var newLifecycleHandlers = Effect_Ref["new"]({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
  });
  var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var runUI = function (renderSpec) {
      return function (component) {
          return function (i) {
              var subscribe = function (fresh) {
                  return function (ref) {
                      return function (consumer) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                  var v1 = Effect_Ref.read(fresh)();
                                  Effect_Ref.modify_(function (v2) {
                                      return v2 + 1 | 0;
                                  })(fresh)();
                                  Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(v1)(v))(ref)();
                                  return v1;
                              }))(function (v1) {
                                  var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Left.create)(Effect_Aff_AVar.take(v)));
                                  return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(v1))(ref)))(function () {
                                          return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(v);
                                      });
                                  })));
                              });
                          });
                      };
                  };
              };
              var rootHandler = function (ref) {
                  return function (message) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                          return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(v));
                      });
                  };
              };
              var handlePending = function (ref) {
                  return function __do() {
                      var v = Effect_Ref.read(ref)();
                      Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
                      return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v)(function ($63) {
                          return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($63)));
                      })();
                  };
              };
              var cleanupSubscriptions = function (v) {
                  return function __do() {
                      Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($64) {
                          return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))($64));
                      }))(Effect_Ref.read(v.subscriptions))();
                      return Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
                  };
              };
              var squashChildInitializers = function (lchs) {
                  return function (preInits) {
                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                          var parentInitializer = Data_Functor.map(Data_Maybe.functorMaybe)(function ($65) {
                              return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($65));
                          })(st.component.initializer);
                          return Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.sequence_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function () {
                                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                              handlePending(st.pendingQueries)();
                                              return handlePending(st.pendingOuts)();
                                          });
                                      });
                                  }), preInits),
                                  finalizers: handlers.finalizers
                              };
                          })(lchs);
                      });
                  };
              };
              var runComponent = function (lchs) {
                  return function (handler) {
                      return function (j) {
                          return function (prjQuery) {
                              return Halogen_Component.unComponent(function (c) {
                                  return function __do() {
                                      var v = newLifecycleHandlers();
                                      var v1 = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(prjQuery)(v)();
                                      var v2 = Effect_Ref.read(lchs)();
                                      Effect_Ref.write({
                                          initializers: Data_List_Types.Nil.value,
                                          finalizers: v2.finalizers
                                      })(lchs)();
                                      Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX(function ($66) {
                                          return render(lchs)((function (v3) {
                                              return v3.selfRef;
                                          })($66));
                                      }))(Effect_Ref.read(v1))();
                                      Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(v2.initializers))(Effect_Ref.read(v1))();
                                      return v1;
                                  };
                              });
                          };
                      };
                  };
              };
              var renderChild = function (lchs) {
                  return function (handler) {
                      return function (mkOrdBox) {
                          return function (childrenInRef) {
                              return function (childrenOutRef) {
                                  return Halogen_Component.unComponentSlot(function (p) {
                                      return function (ctor) {
                                          return function (input) {
                                              return function (inputQuery) {
                                                  return function (outputQuery) {
                                                      return function (prjQuery) {
                                                          var ordP = mkOrdBox(p);
                                                          return function __do() {
                                                              var v = Effect_Ref.read(childrenInRef)();
                                                              var v1 = (function () {
                                                                  var v1 = Data_Map_Internal.pop(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v);
                                                                  if (v1 instanceof Data_Maybe.Just) {
                                                                      Effect_Ref.write(v1.value0.value1)(childrenInRef)();
                                                                      Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(inputQuery(input))(function (q) {
                                                                          return function __do() {
                                                                              var v2 = Effect_Ref.read(v1.value0.value0)();
                                                                              return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                                                  return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(st.prjQuery(q))(function ($67) {
                                                                                      return handleAff(evalF(st.selfRef)(Halogen_Query_InputF.Query.create($67)));
                                                                                  });
                                                                              })(v2)();
                                                                          };
                                                                      })();
                                                                      return v1.value0.value0;
                                                                  };
                                                                  if (v1 instanceof Data_Maybe.Nothing) {
                                                                      return runComponent(lchs)(function ($68) {
                                                                          return Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler)(outputQuery($68));
                                                                      })(input)(prjQuery)(ctor)();
                                                                  };
                                                                  throw new Error("Failed pattern match at Halogen.Aff.Driver line 258, column 14 - line 266, column 92: " + [ v1.constructor.name ]);
                                                              })();
                                                              var v2 = Data_Functor.map(Effect.functorEffect)(Data_Map_Internal.member(Halogen_Data_OrdBox.ordOrdBox)(ordP))(Effect_Ref.read(childrenOutRef))();
                                                              Control_Applicative.when(Effect.applicativeEffect)(v2)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                                              Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v1))(childrenOutRef)();
                                                              return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v1))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v3) {
                                                                  if (v3 instanceof Data_Maybe.Nothing) {
                                                                      return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                                                  };
                                                                  if (v3 instanceof Data_Maybe.Just) {
                                                                      return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v3.value0));
                                                                  };
                                                                  throw new Error("Failed pattern match at Halogen.Aff.Driver line 271, column 37 - line 273, column 50: " + [ v3.constructor.name ]);
                                                              }))();
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  });
                              };
                          };
                      };
                  };
              };
              var render = function (lchs) {
                  return function ($$var) {
                      return function __do() {
                          var v = Effect_Ref.read($$var)();
                          var v1 = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                          Control_Applicative.when(Effect.applicativeEffect)(v1)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                          Effect_Ref.write(Data_Map_Internal.empty)(v.childrenOut)();
                          Effect_Ref.write(v.children)(v.childrenIn)();
                          var handler = Halogen_Aff_Driver_Eval.queuingHandler(function ($69) {
                              return Data_Functor["void"](Effect_Aff.functorAff)(evalF(v.selfRef)($69));
                          })(v.pendingHandlers);
                          var childHandler = Halogen_Aff_Driver_Eval.queuingHandler(function ($70) {
                              return handler(Halogen_Query_InputF.Query.create($70));
                          })(v.pendingQueries);
                          var v2 = renderSpec.render(function ($71) {
                              return handleAff(handler($71));
                          })(renderChild(lchs)(childHandler)(v.component.mkOrdBox)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                          var v3 = Effect_Ref.read(v.childrenOut)();
                          Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v.childrenIn))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function (childVar) {
                              return function __do() {
                                  var v4 = Effect_Ref.read(childVar)();
                                  Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(v4)();
                                  return finalize(lchs)(v4)();
                              };
                          }))();
                          Effect_Ref.modify_(function (v4) {
                              return {
                                  rendering: new Data_Maybe.Just(v2),
                                  children: v3,
                                  component: v4.component,
                                  state: v4.state,
                                  refs: v4.refs,
                                  childrenIn: v4.childrenIn,
                                  childrenOut: v4.childrenOut,
                                  selfRef: v4.selfRef,
                                  handler: v4.handler,
                                  pendingQueries: v4.pendingQueries,
                                  pendingOuts: v4.pendingOuts,
                                  pendingHandlers: v4.pendingHandlers,
                                  prjQuery: v4.prjQuery,
                                  fresh: v4.fresh,
                                  subscriptions: v4.subscriptions,
                                  lifecycleHandlers: v4.lifecycleHandlers
                              };
                          })(v.selfRef)();
                          return Control_Applicative.when(Effect.applicativeEffect)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v4) {
                              return function __do() {
                                  var v5 = Effect_Ref.read(v.pendingHandlers)();
                                  Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers)();
                                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($72) {
                                      return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($72)));
                                  })(v5)();
                                  var v6 = Effect_Ref.read(v.pendingHandlers)();
                                  var $57 = Data_Maybe.maybe(false)(Data_List["null"])(v6);
                                  if ($57) {
                                      return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(v.pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                  };
                                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                              };
                          }))();
                      };
                  };
              };
              var finalize = function (lchs) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                      return function __do() {
                          cleanupSubscriptions(st)();
                          Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($73) {
                              return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($73));
                          })(st.component.finalizer))(function (f) {
                              return Effect_Ref.modify_(function (handlers) {
                                  return {
                                      initializers: handlers.initializers,
                                      finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                                  };
                              })(lchs);
                          })();
                          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(finalize(lchs))(Effect_Ref.read))();
                      };
                  });
              };
              var evalF = function (ref) {
                  return Halogen_Aff_Driver_Eval["eval"](render)(ref);
              };
              var evalDriver = function (ref) {
                  return function (prjQuery) {
                      return function (q) {
                          var v = prjQuery(q);
                          if (v instanceof Data_Maybe.Just) {
                              return evalF(ref)(new Halogen_Query_InputF.Query(v.value0));
                          };
                          if (v instanceof Data_Maybe.Nothing) {
                              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception.throwException(Effect_Exception.error("Halogen internal error: query projection failed in runUI'")));
                          };
                          throw new Error("Failed pattern match at Halogen.Aff.Driver line 136, column 5 - line 138, column 113: " + [ v.constructor.name ]);
                      };
                  };
              };
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (v) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (v1) {
                      return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function __do() {
                          var v2 = Effect_Ref["new"](Data_Map_Internal.empty)();
                          return Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(runComponent(v)(rootHandler(v2))(i)(Data_Maybe.Just.create)(component))(Effect_Ref.read))(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                              return Control_Applicative.pure(Effect.applicativeEffect)({
                                  query: evalDriver(st.selfRef)(st.prjQuery),
                                  subscribe: subscribe(v1)(v2)
                              });
                          }))();
                      });
                  });
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS["Halogen.Aff.Driver"] = PS["Halogen.Aff.Driver"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function(exports) {
    "use strict";

  exports._readyState = function (doc) {
    return function () {
      return doc.readyState;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                 
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Interactive = (function () {
      function Interactive() {

      };
      Interactive.value = new Interactive();
      return Interactive;
  })();
  var Complete = (function () {
      function Complete() {

      };
      Complete.value = new Complete();
      return Complete;
  })();
  var parse = function (v) {
      if (v === "loading") {
          return new Data_Maybe.Just(Loading.value);
      };
      if (v === "interactive") {
          return new Data_Maybe.Just(Interactive.value);
      };
      if (v === "complete") {
          return new Data_Maybe.Just(Complete.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Loading"] = Loading;
  exports["Interactive"] = Interactive;
  exports["Complete"] = Complete;
  exports["parse"] = parse;
})(PS["Web.HTML.HTMLDocument.ReadyState"] = PS["Web.HTML.HTMLDocument.ReadyState"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.HTMLDocument"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Internal_Types = PS["Web.DOM.Internal.Types"];
  var Web_DOM_NonElementParentNode = PS["Web.DOM.NonElementParentNode"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_HTML_HTMLDocument_ReadyState = PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_Internal_FFI = PS["Web.Internal.FFI"];                 
  var toParentNode = Unsafe_Coerce.unsafeCoerce; 
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  var readyState = function ($0) {
      return Data_Functor.map(Effect.functorEffect)(function ($1) {
          return Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value)(Web_HTML_HTMLDocument_ReadyState.parse($1));
      })($foreign._readyState($0));
  };
  exports["toDocument"] = toDocument;
  exports["toParentNode"] = toParentNode;
  exports["readyState"] = readyState;
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function(exports) {
    "use strict";

  exports.hash = function (location) {
    return function () {
      return location.hash;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.Location"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  exports["hash"] = $foreign.hash;
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function(exports) {
    "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML.Window"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Effect = PS["Effect"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_History = PS["Web.HTML.History"];
  var Web_HTML_Location = PS["Web.HTML.Location"];
  var Web_HTML_Navigator = PS["Web.HTML.Navigator"];
  var Web_Storage_Storage = PS["Web.Storage.Storage"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var $foreign = PS["Web.HTML"];
  var Effect = PS["Effect"];
  var Web_HTML_HTMLAnchorElement = PS["Web.HTML.HTMLAnchorElement"];
  var Web_HTML_HTMLAreaElement = PS["Web.HTML.HTMLAreaElement"];
  var Web_HTML_HTMLAudioElement = PS["Web.HTML.HTMLAudioElement"];
  var Web_HTML_HTMLBRElement = PS["Web.HTML.HTMLBRElement"];
  var Web_HTML_HTMLBaseElement = PS["Web.HTML.HTMLBaseElement"];
  var Web_HTML_HTMLBodyElement = PS["Web.HTML.HTMLBodyElement"];
  var Web_HTML_HTMLButtonElement = PS["Web.HTML.HTMLButtonElement"];
  var Web_HTML_HTMLCanvasElement = PS["Web.HTML.HTMLCanvasElement"];
  var Web_HTML_HTMLDListElement = PS["Web.HTML.HTMLDListElement"];
  var Web_HTML_HTMLDataElement = PS["Web.HTML.HTMLDataElement"];
  var Web_HTML_HTMLDataListElement = PS["Web.HTML.HTMLDataListElement"];
  var Web_HTML_HTMLDivElement = PS["Web.HTML.HTMLDivElement"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_HTML_HTMLEmbedElement = PS["Web.HTML.HTMLEmbedElement"];
  var Web_HTML_HTMLFieldSetElement = PS["Web.HTML.HTMLFieldSetElement"];
  var Web_HTML_HTMLFormElement = PS["Web.HTML.HTMLFormElement"];
  var Web_HTML_HTMLHRElement = PS["Web.HTML.HTMLHRElement"];
  var Web_HTML_HTMLHeadElement = PS["Web.HTML.HTMLHeadElement"];
  var Web_HTML_HTMLHeadingElement = PS["Web.HTML.HTMLHeadingElement"];
  var Web_HTML_HTMLIFrameElement = PS["Web.HTML.HTMLIFrameElement"];
  var Web_HTML_HTMLImageElement = PS["Web.HTML.HTMLImageElement"];
  var Web_HTML_HTMLInputElement = PS["Web.HTML.HTMLInputElement"];
  var Web_HTML_HTMLKeygenElement = PS["Web.HTML.HTMLKeygenElement"];
  var Web_HTML_HTMLLIElement = PS["Web.HTML.HTMLLIElement"];
  var Web_HTML_HTMLLabelElement = PS["Web.HTML.HTMLLabelElement"];
  var Web_HTML_HTMLLegendElement = PS["Web.HTML.HTMLLegendElement"];
  var Web_HTML_HTMLLinkElement = PS["Web.HTML.HTMLLinkElement"];
  var Web_HTML_HTMLMapElement = PS["Web.HTML.HTMLMapElement"];
  var Web_HTML_HTMLMediaElement = PS["Web.HTML.HTMLMediaElement"];
  var Web_HTML_HTMLMetaElement = PS["Web.HTML.HTMLMetaElement"];
  var Web_HTML_HTMLMeterElement = PS["Web.HTML.HTMLMeterElement"];
  var Web_HTML_HTMLModElement = PS["Web.HTML.HTMLModElement"];
  var Web_HTML_HTMLOListElement = PS["Web.HTML.HTMLOListElement"];
  var Web_HTML_HTMLObjectElement = PS["Web.HTML.HTMLObjectElement"];
  var Web_HTML_HTMLOptGroupElement = PS["Web.HTML.HTMLOptGroupElement"];
  var Web_HTML_HTMLOptionElement = PS["Web.HTML.HTMLOptionElement"];
  var Web_HTML_HTMLOutputElement = PS["Web.HTML.HTMLOutputElement"];
  var Web_HTML_HTMLParagraphElement = PS["Web.HTML.HTMLParagraphElement"];
  var Web_HTML_HTMLParamElement = PS["Web.HTML.HTMLParamElement"];
  var Web_HTML_HTMLPreElement = PS["Web.HTML.HTMLPreElement"];
  var Web_HTML_HTMLProgressElement = PS["Web.HTML.HTMLProgressElement"];
  var Web_HTML_HTMLQuoteElement = PS["Web.HTML.HTMLQuoteElement"];
  var Web_HTML_HTMLScriptElement = PS["Web.HTML.HTMLScriptElement"];
  var Web_HTML_HTMLSelectElement = PS["Web.HTML.HTMLSelectElement"];
  var Web_HTML_HTMLSourceElement = PS["Web.HTML.HTMLSourceElement"];
  var Web_HTML_HTMLSpanElement = PS["Web.HTML.HTMLSpanElement"];
  var Web_HTML_HTMLStyleElement = PS["Web.HTML.HTMLStyleElement"];
  var Web_HTML_HTMLTableCaptionElement = PS["Web.HTML.HTMLTableCaptionElement"];
  var Web_HTML_HTMLTableCellElement = PS["Web.HTML.HTMLTableCellElement"];
  var Web_HTML_HTMLTableColElement = PS["Web.HTML.HTMLTableColElement"];
  var Web_HTML_HTMLTableDataCellElement = PS["Web.HTML.HTMLTableDataCellElement"];
  var Web_HTML_HTMLTableElement = PS["Web.HTML.HTMLTableElement"];
  var Web_HTML_HTMLTableHeaderCellElement = PS["Web.HTML.HTMLTableHeaderCellElement"];
  var Web_HTML_HTMLTableRowElement = PS["Web.HTML.HTMLTableRowElement"];
  var Web_HTML_HTMLTableSectionElement = PS["Web.HTML.HTMLTableSectionElement"];
  var Web_HTML_HTMLTemplateElement = PS["Web.HTML.HTMLTemplateElement"];
  var Web_HTML_HTMLTextAreaElement = PS["Web.HTML.HTMLTextAreaElement"];
  var Web_HTML_HTMLTimeElement = PS["Web.HTML.HTMLTimeElement"];
  var Web_HTML_HTMLTitleElement = PS["Web.HTML.HTMLTitleElement"];
  var Web_HTML_HTMLTrackElement = PS["Web.HTML.HTMLTrackElement"];
  var Web_HTML_HTMLUListElement = PS["Web.HTML.HTMLUListElement"];
  var Web_HTML_HTMLVideoElement = PS["Web.HTML.HTMLVideoElement"];
  var Web_HTML_History = PS["Web.HTML.History"];
  var Web_HTML_Location = PS["Web.HTML.Location"];
  var Web_HTML_Navigator = PS["Web.HTML.Navigator"];
  var Web_HTML_Window = PS["Web.HTML.Window"];
  exports["window"] = $foreign.window;
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Exception = PS["Effect.Exception"];
  var Prelude = PS["Prelude"];
  var Web_DOM_ParentNode = PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_HTML = PS["Web.HTML"];
  var Web_HTML_Event_EventTypes = PS["Web.HTML.Event.EventTypes"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLDocument_ReadyState = PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = PS["Web.HTML.Window"];                 
  var selectElement = function (query) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(function ($12) {
          return Web_DOM_ParentNode.querySelector(query)(Web_HTML_HTMLDocument.toParentNode($12));
      })(Web_HTML_Window.document))(Web_HTML.window)))(function (v) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v));
      });
  };
  var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var awaitLoad = Effect_Aff.makeAff(function (callback) {
      return function __do() {
          var v = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
          if (v instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
              var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var v2 = Web_Event_EventTarget.eventListener(function (v2) {
                  return callback(new Data_Either.Right(Data_Unit.unit));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1)();
              return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1));
          };
          callback(new Data_Either.Right(Data_Unit.unit))();
          return Effect_Aff.nonCanceler;
      };
  });
  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
      return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (v) {
          return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(v);
      });
  });
  exports["awaitLoad"] = awaitLoad;
  exports["awaitBody"] = awaitBody;
  exports["selectElement"] = selectElement;
  exports["runHalogenAff"] = runHalogenAff;
})(PS["Halogen.Aff.Util"] = PS["Halogen.Aff.Util"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Const = PS["Data.Const"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Prelude = PS["Prelude"];
  var proxyEval = function (evalQuery) {
      return function (component) {
          var render = function (i) {
              return Halogen_HTML.slot(Data_Unit.unit)(component)(i)(Data_Function["const"](Data_Maybe.Nothing.value));
          };
          var $$eval = function (v) {
              return Data_Coyoneda.unCoyoneda(evalQuery)(v.value0);
          };
          return Halogen_Component.parentComponent(Data_Ord.ordUnit)({
              initialState: Control_Category.identity(Control_Category.categoryFn),
              render: render,
              "eval": $$eval,
              receiver: Data_Function["const"](Data_Maybe.Nothing.value)
          });
      };
  };
  var proxy = proxyEval(Data_Function["const"](function ($3) {
      return Data_Void.absurd(Data_Newtype.un(Data_Const.newtypeConst)(Data_Const.Const)($3));
  }));
  exports["proxy"] = proxy;
})(PS["Halogen.Storybook.Proxy"] = PS["Halogen.Storybook.Proxy"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Prelude = PS["Prelude"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Node = PS["Web.DOM.Node"];
  var eqElemSpec = function (a, b) {
      if (a.value1 === b.value1) {
          if (a.value0 instanceof Data_Maybe.Just && (b.value0 instanceof Data_Maybe.Just && a.value0.value0 === b.value0.value0)) {
              return true;
          };
          if (a.value0 instanceof Data_Maybe.Nothing && b.value0 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var buildWidget = (function () {
      var patch = function (build, v) {
          return function (v1) {
              if (v1 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(build, v)(Halogen_VDom_Types.runGraft(v1.value0));
              };
              if (v1 instanceof Halogen_VDom_Types.Widget) {
                  var v2 = v.value1(v1.value0);
                  return new Halogen_VDom_Machine.Step(v2.value0, patch(build, v2), v2.value2);
              };
              v.value2();
              return build(v1);
          };
      };
      var render = function (v, build, w) {
          var v1 = v.buildWidget(v)(w);
          return new Halogen_VDom_Machine.Step(v1.value0, patch(build, v1), v1.value2);
      };
      return render;
  })();
  var buildText = (function () {
      var patch = function (build, halt, node, s1) {
          return function (v) {
              if (v instanceof Halogen_VDom_Types.Grafted) {
                  return patch(build, halt, node, s1)(Halogen_VDom_Types.runGraft(v.value0));
              };
              if (v instanceof Halogen_VDom_Types.Text) {
                  var res = new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v.value0), halt);
                  var $84 = s1 === v.value0;
                  if ($84) {
                      return res;
                  };
                  Halogen_VDom_Util.setTextContent(v.value0, node);
                  return res;
              };
              halt();
              return build(v);
          };
      };
      var done = function (node) {
          return function __do() {
              var v = Halogen_VDom_Util.parentNode(node);
              return Halogen_VDom_Util.removeChild(node, v);
          };
      };
      var render = function (v, build, s) {
          var v1 = Halogen_VDom_Util.createTextNode(s, v.document);
          var halt = done(v1);
          return new Halogen_VDom_Machine.Step(v1, patch(build, halt, v1, s), halt);
      };
      return render;
  })();
  var buildKeyed = (function () {
      var done = function (node, attrs, steps) {
          return function __do() {
              var v = Halogen_VDom_Util.parentNode(node);
              Halogen_VDom_Util.removeChild(node, v);
              Halogen_VDom_Util.forInE(steps, function (v1, v2) {
                  return v2.value2();
              });
              return Halogen_VDom_Machine.halt(attrs)();
          };
      };
      var patch = function (build, halt, node, attrs, v, ch1, len1) {
          return function (v1) {
              if (v1 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(build, halt, node, attrs, v, ch1, len1)(Halogen_VDom_Types.runGraft(v1.value0));
              };
              if (v1 instanceof Halogen_VDom_Types.Keyed && eqElemSpec(v, v1.value0)) {
                  var v2 = Data_Array.length(v1.value1);
                  if (len1 === 0 && v2 === 0) {
                      var v4 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
                      var halt$prime = done(node, v4, ch1);
                      return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v4, v1.value0, ch1, 0), halt$prime);
                  };
                  var onThis = function (v4, v5) {
                      return v5.value2();
                  };
                  var onThese = function (v4, ix$prime, v5, v6) {
                      var v7 = v5.value1(v6.value1);
                      Halogen_VDom_Util.insertChildIx(ix$prime, v7.value0, node);
                      return v7;
                  };
                  var onThat = function (v4, ix, v5) {
                      var v6 = build(v5.value1);
                      Halogen_VDom_Util.insertChildIx(ix, v6.value0, node);
                      return v6;
                  };
                  var v4 = Halogen_VDom_Util.diffWithKeyAndIxE(ch1, v1.value1, Data_Tuple.fst, onThese, onThis, onThat);
                  var v5 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
                  var halt$prime = done(node, v5, v4);
                  return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v5, v1.value0, v4, v2), halt$prime);
              };
              halt();
              return build(v1);
          };
      };
      var render = function (v, build, v1, ch1) {
          var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document);
          var node = Web_DOM_Element.toNode(v2);
          var onChild = function (k, ix, v3) {
              var v4 = build(v3.value1);
              Halogen_VDom_Util.insertChildIx(ix, v4.value0, node);
              return v4;
          };
          var v3 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
          var v4 = v.buildAttributes(v2)(v1.value2);
          var halt = done(node, v4, v3);
          return new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v4, v1, v3, Data_Array.length(ch1)), halt);
      };
      return render;
  })();
  var buildElem = (function () {
      var done = function (node, attrs, steps) {
          return function __do() {
              var v = Halogen_VDom_Util.parentNode(node);
              Halogen_VDom_Util.removeChild(node, v);
              Effect.foreachE(steps)(Halogen_VDom_Machine.halt)();
              return Halogen_VDom_Machine.halt(attrs)();
          };
      };
      var patch = function (build, halt, node, attrs, v, ch1) {
          return function (v1) {
              if (v1 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(build, halt, node, attrs, v, ch1)(Halogen_VDom_Types.runGraft(v1.value0));
              };
              if (v1 instanceof Halogen_VDom_Types.Elem && eqElemSpec(v, v1.value0)) {
                  var v2 = Data_Array.length(v1.value1);
                  var v3 = Data_Array.length(ch1);
                  if (v3 === 0 && v2 === 0) {
                      var v4 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
                      var halt$prime = done(node, v4, ch1);
                      return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v4, v1.value0, ch1), halt$prime);
                  };
                  var onThis = function (ix, v4) {
                      return v4.value2();
                  };
                  var onThese = function (ix, v4, vdom) {
                      var v5 = v4.value1(vdom);
                      Halogen_VDom_Util.insertChildIx(ix, v5.value0, node);
                      return v5;
                  };
                  var onThat = function (ix, vdom) {
                      var v4 = build(vdom);
                      Halogen_VDom_Util.insertChildIx(ix, v4.value0, node);
                      return v4;
                  };
                  var v4 = Halogen_VDom_Util.diffWithIxE(ch1, v1.value1, onThese, onThis, onThat);
                  var v5 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
                  var halt$prime = done(node, v5, v4);
                  return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v5, v1.value0, v4), halt$prime);
              };
              halt();
              return build(v1);
          };
      };
      var render = function (v, build, v1, ch1) {
          var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document);
          var node = Web_DOM_Element.toNode(v2);
          var onChild = function (ix, child) {
              var v3 = build(child);
              Halogen_VDom_Util.insertChildIx(ix, v3.value0, node);
              return v3;
          };
          var v3 = Halogen_VDom_Util.forE(ch1, onChild);
          var v4 = v.buildAttributes(v2)(v1.value2);
          var halt = done(node, v4, v3);
          return new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v4, v1, v3), halt);
      };
      return render;
  })();
  var buildVDom = function (spec) {
      var build = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec, build, v.value0, v.value1);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec, build, v.value0, v.value1);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return build(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM line 58, column 27 - line 63, column 52: " + [ v.constructor.name ]);
      };
      return build;
  };
  exports["buildVDom"] = buildVDom;
  exports["buildText"] = buildText;
  exports["buildElem"] = buildElem;
  exports["buildKeyed"] = buildKeyed;
  exports["buildWidget"] = buildWidget;
})(PS["Halogen.VDom.DOM"] = PS["Halogen.VDom.DOM"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Effect_Ref = PS["Effect.Ref"];
  var Effect_Uncurried = PS["Effect.Uncurried"];
  var Halogen_Aff_Driver = PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_DOM = PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Prelude = PS["Prelude"];
  var Unsafe_Reference = PS["Unsafe.Reference"];
  var Web_DOM_Document = PS["Web.DOM.Document"];
  var Web_DOM_Element = PS["Web.DOM.Element"];
  var Web_DOM_Node = PS["Web.DOM.Node"];
  var Web_HTML = PS["Web.HTML"];
  var Web_HTML_HTMLDocument = PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = PS["Web.HTML.Window"];
  var substInParent = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
  };
  var removeChild = function (v) {
      return function __do() {
          var v1 = Web_DOM_Node.parentNode(v.node)();
          return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
              return Web_DOM_Node.removeChild(v.node)(pn);
          })(v1)();
      };
  };
  var mkSpec = function (handler) {
      return function (renderChildRef) {
          return function (document) {
              var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                  return v.node;
              });
              var done = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              var patch = function (slot) {
                  var v = Effect_Ref.read(renderChildRef)();
                  var v1 = v(slot)();
                  var node = getNode(v1);
                  return new Halogen_VDom_Machine.Step(node, patch, done);
              };
              var buildWidget = function (spec) {
                  return function (slot) {
                      var v = Effect_Ref.read(renderChildRef)();
                      var v1 = v(slot)();
                      var node = getNode(v1);
                      return new Halogen_VDom_Machine.Step(node, patch, done);
                  };
              };
              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
              return {
                  buildWidget: buildWidget,
                  buildAttributes: buildAttributes,
                  document: document
              };
          };
      };
  };
  var renderSpec = function (document) {
      return function (container) {
          var render = function (handler) {
              return function (child) {
                  return function (v) {
                      return function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return function __do() {
                                  var v2 = Effect_Ref["new"](child)();
                                  var spec = mkSpec(handler)(v2)(document);
                                  var v3 = Halogen_VDom_DOM.buildVDom(spec)(v);
                                  var node = Halogen_VDom_Machine.extract(v3);
                                  Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                                  return {
                                      machine: v3,
                                      node: node,
                                      renderChildRef: v2
                                  };
                              };
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Effect_Ref.write(child)(v1.value0.renderChildRef)();
                                  var v2 = Web_DOM_Node.parentNode(v1.value0.node)();
                                  var v3 = Web_DOM_Node.nextSibling(v1.value0.node)();
                                  var v4 = Halogen_VDom_Machine.step(v1.value0.machine)(v);
                                  var newNode = Halogen_VDom_Machine.extract(v4);
                                  Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(v3)(v2))();
                                  return {
                                      machine: v4,
                                      node: newNode,
                                      renderChildRef: v1.value0.renderChildRef
                                  };
                              };
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver line 118, column 5 - line 134, column 80: " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          return {
              render: render,
              renderChild: Control_Category.identity(Control_Category.categoryFn),
              removeChild: removeChild
          };
      };
  };
  var runUI = function (component) {
      return function (i) {
          return function (element) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (v) {
                  return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i);
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS["Halogen.VDom.Driver"] = PS["Halogen.VDom.Driver"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Web_Event_Event = PS["Web.Event.Event"];                 
  var hashchange = "hashchange";
  exports["hashchange"] = hashchange;
})(PS["Web.HTML.Event.HashChangeEvent.EventTypes"] = PS["Web.HTML.Event.HashChangeEvent.EventTypes"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_CodeUnits = PS["Data.String.CodeUnits"];
  var Data_String_Pattern = PS["Data.String.Pattern"];
  var Effect = PS["Effect"];
  var Effect_Ref = PS["Effect.Ref"];
  var Prelude = PS["Prelude"];
  var Routing = PS["Routing"];
  var Routing_Match = PS["Routing.Match"];
  var Web_Event_EventTarget = PS["Web.Event.EventTarget"];
  var Web_HTML = PS["Web.HTML"];
  var Web_HTML_Event_HashChangeEvent_EventTypes = PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var Web_HTML_Location = PS["Web.HTML.Location"];
  var Web_HTML_Window = PS["Web.HTML.Window"];
  var getHash = function __do() {
      var $8 = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
      return Data_Functor.map(Effect.functorEffect)(function ($9) {
          return Data_Maybe.fromMaybe("")(Data_String_CodeUnits.stripPrefix("#")($9));
      })(Web_HTML_Location.hash($8))();
  };
  var foldHashes = function (cb) {
      return function (init) {
          return function __do() {
              var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(getHash))();
              var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var v2 = Web_Event_EventTarget.eventListener(function (v2) {
                  return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(v))(Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(cb)(Effect_Ref.read(v)))(getHash)));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1)();
              return Web_Event_EventTarget.removeEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1);
          };
      };
  };
  var matchesWith = function (dictFoldable) {
      return function (parser) {
          return function (cb) {
              var go = function (a) {
                  return function ($10) {
                      return Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {
                          return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));
                      })(Data_Foldable.indexl(dictFoldable)(0)(parser($10)));
                  };
              };
              return foldHashes(go)(go(Data_Maybe.Nothing.value));
          };
      };
  };
  var hashes = matchesWith(Data_Foldable.foldableMaybe)(Data_Maybe.Just.create);
  exports["getHash"] = getHash;
  exports["foldHashes"] = foldHashes;
  exports["hashes"] = hashes;
  exports["matchesWith"] = matchesWith;
})(PS["Routing.Hash"] = PS["Routing.Hash"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Const = PS["Data.Const"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_String_Common = PS["Data.String.Common"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Effect_Aff = PS["Effect.Aff"];
  var Effect_Class = PS["Effect.Class"];
  var Foreign_Object = PS["Foreign.Object"];
  var Global_Unsafe = PS["Global.Unsafe"];
  var Halogen = PS["Halogen"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Halogen_Storybook_Proxy = PS["Halogen.Storybook.Proxy"];
  var Halogen_VDom_Driver = PS["Halogen.VDom.Driver"];
  var Prelude = PS["Prelude"];
  var Routing_Hash = PS["Routing.Hash"];
  var Web_HTML_HTMLElement = PS["Web.HTML.HTMLElement"];                 
  var RouteChange = (function () {
      function RouteChange(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RouteChange.create = function (value0) {
          return function (value1) {
              return new RouteChange(value0, value1);
          };
      };
      return RouteChange;
  })();
  var renderMain = function (stories) {
      return function (state) {
          var v = Foreign_Object.lookup(state.route)(stories);
          if (v instanceof Data_Maybe.Just) {
              return Halogen_HTML.slot(state.route)(v.value0)(Data_Unit.unit)(Data_Void.absurd);
          };
          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h2_([ Halogen_HTML_Core.text("Hello world") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("This site is powered by "), Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/rnons/purescript-halogen-storybook") ])([ Halogen_HTML_Core.text("halogen-storybook") ]), Halogen_HTML_Core.text(".") ]) ]);
      };
  };
  var class_ = function ($26) {
      return Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName($26));
  };
  var renderSidebar = function (stories) {
      return function (v) {
          var linkActiveClass = "Storybook-link" + " is-active";
          return Halogen_HTML_Elements.ul([ class_("Storybook-nav") ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Array.filter(function ($27) {
              return !Data_String_Common["null"]($27);
          })(Foreign_Object.keys(stories)))(function (name) {
              return Halogen_HTML_Elements.li_([ Halogen_HTML_Elements.a([ class_((function () {
                  var $11 = v.route === name;
                  if ($11) {
                      return linkActiveClass;
                  };
                  return "Storybook-link";
              })()), Halogen_HTML_Properties.href("#" + Global_Unsafe.unsafeEncodeURI(name)) ])([ Halogen_HTML_Core.text(name) ]) ]);
          }));
      };
  };
  var render = function (v) {
      return function (state) {
          return Halogen_HTML_Elements.div([ class_("Storybook") ])([ Halogen_HTML_Elements.a([ class_("Storybook-logo"), Halogen_HTML_Properties.href("#") ])([ (function () {
              if (v.logo instanceof Data_Maybe.Nothing) {
                  return Halogen_HTML_Core.text("Halogen Storybook");
              };
              if (v.logo instanceof Data_Maybe.Just) {
                  return Halogen_HTML.fromPlainHTML(v.logo.value0);
              };
              throw new Error("Failed pattern match at Halogen.Storybook line 95, column 7 - line 97, column 45: " + [ v.logo.constructor.name ]);
          })() ]), renderSidebar(v.stories)(state), Halogen_HTML_Elements.div([ class_("Storybook-main") ])([ renderMain(v.stories)(state) ]) ]);
      };
  };
  var app = function (config) {
      var initialState = {
          route: ""
      };
      var $$eval = function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
              var $20 = {};
              for (var $21 in state) {
                  if ({}.hasOwnProperty.call(state, $21)) {
                      $20[$21] = state[$21];
                  };
              };
              $20.route = v.value0;
              return $20;
          })))(function () {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          });
      };
      return Halogen_Component.parentComponent(Data_Ord.ordString)({
          initialState: Data_Function["const"](initialState),
          render: render(config),
          "eval": $$eval,
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  };
  var runStorybook = function (config) {
      return function (body) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(app(config))(Data_Unit.unit)(body))(function (v) {
              return Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.hashes(function (v1) {
                  return function (next) {
                      return Effect_Aff.launchAff_(v.query(Halogen_Query.action(RouteChange.create(Global_Unsafe.unsafeDecodeURI(next)))));
                  };
              })));
          });
      };
  };
  exports["runStorybook"] = runStorybook;
})(PS["Halogen.Storybook"] = PS["Halogen.Storybook"] || {});
(function(exports) {
  // Generated by purs version 0.12.0
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Effect = PS["Effect"];
  var Effect_Aff = PS["Effect.Aff"];
  var Example_App_Home = PS["Example.App.Home"];
  var Example_Basic_Component = PS["Example.Basic.Component"];
  var Example_ExternalComponents_Component = PS["Example.ExternalComponents.Component"];
  var Example_Polyform_Component = PS["Example.Polyform.Component"];
  var Example_RealWorld_Component = PS["Example.RealWorld.Component"];
  var Foreign_Object = PS["Foreign.Object"];
  var Halogen_Aff = PS["Halogen.Aff"];
  var Halogen_Aff_Util = PS["Halogen.Aff.Util"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Storybook = PS["Halogen.Storybook"];
  var Halogen_Storybook_Proxy = PS["Halogen.Storybook.Proxy"];
  var Prelude = PS["Prelude"];                 
  var stories = Foreign_Object.fromFoldable(Data_Foldable.foldableArray)([ Data_Tuple.Tuple.create("")(Halogen_Storybook_Proxy.proxy(Example_App_Home.component)), Data_Tuple.Tuple.create("basic")(Halogen_Storybook_Proxy.proxy(Example_Basic_Component.component)), Data_Tuple.Tuple.create("polyform")(Halogen_Storybook_Proxy.proxy(Example_Polyform_Component.component)), Data_Tuple.Tuple.create("external-components")(Halogen_Storybook_Proxy.proxy(Example_ExternalComponents_Component.component)), Data_Tuple.Tuple.create("real-world")(Halogen_Storybook_Proxy.proxy(Example_RealWorld_Component.component)) ]);
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (v) {
      return Halogen_Storybook.runStorybook({
          stories: stories,
          logo: Data_Maybe.Just.create(Halogen_HTML_Core.text("Formless"))
      })(v);
  }));
  exports["stories"] = stories;
  exports["main"] = main;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();